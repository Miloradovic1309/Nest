;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 31/08/2021 09:44:58
;----------------------------------------------

;Address Opcode 	ASM
____SysVT:
0x0000	0x4FFC2000  	536891388
0x0004	0x1E710000  	7793
0x0008	0x2DC90000  	11721
0x000C	0x2DC90000  	11721
0x0010	0x2DC90000  	11721
0x0014	0x2DC90000  	11721
0x0018	0x2DC90000  	11721
0x001C	0x2DC90000  	11721
0x0020	0x2DC90000  	11721
0x0024	0x2DC90000  	11721
0x0028	0x2DC90000  	11721
0x002C	0x2DC90000  	11721
0x0030	0x2DC90000  	11721
0x0034	0x2DC90000  	11721
0x0038	0x2DC90000  	11721
0x003C	0x2DC90000  	11721
0x0040	0x2DC90000  	11721
0x0044	0x2DC90000  	11721
0x0048	0x2DC90000  	11721
0x004C	0x2DC90000  	11721
0x0050	0x2DC90000  	11721
0x0054	0x2DC90000  	11721
0x0058	0x2DC90000  	11721
0x005C	0x2DC90000  	11721
0x0060	0x2DC90000  	11721
0x0064	0x2DC90000  	11721
0x0068	0x2DC90000  	11721
0x006C	0x2DC90000  	11721
0x0070	0x2DC90000  	11721
0x0074	0x2DC90000  	11721
0x0078	0x2DC90000  	11721
0x007C	0x2DC90000  	11721
0x0080	0x2DC90000  	11721
0x0084	0x2DC90000  	11721
0x0088	0x2DC90000  	11721
0x008C	0x2DC90000  	11721
0x0090	0x2DC90000  	11721
0x0094	0x2DC90000  	11721
0x0098	0x2DC90000  	11721
0x009C	0x2DC90000  	11721
0x00A0	0x2DC90000  	11721
0x00A4	0x2DC90000  	11721
0x00A8	0x2DC90000  	11721
0x00AC	0x2DC90000  	11721
0x00B0	0x2D790000  	11641
0x00B4	0x2DC90000  	11721
0x00B8	0x2DC90000  	11721
0x00BC	0x2DC90000  	11721
0x00C0	0x2DC90000  	11721
0x00C4	0x2DC90000  	11721
0x00C8	0x2DC90000  	11721
0x00CC	0x2DC90000  	11721
0x00D0	0x2DC90000  	11721
0x00D4	0x28F10000  	10481
0x00D8	0x2DC90000  	11721
0x00DC	0x2DC90000  	11721
0x00E0	0x2DC90000  	11721
0x00E4	0x2DC90000  	11721
0x00E8	0x2DC90000  	11721
0x00EC	0x2DC90000  	11721
0x00F0	0x2DC90000  	11721
0x00F4	0x2DC90000  	11721
0x00F8	0x2DC90000  	11721
0x00FC	0x2DC90000  	11721
0x0100	0x2DC90000  	11721
0x0104	0x2DC90000  	11721
0x0108	0x2DC90000  	11721
0x010C	0x2DC90000  	11721
0x0110	0x2DC90000  	11721
0x0114	0x2DC90000  	11721
0x0118	0x2DC90000  	11721
0x011C	0x2DC90000  	11721
0x0120	0x2DC90000  	11721
0x0124	0x2DC90000  	11721
0x0128	0x2DC90000  	11721
0x012C	0x2DC90000  	11721
; end of ____SysVT
_main:
;nestHelm.c, 50 :: 		void main() {
0x1E70	0xB084    SUB	SP, SP, #16
0x1E72	0xF000FCC5  BL	10240
0x1E76	0xF001F88D  BL	12180
0x1E7A	0xF7FFFFED  BL	7768
0x1E7E	0xF001F83B  BL	12024
;nestHelm.c, 53 :: 		UART1_Init_Advanced(115200, _UART_8_BIT_DATA, _UART_NOPARITY, _UART_ONE_STOPBIT, &_GPIO_MODULE_USART1_PA9_10);
0x1E82	0x4898    LDR	R0, [PC, #608]
0x1E84	0xB401    PUSH	(R0)
0x1E86	0xF2400300  MOVW	R3, #0
0x1E8A	0xF2400200  MOVW	R2, #0
0x1E8E	0xF2400100  MOVW	R1, #0
0x1E92	0xF44F30E1  MOV	R0, #115200
0x1E96	0xF7FFFDBD  BL	_UART1_Init_Advanced+0
0x1E9A	0xB001    ADD	SP, SP, #4
;nestHelm.c, 54 :: 		USART1_CR1bits.RXNEIE = 1;       // enable uart rx interrupt
0x1E9C	0x2101    MOVS	R1, #1
0x1E9E	0xB249    SXTB	R1, R1
0x1EA0	0x4891    LDR	R0, [PC, #580]
0x1EA2	0x6001    STR	R1, [R0, #0]
;nestHelm.c, 55 :: 		NVIC_IntEnable(IVT_INT_USART1);  // enable interrupt vector
0x1EA4	0xF2400035  MOVW	R0, #53
0x1EA8	0xF7FFFF32  BL	_NVIC_IntEnable+0
;nestHelm.c, 58 :: 		GPIO_Digital_Output(&GPIOA_BASE, _GPIO_PINMASK_8);                                            // UART1_RXTX
0x1EAC	0xF2401100  MOVW	R1, #256
0x1EB0	0x488E    LDR	R0, [PC, #568]
0x1EB2	0xF7FFFE29  BL	_GPIO_Digital_Output+0
;nestHelm.c, 64 :: 		_GPIO_CFG_MODE_INPUT | _GPIO_CFG_PULL_DOWN);
0x1EB6	0xF44F7281  MOV	R2, #258
;nestHelm.c, 63 :: 		_GPIO_PINMASK_10,                                                    // THREE_TOUCH
0x1EBA	0xF2404103  MOVW	R1, #1027
;nestHelm.c, 62 :: 		GPIO_Config(&GPIOB_BASE, _GPIO_PINMASK_0 | _GPIO_PINMASK_1 |                                  // ONE_TOUCH, TWO_TOUCH,
0x1EBE	0x488C    LDR	R0, [PC, #560]
;nestHelm.c, 64 :: 		_GPIO_CFG_MODE_INPUT | _GPIO_CFG_PULL_DOWN);
0x1EC0	0xF7FEF9DE  BL	_GPIO_Config+0
;nestHelm.c, 66 :: 		_GPIO_CFG_MODE_INPUT | _GPIO_CFG_PULL_DOWN);
0x1EC4	0xF44F7281  MOV	R2, #258
;nestHelm.c, 65 :: 		GPIO_Config(&GPIOA_BASE, _GPIO_PINMASK_7 | _GPIO_PINMASK_6,                                   // N_TOUCH, R_TOUCH,
0x1EC8	0xF24001C0  MOVW	R1, #192
0x1ECC	0x4887    LDR	R0, [PC, #540]
;nestHelm.c, 66 :: 		_GPIO_CFG_MODE_INPUT | _GPIO_CFG_PULL_DOWN);
0x1ECE	0xF7FEF9D7  BL	_GPIO_Config+0
;nestHelm.c, 68 :: 		_GPIO_PINMASK_13 | _GPIO_PINMASK_12 | _GPIO_PINMASK_11);     // ONE_LIGHT, TWO_LIGHT, THREE_LIGHT
0x1ED2	0xF64F0100  MOVW	R1, #63488
;nestHelm.c, 67 :: 		GPIO_Digital_Output(&GPIOB_BASE, _GPIO_PINMASK_15 | _GPIO_PINMASK_14 |                        // R_LIGHT, N_LIGHT
0x1ED6	0x4886    LDR	R0, [PC, #536]
;nestHelm.c, 68 :: 		_GPIO_PINMASK_13 | _GPIO_PINMASK_12 | _GPIO_PINMASK_11);     // ONE_LIGHT, TWO_LIGHT, THREE_LIGHT
0x1ED8	0xF7FFFE16  BL	_GPIO_Digital_Output+0
;nestHelm.c, 72 :: 		GPIO_Digital_Output(&GPIOA_BASE, _GPIO_PINMASK_15);                                            // WHEEL_LIGHT
0x1EDC	0xF2480100  MOVW	R1, #32768
0x1EE0	0x4882    LDR	R0, [PC, #520]
0x1EE2	0xF7FFFE11  BL	_GPIO_Digital_Output+0
;nestHelm.c, 73 :: 		GPIO_Digital_Output(&GPIOB_BASE, _GPIO_PINMASK_3);                                             // WHEEL_DIODE
0x1EE6	0xF2400108  MOVW	R1, #8
0x1EEA	0x4881    LDR	R0, [PC, #516]
0x1EEC	0xF7FFFE0C  BL	_GPIO_Digital_Output+0
;nestHelm.c, 75 :: 		_GPIO_CFG_MODE_INPUT | _GPIO_CFG_PULL_NO);
0x1EF0	0xF04F0242  MOV	R2, #66
;nestHelm.c, 74 :: 		GPIO_Config(&GPIOA_BASE, _GPIO_PINMASK_4,                                                      // WHEEL_TOUCH
0x1EF4	0xF2400110  MOVW	R1, #16
0x1EF8	0x487C    LDR	R0, [PC, #496]
;nestHelm.c, 75 :: 		_GPIO_CFG_MODE_INPUT | _GPIO_CFG_PULL_NO);
0x1EFA	0xF7FEF9C1  BL	_GPIO_Config+0
;nestHelm.c, 79 :: 		GPIO_Digital_Output(&GPIOA_BASE, _GPIO_PINMASK_5);                                             // WTPSC
0x1EFE	0xF2400120  MOVW	R1, #32
0x1F02	0x487A    LDR	R0, [PC, #488]
0x1F04	0xF7FFFE00  BL	_GPIO_Digital_Output+0
;nestHelm.c, 80 :: 		GPIO_Digital_Output(&GPIOB_BASE, _GPIO_PINMASK_9);                                             // GTPSC
0x1F08	0xF2402100  MOVW	R1, #512
0x1F0C	0x4878    LDR	R0, [PC, #480]
0x1F0E	0xF7FFFDFB  BL	_GPIO_Digital_Output+0
;nestHelm.c, 83 :: 		GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_13);    // LED11
0x1F12	0xF2420100  MOVW	R1, #8192
0x1F16	0x4877    LDR	R0, [PC, #476]
0x1F18	0xF7FFFDF6  BL	_GPIO_Digital_Output+0
;nestHelm.c, 90 :: 		SWJ_CFG0_bit = 0;
0x1F1C	0x2200    MOVS	R2, #0
0x1F1E	0xB252    SXTB	R2, R2
0x1F20	0x4875    LDR	R0, [PC, #468]
0x1F22	0x6002    STR	R2, [R0, #0]
;nestHelm.c, 91 :: 		SWJ_CFG1_bit = 1;
0x1F24	0x2101    MOVS	R1, #1
0x1F26	0xB249    SXTB	R1, R1
0x1F28	0x4874    LDR	R0, [PC, #464]
0x1F2A	0x6001    STR	R1, [R0, #0]
;nestHelm.c, 92 :: 		SWJ_CFG2_bit = 0;
0x1F2C	0x4874    LDR	R0, [PC, #464]
0x1F2E	0x6002    STR	R2, [R0, #0]
;nestHelm.c, 94 :: 		WHEEL_DIODE = 0;
0x1F30	0x4874    LDR	R0, [PC, #464]
0x1F32	0x6002    STR	R2, [R0, #0]
;nestHelm.c, 95 :: 		WHEEL_LIGHT = 0;
0x1F34	0x4874    LDR	R0, [PC, #464]
0x1F36	0x6002    STR	R2, [R0, #0]
;nestHelm.c, 97 :: 		WTPSC = 0;
0x1F38	0x4874    LDR	R0, [PC, #464]
0x1F3A	0x6002    STR	R2, [R0, #0]
;nestHelm.c, 101 :: 		GPIO_Analog_Input(&GPIOA_IDR, _GPIO_PINMASK_0);
0x1F3C	0xF2400101  MOVW	R1, #1
0x1F40	0x4873    LDR	R0, [PC, #460]
0x1F42	0xF7FFFDD5  BL	_GPIO_Analog_Input+0
;nestHelm.c, 102 :: 		ADC1_Init();
0x1F46	0xF7FFFDFD  BL	_ADC1_Init+0
;nestHelm.c, 104 :: 		WTPSC = 1;
0x1F4A	0x2101    MOVS	R1, #1
0x1F4C	0xB249    SXTB	R1, R1
0x1F4E	0x486F    LDR	R0, [PC, #444]
0x1F50	0x6001    STR	R1, [R0, #0]
;nestHelm.c, 105 :: 		LED11 = 1;
0x1F52	0x4870    LDR	R0, [PC, #448]
0x1F54	0x6001    STR	R1, [R0, #0]
;nestHelm.c, 106 :: 		Delay_ms(100);
0x1F56	0xF644777F  MOVW	R7, #20351
0x1F5A	0xF2C00712  MOVT	R7, #18
0x1F5E	0xBF00    NOP
0x1F60	0xBF00    NOP
L_main2:
0x1F62	0x1E7F    SUBS	R7, R7, #1
0x1F64	0xD1FD    BNE	L_main2
0x1F66	0xBF00    NOP
0x1F68	0xBF00    NOP
0x1F6A	0xBF00    NOP
;nestHelm.c, 107 :: 		EEPROM_24C02_Init();
0x1F6C	0xF7FFFDDA  BL	_EEPROM_24C02_Init+0
;nestHelm.c, 108 :: 		Delay_ms(100);
0x1F70	0xF644777F  MOVW	R7, #20351
0x1F74	0xF2C00712  MOVT	R7, #18
L_main4:
0x1F78	0x1E7F    SUBS	R7, R7, #1
0x1F7A	0xD1FD    BNE	L_main4
0x1F7C	0xBF00    NOP
0x1F7E	0xBF00    NOP
0x1F80	0xBF00    NOP
0x1F82	0xBF00    NOP
0x1F84	0xBF00    NOP
;nestHelm.c, 110 :: 		Delay_ms(100);
0x1F86	0xF644777F  MOVW	R7, #20351
0x1F8A	0xF2C00712  MOVT	R7, #18
0x1F8E	0xBF00    NOP
0x1F90	0xBF00    NOP
L_main6:
0x1F92	0x1E7F    SUBS	R7, R7, #1
0x1F94	0xD1FD    BNE	L_main6
0x1F96	0xBF00    NOP
0x1F98	0xBF00    NOP
0x1F9A	0xBF00    NOP
;nestHelm.c, 111 :: 		citajeprom();
0x1F9C	0xF7FFFD4E  BL	_citajeprom+0
;nestHelm.c, 112 :: 		Delay_ms(100);
0x1FA0	0xF644777F  MOVW	R7, #20351
0x1FA4	0xF2C00712  MOVT	R7, #18
L_main8:
0x1FA8	0x1E7F    SUBS	R7, R7, #1
0x1FAA	0xD1FD    BNE	L_main8
0x1FAC	0xBF00    NOP
0x1FAE	0xBF00    NOP
0x1FB0	0xBF00    NOP
0x1FB2	0xBF00    NOP
0x1FB4	0xBF00    NOP
;nestHelm.c, 113 :: 		WTPSC = 0;
0x1FB6	0x2100    MOVS	R1, #0
0x1FB8	0xB249    SXTB	R1, R1
0x1FBA	0x4854    LDR	R0, [PC, #336]
0x1FBC	0x6001    STR	R1, [R0, #0]
;nestHelm.c, 114 :: 		LED11 = 0;
0x1FBE	0x4855    LDR	R0, [PC, #340]
0x1FC0	0x6001    STR	R1, [R0, #0]
;nestHelm.c, 116 :: 		bitResetTouchSensor = 0;
0x1FC2	0x4855    LDR	R0, [PC, #340]
0x1FC4	0x6001    STR	R1, [R0, #0]
;nestHelm.c, 119 :: 		startReceivingData1 = 0;
0x1FC6	0x4855    LDR	R0, [PC, #340]
0x1FC8	0x6001    STR	R1, [R0, #0]
;nestHelm.c, 120 :: 		control_taken = 0;
0x1FCA	0x4855    LDR	R0, [PC, #340]
0x1FCC	0x6001    STR	R1, [R0, #0]
;nestHelm.c, 121 :: 		bitDelay3Seconds = 0;
0x1FCE	0x4855    LDR	R0, [PC, #340]
0x1FD0	0x6001    STR	R1, [R0, #0]
;nestHelm.c, 122 :: 		bitStart3SecondsCount = 0;
0x1FD2	0x4855    LDR	R0, [PC, #340]
0x1FD4	0x6001    STR	R1, [R0, #0]
;nestHelm.c, 123 :: 		countedTimer = 0;
0x1FD6	0x4855    LDR	R0, [PC, #340]
0x1FD8	0x6001    STR	R1, [R0, #0]
;nestHelm.c, 124 :: 		bitRespond = 0;
0x1FDA	0x4855    LDR	R0, [PC, #340]
0x1FDC	0x6001    STR	R1, [R0, #0]
;nestHelm.c, 125 :: 		bitControlTaken = 0;
0x1FDE	0x4855    LDR	R0, [PC, #340]
0x1FE0	0x6001    STR	R1, [R0, #0]
;nestHelm.c, 127 :: 		bitCalSend = 0;
0x1FE2	0x4855    LDR	R0, [PC, #340]
0x1FE4	0x6001    STR	R1, [R0, #0]
;nestHelm.c, 129 :: 		if(leftLimit >= rightLimit){
0x1FE6	0x4855    LDR	R0, [PC, #340]
0x1FE8	0x8801    LDRH	R1, [R0, #0]
0x1FEA	0x4855    LDR	R0, [PC, #340]
0x1FEC	0x8800    LDRH	R0, [R0, #0]
0x1FEE	0x4288    CMP	R0, R1
0x1FF0	0xD307    BCC	L_main10
;nestHelm.c, 130 :: 		sideDifference = leftLimit - rightLimit;
0x1FF2	0x4852    LDR	R0, [PC, #328]
0x1FF4	0x8801    LDRH	R1, [R0, #0]
0x1FF6	0x4852    LDR	R0, [PC, #328]
0x1FF8	0x8800    LDRH	R0, [R0, #0]
0x1FFA	0x1A41    SUB	R1, R0, R1
0x1FFC	0x4851    LDR	R0, [PC, #324]
0x1FFE	0x8001    STRH	R1, [R0, #0]
;nestHelm.c, 131 :: 		}
0x2000	0xE006    B	L_main11
L_main10:
;nestHelm.c, 133 :: 		sideDifference = rightLimit - leftLimit;
0x2002	0x484F    LDR	R0, [PC, #316]
0x2004	0x8801    LDRH	R1, [R0, #0]
0x2006	0x484D    LDR	R0, [PC, #308]
0x2008	0x8800    LDRH	R0, [R0, #0]
0x200A	0x1A41    SUB	R1, R0, R1
0x200C	0x484D    LDR	R0, [PC, #308]
0x200E	0x8001    STRH	R1, [R0, #0]
;nestHelm.c, 134 :: 		}
L_main11:
;nestHelm.c, 136 :: 		if(sideDifference == 0){
0x2010	0x484C    LDR	R0, [PC, #304]
0x2012	0x8800    LDRH	R0, [R0, #0]
0x2014	0xB910    CBNZ	R0, L_main12
;nestHelm.c, 137 :: 		sideDifference = 1;
0x2016	0x2101    MOVS	R1, #1
0x2018	0x484A    LDR	R0, [PC, #296]
0x201A	0x8001    STRH	R1, [R0, #0]
;nestHelm.c, 138 :: 		}
L_main12:
;nestHelm.c, 142 :: 		InitTimer2();
0x201C	0xF7FFFE40  BL	_InitTimer2+0
;nestHelm.c, 146 :: 		while(1){
L_main13:
;nestHelm.c, 150 :: 		WHEEL_DIODE = WHEEL_TOUCH;
0x2020	0x4A49    LDR	R2, [PC, #292]
0x2022	0x6811    LDR	R1, [R2, #0]
0x2024	0x4837    LDR	R0, [PC, #220]
0x2026	0x6001    STR	R1, [R0, #0]
;nestHelm.c, 151 :: 		WHEEL_LIGHT = WHEEL_TOUCH | bitDelay3Seconds;
0x2028	0x483E    LDR	R0, [PC, #248]
0x202A	0x6801    LDR	R1, [R0, #0]
0x202C	0x4610    MOV	R0, R2
0x202E	0x6800    LDR	R0, [R0, #0]
0x2030	0xEA400101  ORR	R1, R0, R1, LSL #0
0x2034	0xB2C9    UXTB	R1, R1
0x2036	0x4834    LDR	R0, [PC, #208]
0x2038	0x6001    STR	R1, [R0, #0]
;nestHelm.c, 153 :: 		if(!bitControlTaken){
0x203A	0x493E    LDR	R1, [PC, #248]
0x203C	0x6808    LDR	R0, [R1, #0]
0x203E	0x2800    CMP	R0, #0
0x2040	0xF0408105  BNE	L_main15
;nestHelm.c, 155 :: 		if (Button(&GPIOB_IDR, 0, 20, 1)){
0x2044	0x2301    MOVS	R3, #1
0x2046	0x2214    MOVS	R2, #20
0x2048	0x2100    MOVS	R1, #0
0x204A	0x4840    LDR	R0, [PC, #256]
0x204C	0xF7FFFDF2  BL	_Button+0
0x2050	0xB180    CBZ	R0, L_main16
;nestHelm.c, 156 :: 		ONE_LIGHT = 1;
0x2052	0x2101    MOVS	R1, #1
0x2054	0xB249    SXTB	R1, R1
0x2056	0x483E    LDR	R0, [PC, #248]
0x2058	0x6001    STR	R1, [R0, #0]
;nestHelm.c, 157 :: 		TWO_LIGHT = THREE_LIGHT = N_LIGHT = R_LIGHT = 0;
0x205A	0x2100    MOVS	R1, #0
0x205C	0xB249    SXTB	R1, R1
0x205E	0x483D    LDR	R0, [PC, #244]
0x2060	0x6001    STR	R1, [R0, #0]
0x2062	0x6801    LDR	R1, [R0, #0]
0x2064	0x483C    LDR	R0, [PC, #240]
0x2066	0x6001    STR	R1, [R0, #0]
0x2068	0x6801    LDR	R1, [R0, #0]
0x206A	0x483C    LDR	R0, [PC, #240]
0x206C	0x6001    STR	R1, [R0, #0]
0x206E	0x6801    LDR	R1, [R0, #0]
0x2070	0x483B    LDR	R0, [PC, #236]
0x2072	0x6001    STR	R1, [R0, #0]
;nestHelm.c, 160 :: 		}
L_main16:
;nestHelm.c, 162 :: 		if (Button(&GPIOB_IDR, 1, 20, 1)){
0x2074	0x2301    MOVS	R3, #1
0x2076	0x2214    MOVS	R2, #20
0x2078	0x2101    MOVS	R1, #1
0x207A	0x4834    LDR	R0, [PC, #208]
0x207C	0xF7FFFDDA  BL	_Button+0
0x2080	0xB180    CBZ	R0, L_main17
;nestHelm.c, 163 :: 		TWO_LIGHT = 1;
0x2082	0x2101    MOVS	R1, #1
0x2084	0xB249    SXTB	R1, R1
0x2086	0x4836    LDR	R0, [PC, #216]
0x2088	0x6001    STR	R1, [R0, #0]
;nestHelm.c, 164 :: 		ONE_LIGHT = THREE_LIGHT = N_LIGHT = R_LIGHT = 0;
0x208A	0x2100    MOVS	R1, #0
0x208C	0xB249    SXTB	R1, R1
0x208E	0x4831    LDR	R0, [PC, #196]
0x2090	0x6001    STR	R1, [R0, #0]
0x2092	0x6801    LDR	R1, [R0, #0]
0x2094	0x4830    LDR	R0, [PC, #192]
0x2096	0x6001    STR	R1, [R0, #0]
0x2098	0x6801    LDR	R1, [R0, #0]
0x209A	0x4830    LDR	R0, [PC, #192]
0x209C	0x6001    STR	R1, [R0, #0]
0x209E	0x6801    LDR	R1, [R0, #0]
0x20A0	0x482B    LDR	R0, [PC, #172]
0x20A2	0x6001    STR	R1, [R0, #0]
;nestHelm.c, 165 :: 		}
L_main17:
;nestHelm.c, 167 :: 		if (Button(&GPIOB_IDR, 10, 20, 1)){
0x20A4	0x2301    MOVS	R3, #1
0x20A6	0x2214    MOVS	R2, #20
0x20A8	0x210A    MOVS	R1, #10
0x20AA	0x4828    LDR	R0, [PC, #160]
0x20AC	0xF7FFFDC2  BL	_Button+0
0x20B0	0xB180    CBZ	R0, L_main18
;nestHelm.c, 168 :: 		THREE_LIGHT = 1;
0x20B2	0x2101    MOVS	R1, #1
0x20B4	0xB249    SXTB	R1, R1
0x20B6	0x4829    LDR	R0, [PC, #164]
0x20B8	0x6001    STR	R1, [R0, #0]
;nestHelm.c, 169 :: 		TWO_LIGHT = ONE_LIGHT = N_LIGHT = R_LIGHT = 0;
0x20BA	0x2100    MOVS	R1, #0
0x20BC	0xB249    SXTB	R1, R1
0x20BE	0x4825    LDR	R0, [PC, #148]
0x20C0	0x6001    STR	R1, [R0, #0]
0x20C2	0x6801    LDR	R1, [R0, #0]
0x20C4	0x4824    LDR	R0, [PC, #144]
0x20C6	0x6001    STR	R1, [R0, #0]
0x20C8	0x6801    LDR	R1, [R0, #0]
0x20CA	0x4821    LDR	R0, [PC, #132]
0x20CC	0x6001    STR	R1, [R0, #0]
0x20CE	0x6801    LDR	R1, [R0, #0]
0x20D0	0x4823    LDR	R0, [PC, #140]
0x20D2	0x6001    STR	R1, [R0, #0]
;nestHelm.c, 170 :: 		}
L_main18:
;nestHelm.c, 172 :: 		if (Button(&GPIOA_IDR, 7, 20, 1)){
0x20D4	0x2301    MOVS	R3, #1
0x20D6	0x2214    MOVS	R2, #20
0x20D8	0x2107    MOVS	R1, #7
0x20DA	0x480D    LDR	R0, [PC, #52]
0x20DC	0xF7FFFDAA  BL	_Button+0
0x20E0	0xF000B840  B	#128
0x20E4	0x2DD00000  	__GPIO_MODULE_USART1_PA9_10+0
0x20E8	0x01944227  	USART1_CR1bits+0
0x20EC	0x08004001  	GPIOA_BASE+0
0x20F0	0x0C004001  	GPIOB_BASE+0
0x20F4	0x10004001  	GPIOC_BASE+0
0x20F8	0x00E04220  	SWJ_CFG0_bit+0
0x20FC	0x00E44220  	SWJ_CFG1_bit+0
0x2100	0x00E84220  	SWJ_CFG2_bit+0
0x2104	0x818C4221  	GPIOB_ODR+0
0x2108	0x01BC4221  	GPIOA_ODR+0
0x210C	0x01944221  	GPIOA_ODR+0
0x2110	0x08084001  	GPIOA_IDR+0
0x2114	0x01B44222  	GPIOC_ODR+0
0x2118	0x27C02200  	_bitResetTouchSensor+0
0x211C	0x27C42200  	_startReceivingData1+0
0x2120	0x27C82200  	_control_taken+0
0x2124	0x27CC2200  	_bitDelay3Seconds+0
0x2128	0x27D02200  	_bitStart3SecondsCount+0
0x212C	0x27D42200  	_countedTimer+0
0x2130	0x27D82200  	_bitRespond+0
0x2134	0x27DC2200  	_bitControlTaken+0
0x2138	0x27E02200  	_bitCalSend+0
0x213C	0x00022000  	_rightLimit+0
0x2140	0x00002000  	_leftLimit+0
0x2144	0x00042000  	_sideDifference+0
0x2148	0x01104221  	GPIOA_IDR+0
0x214C	0x0C084001  	GPIOB_IDR+0
0x2150	0x81B44221  	GPIOB_ODR+0
0x2154	0x81BC4221  	GPIOB_ODR+0
0x2158	0x81B84221  	GPIOB_ODR+0
0x215C	0x81AC4221  	GPIOB_ODR+0
0x2160	0x81B04221  	GPIOB_ODR+0
0x2164	0xB180    CBZ	R0, L_main19
;nestHelm.c, 173 :: 		N_LIGHT = 1;
0x2166	0x2101    MOVS	R1, #1
0x2168	0xB249    SXTB	R1, R1
0x216A	0x4893    LDR	R0, [PC, #588]
0x216C	0x6001    STR	R1, [R0, #0]
;nestHelm.c, 174 :: 		TWO_LIGHT = THREE_LIGHT = ONE_LIGHT = R_LIGHT = 0;
0x216E	0x2100    MOVS	R1, #0
0x2170	0xB249    SXTB	R1, R1
0x2172	0x4892    LDR	R0, [PC, #584]
0x2174	0x6001    STR	R1, [R0, #0]
0x2176	0x6801    LDR	R1, [R0, #0]
0x2178	0x4891    LDR	R0, [PC, #580]
0x217A	0x6001    STR	R1, [R0, #0]
0x217C	0x6801    LDR	R1, [R0, #0]
0x217E	0x4891    LDR	R0, [PC, #580]
0x2180	0x6001    STR	R1, [R0, #0]
0x2182	0x6801    LDR	R1, [R0, #0]
0x2184	0x4890    LDR	R0, [PC, #576]
0x2186	0x6001    STR	R1, [R0, #0]
;nestHelm.c, 181 :: 		}
L_main19:
;nestHelm.c, 183 :: 		if (Button(&GPIOA_IDR, 6, 20, 1)){
0x2188	0x2301    MOVS	R3, #1
0x218A	0x2214    MOVS	R2, #20
0x218C	0x2106    MOVS	R1, #6
0x218E	0x488F    LDR	R0, [PC, #572]
0x2190	0xF7FFFD50  BL	_Button+0
0x2194	0xB180    CBZ	R0, L_main20
;nestHelm.c, 184 :: 		R_LIGHT = 1;
0x2196	0x2101    MOVS	R1, #1
0x2198	0xB249    SXTB	R1, R1
0x219A	0x4888    LDR	R0, [PC, #544]
0x219C	0x6001    STR	R1, [R0, #0]
;nestHelm.c, 185 :: 		TWO_LIGHT = THREE_LIGHT = N_LIGHT = ONE_LIGHT = 0;
0x219E	0x2100    MOVS	R1, #0
0x21A0	0xB249    SXTB	R1, R1
0x21A2	0x4887    LDR	R0, [PC, #540]
0x21A4	0x6001    STR	R1, [R0, #0]
0x21A6	0x6801    LDR	R1, [R0, #0]
0x21A8	0x4883    LDR	R0, [PC, #524]
0x21AA	0x6001    STR	R1, [R0, #0]
0x21AC	0x6801    LDR	R1, [R0, #0]
0x21AE	0x4885    LDR	R0, [PC, #532]
0x21B0	0x6001    STR	R1, [R0, #0]
0x21B2	0x6801    LDR	R1, [R0, #0]
0x21B4	0x4884    LDR	R0, [PC, #528]
0x21B6	0x6001    STR	R1, [R0, #0]
;nestHelm.c, 186 :: 		}
L_main20:
;nestHelm.c, 194 :: 		if(WHEEL_TOUCH || bitDelay3Seconds){
0x21B8	0x4885    LDR	R0, [PC, #532]
0x21BA	0x6800    LDR	R0, [R0, #0]
0x21BC	0xB918    CBNZ	R0, L__main81
0x21BE	0x4985    LDR	R1, [PC, #532]
0x21C0	0x6808    LDR	R0, [R1, #0]
0x21C2	0xB900    CBNZ	R0, L__main80
0x21C4	0xE032    B	L_main23
L__main81:
L__main80:
;nestHelm.c, 195 :: 		if(WHEEL_TOUCH){
0x21C6	0x4882    LDR	R0, [PC, #520]
0x21C8	0x6800    LDR	R0, [R0, #0]
0x21CA	0xB160    CBZ	R0, L_main24
;nestHelm.c, 196 :: 		bitDelay3Seconds = 1;
0x21CC	0x2101    MOVS	R1, #1
0x21CE	0xB249    SXTB	R1, R1
0x21D0	0x4880    LDR	R0, [PC, #512]
0x21D2	0x6001    STR	R1, [R0, #0]
;nestHelm.c, 197 :: 		bitStart3SecondsCount = 0;
0x21D4	0x2100    MOVS	R1, #0
0x21D6	0xB249    SXTB	R1, R1
0x21D8	0x487F    LDR	R0, [PC, #508]
0x21DA	0x6001    STR	R1, [R0, #0]
;nestHelm.c, 198 :: 		delay3secndsCount = 0;
0x21DC	0x2100    MOVS	R1, #0
0x21DE	0xB209    SXTH	R1, R1
0x21E0	0x487E    LDR	R0, [PC, #504]
0x21E2	0x8001    STRH	R1, [R0, #0]
;nestHelm.c, 199 :: 		}
0x21E4	0xE003    B	L_main25
L_main24:
;nestHelm.c, 201 :: 		bitStart3SecondsCount = 1;
0x21E6	0x2101    MOVS	R1, #1
0x21E8	0xB249    SXTB	R1, R1
0x21EA	0x487B    LDR	R0, [PC, #492]
0x21EC	0x6001    STR	R1, [R0, #0]
;nestHelm.c, 202 :: 		}
L_main25:
;nestHelm.c, 204 :: 		if(THREE_LIGHT == 1){
0x21EE	0x4875    LDR	R0, [PC, #468]
0x21F0	0x6800    LDR	R0, [R0, #0]
0x21F2	0xB110    CBZ	R0, L_main26
;nestHelm.c, 205 :: 		gear_status = 3;
0x21F4	0x2103    MOVS	R1, #3
0x21F6	0x487A    LDR	R0, [PC, #488]
0x21F8	0x8001    STRH	R1, [R0, #0]
;nestHelm.c, 206 :: 		}
L_main26:
;nestHelm.c, 208 :: 		if(TWO_LIGHT == 1){
0x21FA	0x4873    LDR	R0, [PC, #460]
0x21FC	0x6800    LDR	R0, [R0, #0]
0x21FE	0xB110    CBZ	R0, L_main27
;nestHelm.c, 209 :: 		gear_status = 2;
0x2200	0x2102    MOVS	R1, #2
0x2202	0x4877    LDR	R0, [PC, #476]
0x2204	0x8001    STRH	R1, [R0, #0]
;nestHelm.c, 210 :: 		}
L_main27:
;nestHelm.c, 212 :: 		if(ONE_LIGHT == 1){
0x2206	0x486E    LDR	R0, [PC, #440]
0x2208	0x6800    LDR	R0, [R0, #0]
0x220A	0xB110    CBZ	R0, L_main28
;nestHelm.c, 213 :: 		gear_status = 1;
0x220C	0x2101    MOVS	R1, #1
0x220E	0x4874    LDR	R0, [PC, #464]
0x2210	0x8001    STRH	R1, [R0, #0]
;nestHelm.c, 214 :: 		}
L_main28:
;nestHelm.c, 216 :: 		if(R_LIGHT == 1){
0x2212	0x486A    LDR	R0, [PC, #424]
0x2214	0x6800    LDR	R0, [R0, #0]
0x2216	0xB110    CBZ	R0, L_main29
;nestHelm.c, 217 :: 		gear_status = 5;
0x2218	0x2105    MOVS	R1, #5
0x221A	0x4871    LDR	R0, [PC, #452]
0x221C	0x8001    STRH	R1, [R0, #0]
;nestHelm.c, 218 :: 		}
L_main29:
;nestHelm.c, 220 :: 		if(N_LIGHT == 1){
0x221E	0x4866    LDR	R0, [PC, #408]
0x2220	0x6800    LDR	R0, [R0, #0]
0x2222	0xB110    CBZ	R0, L_main30
;nestHelm.c, 221 :: 		gear_status = 4;
0x2224	0x2104    MOVS	R1, #4
0x2226	0x486E    LDR	R0, [PC, #440]
0x2228	0x8001    STRH	R1, [R0, #0]
;nestHelm.c, 222 :: 		}
L_main30:
;nestHelm.c, 224 :: 		}
0x222A	0xE010    B	L_main31
L_main23:
;nestHelm.c, 226 :: 		R_LIGHT = 0;
0x222C	0x2100    MOVS	R1, #0
0x222E	0xB249    SXTB	R1, R1
0x2230	0x4862    LDR	R0, [PC, #392]
0x2232	0x6001    STR	R1, [R0, #0]
;nestHelm.c, 227 :: 		ONE_LIGHT = 0;
0x2234	0x4862    LDR	R0, [PC, #392]
0x2236	0x6001    STR	R1, [R0, #0]
;nestHelm.c, 228 :: 		TWO_LIGHT = 0;
0x2238	0x4863    LDR	R0, [PC, #396]
0x223A	0x6001    STR	R1, [R0, #0]
;nestHelm.c, 229 :: 		THREE_LIGHT = 0;
0x223C	0x4861    LDR	R0, [PC, #388]
0x223E	0x6001    STR	R1, [R0, #0]
;nestHelm.c, 230 :: 		N_LIGHT = 1;
0x2240	0x2101    MOVS	R1, #1
0x2242	0xB249    SXTB	R1, R1
0x2244	0x485C    LDR	R0, [PC, #368]
0x2246	0x6001    STR	R1, [R0, #0]
;nestHelm.c, 231 :: 		gear_status = 4;
0x2248	0x2104    MOVS	R1, #4
0x224A	0x4865    LDR	R0, [PC, #404]
0x224C	0x8001    STRH	R1, [R0, #0]
;nestHelm.c, 232 :: 		}
L_main31:
;nestHelm.c, 234 :: 		}
L_main15:
;nestHelm.c, 241 :: 		if(countedTimer) {
0x224E	0x4965    LDR	R1, [PC, #404]
0x2250	0x6808    LDR	R0, [R1, #0]
0x2252	0x2800    CMP	R0, #0
0x2254	0xF0008298  BEQ	L_main32
;nestHelm.c, 243 :: 		countedTimer = 0;
0x2258	0x2100    MOVS	R1, #0
0x225A	0xB249    SXTB	R1, R1
0x225C	0x4861    LDR	R0, [PC, #388]
0x225E	0x6001    STR	R1, [R0, #0]
;nestHelm.c, 246 :: 		for(i=0; i<300; i++){
0x2260	0x2100    MOVS	R1, #0
0x2262	0x4861    LDR	R0, [PC, #388]
0x2264	0x8001    STRH	R1, [R0, #0]
L_main33:
0x2266	0x4860    LDR	R0, [PC, #384]
0x2268	0x8800    LDRH	R0, [R0, #0]
0x226A	0xF5B07F96  CMP	R0, #300
0x226E	0xD215    BCS	L_main34
;nestHelm.c, 247 :: 		ADC_Set_Input_Channel(_ADC_CHANNEL_0);
0x2270	0xF2400001  MOVW	R0, #1
0x2274	0xF7FFFC80  BL	_ADC_Set_Input_Channel+0
;nestHelm.c, 248 :: 		adc_read1 = ADC1_Get_Sample(0);
0x2278	0x2000    MOVS	R0, #0
0x227A	0xF7FFFD3B  BL	_ADC1_Get_Sample+0
0x227E	0x4B5B    LDR	R3, [PC, #364]
0x2280	0x6018    STR	R0, [R3, #0]
;nestHelm.c, 250 :: 		adc_array[i] = adc_read1;
0x2282	0x4A59    LDR	R2, [PC, #356]
0x2284	0x8810    LDRH	R0, [R2, #0]
0x2286	0x0041    LSLS	R1, R0, #1
0x2288	0x4859    LDR	R0, [PC, #356]
0x228A	0x1841    ADDS	R1, R0, R1
0x228C	0x4618    MOV	R0, R3
0x228E	0x6800    LDR	R0, [R0, #0]
0x2290	0x8008    STRH	R0, [R1, #0]
;nestHelm.c, 246 :: 		for(i=0; i<300; i++){
0x2292	0x4610    MOV	R0, R2
0x2294	0x8800    LDRH	R0, [R0, #0]
0x2296	0x1C40    ADDS	R0, R0, #1
0x2298	0x8010    STRH	R0, [R2, #0]
;nestHelm.c, 251 :: 		}
0x229A	0xE7E4    B	L_main33
L_main34:
;nestHelm.c, 253 :: 		for(i=0; i<300; i++)
0x229C	0x2100    MOVS	R1, #0
0x229E	0x4852    LDR	R0, [PC, #328]
0x22A0	0x8001    STRH	R1, [R0, #0]
L_main36:
0x22A2	0x4851    LDR	R0, [PC, #324]
0x22A4	0x8800    LDRH	R0, [R0, #0]
0x22A6	0xF5B07F96  CMP	R0, #300
0x22AA	0xD242    BCS	L_main37
;nestHelm.c, 255 :: 		for(j=i+1; j<300; j++)
0x22AC	0x484E    LDR	R0, [PC, #312]
0x22AE	0x8800    LDRH	R0, [R0, #0]
0x22B0	0x1C41    ADDS	R1, R0, #1
0x22B2	0x4850    LDR	R0, [PC, #320]
0x22B4	0x8001    STRH	R1, [R0, #0]
L_main39:
0x22B6	0x484F    LDR	R0, [PC, #316]
0x22B8	0xF9B00000  LDRSH	R0, [R0, #0]
0x22BC	0xF5B07F96  CMP	R0, #300
0x22C0	0xDA32    BGE	L_main40
;nestHelm.c, 257 :: 		if(adc_array[j]<adc_array[i])
0x22C2	0x484C    LDR	R0, [PC, #304]
0x22C4	0xF9B00000  LDRSH	R0, [R0, #0]
0x22C8	0x0041    LSLS	R1, R0, #1
0x22CA	0x4849    LDR	R0, [PC, #292]
0x22CC	0x1840    ADDS	R0, R0, R1
0x22CE	0xF9B02000  LDRSH	R2, [R0, #0]
0x22D2	0x4845    LDR	R0, [PC, #276]
0x22D4	0x8800    LDRH	R0, [R0, #0]
0x22D6	0x0041    LSLS	R1, R0, #1
0x22D8	0x4845    LDR	R0, [PC, #276]
0x22DA	0x1840    ADDS	R0, R0, R1
0x22DC	0xF9B00000  LDRSH	R0, [R0, #0]
0x22E0	0x4282    CMP	R2, R0
0x22E2	0xDA1B    BGE	L_main42
;nestHelm.c, 259 :: 		tmp = adc_array[i];
0x22E4	0x4840    LDR	R0, [PC, #256]
0x22E6	0x8800    LDRH	R0, [R0, #0]
0x22E8	0x0041    LSLS	R1, R0, #1
0x22EA	0x4841    LDR	R0, [PC, #260]
0x22EC	0x1844    ADDS	R4, R0, R1
0x22EE	0xF9B40000  LDRSH	R0, [R4, #0]
0x22F2	0x4B41    LDR	R3, [PC, #260]
0x22F4	0x8018    STRH	R0, [R3, #0]
;nestHelm.c, 260 :: 		adc_array[i] = adc_array[j];
0x22F6	0x4A3F    LDR	R2, [PC, #252]
0x22F8	0xF9B20000  LDRSH	R0, [R2, #0]
0x22FC	0x0041    LSLS	R1, R0, #1
0x22FE	0x483C    LDR	R0, [PC, #240]
0x2300	0x1840    ADDS	R0, R0, R1
0x2302	0xF9B00000  LDRSH	R0, [R0, #0]
0x2306	0x8020    STRH	R0, [R4, #0]
;nestHelm.c, 261 :: 		adc_array[j] = tmp;
0x2308	0x4610    MOV	R0, R2
0x230A	0xF9B00000  LDRSH	R0, [R0, #0]
0x230E	0x0041    LSLS	R1, R0, #1
0x2310	0x4837    LDR	R0, [PC, #220]
0x2312	0x1841    ADDS	R1, R0, R1
0x2314	0x4618    MOV	R0, R3
0x2316	0xF9B00000  LDRSH	R0, [R0, #0]
0x231A	0x8008    STRH	R0, [R1, #0]
;nestHelm.c, 262 :: 		}
L_main42:
;nestHelm.c, 255 :: 		for(j=i+1; j<300; j++)
0x231C	0x4935    LDR	R1, [PC, #212]
0x231E	0xF9B10000  LDRSH	R0, [R1, #0]
0x2322	0x1C40    ADDS	R0, R0, #1
0x2324	0x8008    STRH	R0, [R1, #0]
;nestHelm.c, 263 :: 		}
0x2326	0xE7C6    B	L_main39
L_main40:
;nestHelm.c, 253 :: 		for(i=0; i<300; i++)
0x2328	0x492F    LDR	R1, [PC, #188]
0x232A	0x8808    LDRH	R0, [R1, #0]
0x232C	0x1C40    ADDS	R0, R0, #1
0x232E	0x8008    STRH	R0, [R1, #0]
;nestHelm.c, 264 :: 		}
0x2330	0xE7B7    B	L_main36
L_main37:
;nestHelm.c, 266 :: 		for(i=100; i<200; i++){
0x2332	0x2164    MOVS	R1, #100
0x2334	0x482C    LDR	R0, [PC, #176]
0x2336	0x8001    STRH	R1, [R0, #0]
L_main43:
0x2338	0x482B    LDR	R0, [PC, #172]
0x233A	0x8800    LDRH	R0, [R0, #0]
0x233C	0x28C8    CMP	R0, #200
0x233E	0xD20F    BCS	L_main44
;nestHelm.c, 267 :: 		adcSum += adc_array[i];
0x2340	0x4B29    LDR	R3, [PC, #164]
0x2342	0x8818    LDRH	R0, [R3, #0]
0x2344	0x0041    LSLS	R1, R0, #1
0x2346	0x482A    LDR	R0, [PC, #168]
0x2348	0x1840    ADDS	R0, R0, R1
0x234A	0xF9B02000  LDRSH	R2, [R0, #0]
0x234E	0x492B    LDR	R1, [PC, #172]
0x2350	0x6808    LDR	R0, [R1, #0]
0x2352	0x1880    ADDS	R0, R0, R2
0x2354	0x6008    STR	R0, [R1, #0]
;nestHelm.c, 266 :: 		for(i=100; i<200; i++){
0x2356	0x4618    MOV	R0, R3
0x2358	0x8800    LDRH	R0, [R0, #0]
0x235A	0x1C40    ADDS	R0, R0, #1
0x235C	0x8018    STRH	R0, [R3, #0]
;nestHelm.c, 268 :: 		}
0x235E	0xE7EB    B	L_main43
L_main44:
;nestHelm.c, 271 :: 		adc_avg1 = ((float)adcSum)/100f;
0x2360	0x4826    LDR	R0, [PC, #152]
0x2362	0x9001    STR	R0, [SP, #4]
0x2364	0x6800    LDR	R0, [R0, #0]
0x2366	0xF7FFFD61  BL	__UnsignedIntegralToFloat+0
0x236A	0x4A25    LDR	R2, [PC, #148]
0x236C	0xF7FFFD0C  BL	__Div_FP+0
0x2370	0x4924    LDR	R1, [PC, #144]
0x2372	0x6008    STR	R0, [R1, #0]
;nestHelm.c, 272 :: 		calAdcAvg = (long)(adc_avg1 * 100f);
0x2374	0x4A22    LDR	R2, [PC, #136]
0x2376	0xF7FFFB07  BL	__Mul_FP+0
0x237A	0xF7FFF8DF  BL	__FloatToSignedIntegral+0
0x237E	0x4922    LDR	R1, [PC, #136]
0x2380	0x6008    STR	R0, [R1, #0]
;nestHelm.c, 274 :: 		adcSum = 0;
0x2382	0x2100    MOVS	R1, #0
0x2384	0x9801    LDR	R0, [SP, #4]
0x2386	0x6001    STR	R1, [R0, #0]
;nestHelm.c, 275 :: 		if(leftLimit <= rightLimit){
0x2388	0x4820    LDR	R0, [PC, #128]
0x238A	0x8801    LDRH	R1, [R0, #0]
0x238C	0x4820    LDR	R0, [PC, #128]
0x238E	0x8800    LDRH	R0, [R0, #0]
0x2390	0x4288    CMP	R0, R1
0x2392	0xD810    BHI	L_main46
;nestHelm.c, 276 :: 		adc_avg1 = adc_avg1 - (float)leftLimit;
0x2394	0x481E    LDR	R0, [PC, #120]
0x2396	0x8800    LDRH	R0, [R0, #0]
0x2398	0xF7FFFD48  BL	__UnsignedIntegralToFloat+0
0x239C	0x9002    STR	R0, [SP, #8]
0x239E	0x4819    LDR	R0, [PC, #100]
0x23A0	0x9001    STR	R0, [SP, #4]
0x23A2	0x6800    LDR	R0, [R0, #0]
0x23A4	0x9100    STR	R1, [SP, #0]
0x23A6	0x9902    LDR	R1, [SP, #8]
0x23A8	0x460A    MOV	R2, R1
0x23AA	0xF7FFF845  BL	__Sub_FP+0
0x23AE	0x9900    LDR	R1, [SP, #0]
0x23B0	0x9901    LDR	R1, [SP, #4]
0x23B2	0x6008    STR	R0, [R1, #0]
;nestHelm.c, 277 :: 		}
0x23B4	0xE03E    B	L_main47
L_main46:
;nestHelm.c, 279 :: 		adc_avg1 = adc_avg1 - (float)rightLimit;
0x23B6	0xE02D    B	#90
0x23B8	0x81B84221  	GPIOB_ODR+0
0x23BC	0x81BC4221  	GPIOB_ODR+0
0x23C0	0x81B44221  	GPIOB_ODR+0
0x23C4	0x81AC4221  	GPIOB_ODR+0
0x23C8	0x81B04221  	GPIOB_ODR+0
0x23CC	0x08084001  	GPIOA_IDR+0
0x23D0	0x01104221  	GPIOA_IDR+0
0x23D4	0x27CC2200  	_bitDelay3Seconds+0
0x23D8	0x27D02200  	_bitStart3SecondsCount+0
0x23DC	0x01402000  	_delay3secndsCount+0
0x23E0	0x00062000  	_gear_status+0
0x23E4	0x27D42200  	_countedTimer+0
0x23E8	0x00082000  	_i+0
0x23EC	0x000C2000  	_adc_read1+0
0x23F0	0x01422000  	_adc_array+0
0x23F4	0x000A2000  	_j+0
0x23F8	0x039A2000  	_tmp+0
0x23FC	0x00102000  	_adcSum+0
0x2400	0x000042C8  	#1120403456
0x2404	0x039C2000  	_adc_avg1+0
0x2408	0x00142000  	_calAdcAvg+0
0x240C	0x00022000  	_rightLimit+0
0x2410	0x00002000  	_leftLimit+0
0x2414	0x489A    LDR	R0, [PC, #616]
0x2416	0x8800    LDRH	R0, [R0, #0]
0x2418	0xF7FFFD08  BL	__UnsignedIntegralToFloat+0
0x241C	0x9002    STR	R0, [SP, #8]
0x241E	0x4899    LDR	R0, [PC, #612]
0x2420	0x9001    STR	R0, [SP, #4]
0x2422	0x6800    LDR	R0, [R0, #0]
0x2424	0x9100    STR	R1, [SP, #0]
0x2426	0x9902    LDR	R1, [SP, #8]
0x2428	0x460A    MOV	R2, R1
0x242A	0xF7FFF805  BL	__Sub_FP+0
0x242E	0x9900    LDR	R1, [SP, #0]
0x2430	0x9901    LDR	R1, [SP, #4]
0x2432	0x6008    STR	R0, [R1, #0]
;nestHelm.c, 280 :: 		}
L_main47:
;nestHelm.c, 281 :: 		if(adc_avg1 < 0f){
0x2434	0x4893    LDR	R0, [PC, #588]
0x2436	0x6802    LDR	R2, [R0, #0]
0x2438	0xF04F0000  MOV	R0, #0
0x243C	0xF7FFF8A0  BL	__Compare_FP+0
0x2440	0xF2400000  MOVW	R0, #0
0x2444	0xDD00    BLE	L__main88
0x2446	0x2001    MOVS	R0, #1
L__main88:
0x2448	0xB120    CBZ	R0, L_main48
;nestHelm.c, 282 :: 		adc_avg1 = 0f;
0x244A	0xF04F0100  MOV	R1, #0
0x244E	0x488D    LDR	R0, [PC, #564]
0x2450	0x6001    STR	R1, [R0, #0]
;nestHelm.c, 283 :: 		}
0x2452	0xE012    B	L_main49
L_main48:
;nestHelm.c, 284 :: 		else if(adc_avg1 > (float)sideDifference){
0x2454	0x488C    LDR	R0, [PC, #560]
0x2456	0x8800    LDRH	R0, [R0, #0]
0x2458	0xF7FFFCE8  BL	__UnsignedIntegralToFloat+0
0x245C	0x4989    LDR	R1, [PC, #548]
0x245E	0x680A    LDR	R2, [R1, #0]
0x2460	0xF7FFF88E  BL	__Compare_FP+0
0x2464	0xF2400000  MOVW	R0, #0
0x2468	0xDA00    BGE	L__main89
0x246A	0x2001    MOVS	R0, #1
L__main89:
0x246C	0xB128    CBZ	R0, L_main50
;nestHelm.c, 285 :: 		adc_avg1 = (float)sideDifference;
0x246E	0x4886    LDR	R0, [PC, #536]
0x2470	0x8800    LDRH	R0, [R0, #0]
0x2472	0xF7FFFCDB  BL	__UnsignedIntegralToFloat+0
0x2476	0x4983    LDR	R1, [PC, #524]
0x2478	0x6008    STR	R0, [R1, #0]
;nestHelm.c, 286 :: 		}
L_main50:
L_main49:
;nestHelm.c, 304 :: 		fHalfSideDif = sideDifference / 2f;
0x247A	0x4883    LDR	R0, [PC, #524]
0x247C	0x8800    LDRH	R0, [R0, #0]
0x247E	0xF7FFFCD5  BL	__UnsignedIntegralToFloat+0
0x2482	0xF04F4280  MOV	R2, #1073741824
0x2486	0xF7FFFC7F  BL	__Div_FP+0
0x248A	0x4980    LDR	R1, [PC, #512]
0x248C	0x6008    STR	R0, [R1, #0]
;nestHelm.c, 306 :: 		if(adc_avg1 > fHalfSideDif){
0x248E	0x497D    LDR	R1, [PC, #500]
0x2490	0x680A    LDR	R2, [R1, #0]
0x2492	0xF7FFF875  BL	__Compare_FP+0
0x2496	0xF2400000  MOVW	R0, #0
0x249A	0xDA00    BGE	L__main90
0x249C	0x2001    MOVS	R0, #1
L__main90:
0x249E	0xB140    CBZ	R0, L_main51
;nestHelm.c, 307 :: 		fAdcAvg = adc_avg1-fHalfSideDif;
0x24A0	0x487A    LDR	R0, [PC, #488]
0x24A2	0x6802    LDR	R2, [R0, #0]
0x24A4	0x4877    LDR	R0, [PC, #476]
0x24A6	0x6800    LDR	R0, [R0, #0]
0x24A8	0xF7FEFFC6  BL	__Sub_FP+0
0x24AC	0x4978    LDR	R1, [PC, #480]
0x24AE	0x6008    STR	R0, [R1, #0]
;nestHelm.c, 308 :: 		}
0x24B0	0xE017    B	L_main52
L_main51:
;nestHelm.c, 309 :: 		else if(adc_avg1 < fHalfSideDif){
0x24B2	0x4876    LDR	R0, [PC, #472]
0x24B4	0x6802    LDR	R2, [R0, #0]
0x24B6	0x4873    LDR	R0, [PC, #460]
0x24B8	0x6800    LDR	R0, [R0, #0]
0x24BA	0xF7FFF861  BL	__Compare_FP+0
0x24BE	0xF2400000  MOVW	R0, #0
0x24C2	0xDA00    BGE	L__main91
0x24C4	0x2001    MOVS	R0, #1
L__main91:
0x24C6	0xB140    CBZ	R0, L_main53
;nestHelm.c, 310 :: 		fAdcAvg = fHalfSideDif-adc_avg1;
0x24C8	0x486E    LDR	R0, [PC, #440]
0x24CA	0x6802    LDR	R2, [R0, #0]
0x24CC	0x486F    LDR	R0, [PC, #444]
0x24CE	0x6800    LDR	R0, [R0, #0]
0x24D0	0xF7FEFFB2  BL	__Sub_FP+0
0x24D4	0x496E    LDR	R1, [PC, #440]
0x24D6	0x6008    STR	R0, [R1, #0]
;nestHelm.c, 311 :: 		}
0x24D8	0xE003    B	L_main54
L_main53:
;nestHelm.c, 313 :: 		fAdcAvg = 0f;
0x24DA	0xF04F0100  MOV	R1, #0
0x24DE	0x486C    LDR	R0, [PC, #432]
0x24E0	0x6001    STR	R1, [R0, #0]
;nestHelm.c, 314 :: 		}
L_main54:
L_main52:
;nestHelm.c, 316 :: 		fHalfDuty = (fAdcAvg * 5f) / (float)fHalfSideDif;
0x24E2	0x486B    LDR	R0, [PC, #428]
0x24E4	0x6802    LDR	R2, [R0, #0]
0x24E6	0x486B    LDR	R0, [PC, #428]
0x24E8	0xF7FFFA4E  BL	__Mul_FP+0
0x24EC	0x4967    LDR	R1, [PC, #412]
0x24EE	0x680A    LDR	R2, [R1, #0]
0x24F0	0xF7FFFC4A  BL	__Div_FP+0
0x24F4	0x4968    LDR	R1, [PC, #416]
0x24F6	0x9101    STR	R1, [SP, #4]
0x24F8	0x6008    STR	R0, [R1, #0]
;nestHelm.c, 317 :: 		fHalfDutyAfterFun = 4f * fHalfDuty * fHalfDuty;
0x24FA	0xF04F4281  MOV	R2, #1082130432
0x24FE	0xF7FFFA43  BL	__Mul_FP+0
0x2502	0x9901    LDR	R1, [SP, #4]
0x2504	0x680A    LDR	R2, [R1, #0]
0x2506	0xF7FFFA3F  BL	__Mul_FP+0
0x250A	0x4964    LDR	R1, [PC, #400]
0x250C	0x6008    STR	R0, [R1, #0]
;nestHelm.c, 319 :: 		if(dir != 0){
0x250E	0x4864    LDR	R0, [PC, #400]
0x2510	0x7800    LDRB	R0, [R0, #0]
0x2512	0x2800    CMP	R0, #0
0x2514	0xD041    BEQ	L_main55
;nestHelm.c, 320 :: 		dutyF = ((adc_avg1 * 200f) / ((float)sideDifference)) + 50f;
0x2516	0x485B    LDR	R0, [PC, #364]
0x2518	0x9003    STR	R0, [SP, #12]
0x251A	0x6802    LDR	R2, [R0, #0]
0x251C	0x4861    LDR	R0, [PC, #388]
0x251E	0xF7FFFA33  BL	__Mul_FP+0
0x2522	0x9002    STR	R0, [SP, #8]
0x2524	0x4858    LDR	R0, [PC, #352]
0x2526	0x8800    LDRH	R0, [R0, #0]
0x2528	0xF7FFFC80  BL	__UnsignedIntegralToFloat+0
0x252C	0x9001    STR	R0, [SP, #4]
0x252E	0x9802    LDR	R0, [SP, #8]
0x2530	0x9100    STR	R1, [SP, #0]
0x2532	0x9901    LDR	R1, [SP, #4]
0x2534	0x460A    MOV	R2, R1
0x2536	0xF7FFFC27  BL	__Div_FP+0
0x253A	0x9900    LDR	R1, [SP, #0]
0x253C	0x4A5A    LDR	R2, [PC, #360]
0x253E	0xF7FFF853  BL	__Add_FP+0
0x2542	0x495A    LDR	R1, [PC, #360]
0x2544	0x6008    STR	R0, [R1, #0]
;nestHelm.c, 322 :: 		if(adc_avg1 < fHalfSideDif){
0x2546	0x4851    LDR	R0, [PC, #324]
0x2548	0x6802    LDR	R2, [R0, #0]
0x254A	0x9803    LDR	R0, [SP, #12]
0x254C	0x6800    LDR	R0, [R0, #0]
0x254E	0xF7FFF817  BL	__Compare_FP+0
0x2552	0xF2400000  MOVW	R0, #0
0x2556	0xDA00    BGE	L__main92
0x2558	0x2001    MOVS	R0, #1
L__main92:
0x255A	0xB138    CBZ	R0, L_main56
;nestHelm.c, 323 :: 		fDuty = 150f - fHalfDutyAfterFun;
0x255C	0x484F    LDR	R0, [PC, #316]
0x255E	0x6802    LDR	R2, [R0, #0]
0x2560	0x4853    LDR	R0, [PC, #332]
0x2562	0xF7FEFF69  BL	__Sub_FP+0
0x2566	0x4953    LDR	R1, [PC, #332]
0x2568	0x6008    STR	R0, [R1, #0]
;nestHelm.c, 324 :: 		}
0x256A	0xE015    B	L_main57
L_main56:
;nestHelm.c, 325 :: 		else if(adc_avg1 > fHalfSideDif){
0x256C	0x4847    LDR	R0, [PC, #284]
0x256E	0x6802    LDR	R2, [R0, #0]
0x2570	0x4844    LDR	R0, [PC, #272]
0x2572	0x6800    LDR	R0, [R0, #0]
0x2574	0xF7FFF804  BL	__Compare_FP+0
0x2578	0xF2400000  MOVW	R0, #0
0x257C	0xDD00    BLE	L__main93
0x257E	0x2001    MOVS	R0, #1
L__main93:
0x2580	0xB138    CBZ	R0, L_main58
;nestHelm.c, 326 :: 		fDuty = 150f + fHalfDutyAfterFun;
0x2582	0x4846    LDR	R0, [PC, #280]
0x2584	0x6802    LDR	R2, [R0, #0]
0x2586	0x484A    LDR	R0, [PC, #296]
0x2588	0xF7FFF82E  BL	__Add_FP+0
0x258C	0x4949    LDR	R1, [PC, #292]
0x258E	0x6008    STR	R0, [R1, #0]
;nestHelm.c, 327 :: 		}
0x2590	0xE002    B	L_main59
L_main58:
;nestHelm.c, 329 :: 		fDuty = 150f;
0x2592	0x4947    LDR	R1, [PC, #284]
0x2594	0x4847    LDR	R0, [PC, #284]
0x2596	0x6001    STR	R1, [R0, #0]
;nestHelm.c, 330 :: 		}
L_main59:
L_main57:
;nestHelm.c, 333 :: 		}
0x2598	0xE045    B	L_main60
L_main55:
;nestHelm.c, 335 :: 		dutyF = 250f - ((adc_avg1 * 200f) / ((float)sideDifference));
0x259A	0x483A    LDR	R0, [PC, #232]
0x259C	0x9003    STR	R0, [SP, #12]
0x259E	0x6802    LDR	R2, [R0, #0]
0x25A0	0x4840    LDR	R0, [PC, #256]
0x25A2	0xF7FFF9F1  BL	__Mul_FP+0
0x25A6	0x9002    STR	R0, [SP, #8]
0x25A8	0x4837    LDR	R0, [PC, #220]
0x25AA	0x8800    LDRH	R0, [R0, #0]
0x25AC	0xF7FFFC3E  BL	__UnsignedIntegralToFloat+0
0x25B0	0x9001    STR	R0, [SP, #4]
0x25B2	0x9802    LDR	R0, [SP, #8]
0x25B4	0x9100    STR	R1, [SP, #0]
0x25B6	0x9901    LDR	R1, [SP, #4]
0x25B8	0x460A    MOV	R2, R1
0x25BA	0xF7FFFBE5  BL	__Div_FP+0
0x25BE	0x9001    STR	R0, [SP, #4]
0x25C0	0x9900    LDR	R1, [SP, #0]
0x25C2	0x483D    LDR	R0, [PC, #244]
0x25C4	0x9100    STR	R1, [SP, #0]
0x25C6	0x9901    LDR	R1, [SP, #4]
0x25C8	0x460A    MOV	R2, R1
0x25CA	0xF7FEFF35  BL	__Sub_FP+0
0x25CE	0x9900    LDR	R1, [SP, #0]
0x25D0	0x4936    LDR	R1, [PC, #216]
0x25D2	0x6008    STR	R0, [R1, #0]
;nestHelm.c, 337 :: 		if(adc_avg1 < fHalfSideDif){
0x25D4	0x482D    LDR	R0, [PC, #180]
0x25D6	0x6802    LDR	R2, [R0, #0]
0x25D8	0x9803    LDR	R0, [SP, #12]
0x25DA	0x6800    LDR	R0, [R0, #0]
0x25DC	0xF7FEFFD0  BL	__Compare_FP+0
0x25E0	0xF2400000  MOVW	R0, #0
0x25E4	0xDA00    BGE	L__main94
0x25E6	0x2001    MOVS	R0, #1
L__main94:
0x25E8	0xB138    CBZ	R0, L_main61
;nestHelm.c, 338 :: 		fDuty = 150f + fHalfDutyAfterFun;
0x25EA	0x482C    LDR	R0, [PC, #176]
0x25EC	0x6802    LDR	R2, [R0, #0]
0x25EE	0x4830    LDR	R0, [PC, #192]
0x25F0	0xF7FEFFFA  BL	__Add_FP+0
0x25F4	0x492F    LDR	R1, [PC, #188]
0x25F6	0x6008    STR	R0, [R1, #0]
;nestHelm.c, 339 :: 		}
0x25F8	0xE015    B	L_main62
L_main61:
;nestHelm.c, 340 :: 		else if(adc_avg1 > fHalfSideDif){
0x25FA	0x4824    LDR	R0, [PC, #144]
0x25FC	0x6802    LDR	R2, [R0, #0]
0x25FE	0x4821    LDR	R0, [PC, #132]
0x2600	0x6800    LDR	R0, [R0, #0]
0x2602	0xF7FEFFBD  BL	__Compare_FP+0
0x2606	0xF2400000  MOVW	R0, #0
0x260A	0xDD00    BLE	L__main95
0x260C	0x2001    MOVS	R0, #1
L__main95:
0x260E	0xB138    CBZ	R0, L_main63
;nestHelm.c, 341 :: 		fDuty = 150f - fHalfDutyAfterFun;
0x2610	0x4822    LDR	R0, [PC, #136]
0x2612	0x6802    LDR	R2, [R0, #0]
0x2614	0x4826    LDR	R0, [PC, #152]
0x2616	0xF7FEFF0F  BL	__Sub_FP+0
0x261A	0x4926    LDR	R1, [PC, #152]
0x261C	0x6008    STR	R0, [R1, #0]
;nestHelm.c, 342 :: 		}
0x261E	0xE002    B	L_main64
L_main63:
;nestHelm.c, 344 :: 		fDuty = 150f;
0x2620	0x4923    LDR	R1, [PC, #140]
0x2622	0x4824    LDR	R0, [PC, #144]
0x2624	0x6001    STR	R1, [R0, #0]
;nestHelm.c, 345 :: 		}
L_main64:
L_main62:
;nestHelm.c, 346 :: 		}
L_main60:
;nestHelm.c, 347 :: 		calDutyF = (long)(fDuty * 100f);
0x2626	0x4823    LDR	R0, [PC, #140]
0x2628	0x6802    LDR	R2, [R0, #0]
0x262A	0x4824    LDR	R0, [PC, #144]
0x262C	0xF7FFF9AC  BL	__Mul_FP+0
0x2630	0xF7FEFF84  BL	__FloatToSignedIntegral+0
0x2634	0x4922    LDR	R1, [PC, #136]
0x2636	0x6008    STR	R0, [R1, #0]
;nestHelm.c, 351 :: 		if(((int)(dutyF * 10f)) % 10 >= 5){
0x2638	0x481C    LDR	R0, [PC, #112]
0x263A	0x6802    LDR	R2, [R0, #0]
0x263C	0x4821    LDR	R0, [PC, #132]
0x263E	0xF7FFF9A3  BL	__Mul_FP+0
0x2642	0xF7FEFF7B  BL	__FloatToSignedIntegral+0
0x2646	0xB200    SXTH	R0, R0
0x2648	0x220A    MOVS	R2, #10
0x264A	0xB212    SXTH	R2, R2
0x264C	0xFB90F1F2  SDIV	R1, R0, R2
0x2650	0xFB020111  MLS	R1, R2, R1, R0
0x2654	0xB209    SXTH	R1, R1
0x2656	0x2905    CMP	R1, #5
0x2658	0xDB08    BLT	L_main65
;nestHelm.c, 352 :: 		dutyy = (int)dutyF + 1;
0x265A	0x4814    LDR	R0, [PC, #80]
0x265C	0x6800    LDR	R0, [R0, #0]
0x265E	0xF7FEFF6D  BL	__FloatToSignedIntegral+0
0x2662	0xB200    SXTH	R0, R0
0x2664	0x1C41    ADDS	R1, R0, #1
0x2666	0x4818    LDR	R0, [PC, #96]
0x2668	0x8001    STRH	R1, [R0, #0]
;nestHelm.c, 353 :: 		}
0x266A	0xE006    B	L_main66
L_main65:
;nestHelm.c, 355 :: 		dutyy = (int)dutyF;
0x266C	0x480F    LDR	R0, [PC, #60]
0x266E	0x6800    LDR	R0, [R0, #0]
0x2670	0xF7FEFF64  BL	__FloatToSignedIntegral+0
0x2674	0xB200    SXTH	R0, R0
0x2676	0x4914    LDR	R1, [PC, #80]
0x2678	0x8008    STRH	R0, [R1, #0]
;nestHelm.c, 356 :: 		}
L_main66:
;nestHelm.c, 360 :: 		calDuty = dutyy;
0x267A	0x4813    LDR	R0, [PC, #76]
0x267C	0xF000B826  B	#76
0x2680	0x00022000  	_rightLimit+0
0x2684	0x039C2000  	_adc_avg1+0
0x2688	0x00042000  	_sideDifference+0
0x268C	0x03A02000  	_fHalfSideDif+0
0x2690	0x03A42000  	_fAdcAvg+0
0x2694	0x000040A0  	#1084227584
0x2698	0x03A82000  	_fHalfDuty+0
0x269C	0x03AC2000  	_fHalfDutyAfterFun+0
0x26A0	0x002B2000  	_dir+0
0x26A4	0x00004348  	#1128792064
0x26A8	0x00004248  	#1112014848
0x26AC	0x03B02000  	_dutyF+0
0x26B0	0x00004316  	#1125515264
0x26B4	0x00182000  	_fDuty+0
0x26B8	0x0000437A  	#1132068864
0x26BC	0x000042C8  	#1120403456
0x26C0	0x001C2000  	_calDutyF+0
0x26C4	0x00004120  	#1092616192
0x26C8	0x00202000  	_dutyy+0
0x26CC	0xF9B01000  LDRSH	R1, [R0, #0]
0x26D0	0x483F    LDR	R0, [PC, #252]
0x26D2	0x8001    STRH	R1, [R0, #0]
;nestHelm.c, 365 :: 		if(((int)(fDuty * 10f)) % 10 >= 5){
0x26D4	0x483F    LDR	R0, [PC, #252]
0x26D6	0x6802    LDR	R2, [R0, #0]
0x26D8	0x483F    LDR	R0, [PC, #252]
0x26DA	0xF7FFF955  BL	__Mul_FP+0
0x26DE	0xF7FEFF2D  BL	__FloatToSignedIntegral+0
0x26E2	0xB200    SXTH	R0, R0
0x26E4	0x220A    MOVS	R2, #10
0x26E6	0xB212    SXTH	R2, R2
0x26E8	0xFB90F1F2  SDIV	R1, R0, R2
0x26EC	0xFB020111  MLS	R1, R2, R1, R0
0x26F0	0xB209    SXTH	R1, R1
0x26F2	0x2905    CMP	R1, #5
0x26F4	0xDB08    BLT	L_main67
;nestHelm.c, 366 :: 		dutyy = (int)fDuty + 1;
0x26F6	0x4837    LDR	R0, [PC, #220]
0x26F8	0x6800    LDR	R0, [R0, #0]
0x26FA	0xF7FEFF1F  BL	__FloatToSignedIntegral+0
0x26FE	0xB200    SXTH	R0, R0
0x2700	0x1C41    ADDS	R1, R0, #1
0x2702	0x4836    LDR	R0, [PC, #216]
0x2704	0x8001    STRH	R1, [R0, #0]
;nestHelm.c, 367 :: 		}
0x2706	0xE006    B	L_main68
L_main67:
;nestHelm.c, 369 :: 		dutyy = (int)fDuty;
0x2708	0x4832    LDR	R0, [PC, #200]
0x270A	0x6800    LDR	R0, [R0, #0]
0x270C	0xF7FEFF16  BL	__FloatToSignedIntegral+0
0x2710	0xB200    SXTH	R0, R0
0x2712	0x4932    LDR	R1, [PC, #200]
0x2714	0x8008    STRH	R0, [R1, #0]
;nestHelm.c, 370 :: 		}
L_main68:
;nestHelm.c, 385 :: 		if((!((dutyOld - 2 < dutyy) && (dutyy < dutyOld + 2))) && (dutyCounter < 3)){
0x2716	0x4832    LDR	R0, [PC, #200]
0x2718	0xF9B00000  LDRSH	R0, [R0, #0]
0x271C	0x1E81    SUBS	R1, R0, #2
0x271E	0xB209    SXTH	R1, R1
0x2720	0x482E    LDR	R0, [PC, #184]
0x2722	0xF9B00000  LDRSH	R0, [R0, #0]
0x2726	0x4281    CMP	R1, R0
0x2728	0xDA0B    BGE	L_main70
0x272A	0x482D    LDR	R0, [PC, #180]
0x272C	0xF9B00000  LDRSH	R0, [R0, #0]
0x2730	0x1C81    ADDS	R1, R0, #2
0x2732	0xB209    SXTH	R1, R1
0x2734	0x4829    LDR	R0, [PC, #164]
0x2736	0xF9B00000  LDRSH	R0, [R0, #0]
0x273A	0x4288    CMP	R0, R1
0x273C	0xDA01    BGE	L_main70
0x273E	0x2001    MOVS	R0, #1
0x2740	0xE000    B	L_main69
L_main70:
0x2742	0x2000    MOVS	R0, #0
L_main69:
0x2744	0xB978    CBNZ	R0, L__main83
0x2746	0x4827    LDR	R0, [PC, #156]
0x2748	0xF9B00000  LDRSH	R0, [R0, #0]
0x274C	0x2803    CMP	R0, #3
0x274E	0xDA0A    BGE	L__main82
L__main78:
;nestHelm.c, 386 :: 		dutyy = dutyOld;
0x2750	0x4823    LDR	R0, [PC, #140]
0x2752	0xF9B01000  LDRSH	R1, [R0, #0]
0x2756	0x4821    LDR	R0, [PC, #132]
0x2758	0x8001    STRH	R1, [R0, #0]
;nestHelm.c, 387 :: 		dutyCounter++;
0x275A	0x4922    LDR	R1, [PC, #136]
0x275C	0xF9B10000  LDRSH	R0, [R1, #0]
0x2760	0x1C40    ADDS	R0, R0, #1
0x2762	0x8008    STRH	R0, [R1, #0]
;nestHelm.c, 388 :: 		}
0x2764	0xE008    B	L_main74
;nestHelm.c, 385 :: 		if((!((dutyOld - 2 < dutyy) && (dutyy < dutyOld + 2))) && (dutyCounter < 3)){
L__main83:
L__main82:
;nestHelm.c, 390 :: 		dutyCounter = 0;
0x2766	0x2100    MOVS	R1, #0
0x2768	0xB209    SXTH	R1, R1
0x276A	0x481E    LDR	R0, [PC, #120]
0x276C	0x8001    STRH	R1, [R0, #0]
;nestHelm.c, 391 :: 		dutyOld = dutyy;
0x276E	0x481B    LDR	R0, [PC, #108]
0x2770	0xF9B01000  LDRSH	R1, [R0, #0]
0x2774	0x481A    LDR	R0, [PC, #104]
0x2776	0x8001    STRH	R1, [R0, #0]
;nestHelm.c, 392 :: 		}
L_main74:
;nestHelm.c, 400 :: 		dutyyy = dutyy;
0x2778	0x4818    LDR	R0, [PC, #96]
0x277A	0xF9B01000  LDRSH	R1, [R0, #0]
0x277E	0x481A    LDR	R0, [PC, #104]
0x2780	0x8001    STRH	R1, [R0, #0]
;nestHelm.c, 402 :: 		adcSum = 0;
0x2782	0x2100    MOVS	R1, #0
0x2784	0x4819    LDR	R0, [PC, #100]
0x2786	0x6001    STR	R1, [R0, #0]
;nestHelm.c, 404 :: 		}
L_main32:
;nestHelm.c, 408 :: 		if(bitRespond){
0x2788	0x4919    LDR	R1, [PC, #100]
0x278A	0x6808    LDR	R0, [R1, #0]
0x278C	0xB150    CBZ	R0, L_main75
;nestHelm.c, 409 :: 		bitRespond = 0;
0x278E	0x2100    MOVS	R1, #0
0x2790	0xB249    SXTB	R1, R1
0x2792	0x4817    LDR	R0, [PC, #92]
0x2794	0x6001    STR	R1, [R0, #0]
;nestHelm.c, 410 :: 		uart1SendStatus(gear_status, dutyyy);
0x2796	0x4814    LDR	R0, [PC, #80]
0x2798	0xF9B01000  LDRSH	R1, [R0, #0]
0x279C	0x4815    LDR	R0, [PC, #84]
0x279E	0x8800    LDRH	R0, [R0, #0]
0x27A0	0xF7FEFFA2  BL	_uart1SendStatus+0
;nestHelm.c, 411 :: 		}
L_main75:
;nestHelm.c, 416 :: 		if(bitCalSend){
0x27A4	0x4914    LDR	R1, [PC, #80]
0x27A6	0x6808    LDR	R0, [R1, #0]
0x27A8	0xB128    CBZ	R0, L_main76
;nestHelm.c, 417 :: 		bitCalSend = 0;
0x27AA	0x2100    MOVS	R1, #0
0x27AC	0xB249    SXTB	R1, R1
0x27AE	0x4812    LDR	R0, [PC, #72]
0x27B0	0x6001    STR	R1, [R0, #0]
;nestHelm.c, 419 :: 		uart1SendCallibration();
0x27B2	0xF7FFF83D  BL	_uart1SendCallibration+0
;nestHelm.c, 420 :: 		}
L_main76:
;nestHelm.c, 423 :: 		if(bitResetTouchSensor){
0x27B6	0x4911    LDR	R1, [PC, #68]
0x27B8	0x6808    LDR	R0, [R1, #0]
0x27BA	0xB128    CBZ	R0, L_main77
;nestHelm.c, 424 :: 		bitResetTouchSensor = 0;
0x27BC	0x2100    MOVS	R1, #0
0x27BE	0xB249    SXTB	R1, R1
0x27C0	0x480E    LDR	R0, [PC, #56]
0x27C2	0x6001    STR	R1, [R0, #0]
;nestHelm.c, 425 :: 		resetTouch();
0x27C4	0xF7FFF89C  BL	_resetTouch+0
;nestHelm.c, 427 :: 		}
L_main77:
;nestHelm.c, 430 :: 		}
0x27C8	0xF7FFBC2A  B	L_main13
;nestHelm.c, 435 :: 		}
L_end_main:
L__main_end_loop:
0x27CC	0xE7FE    B	L__main_end_loop
0x27CE	0xBF00    NOP
0x27D0	0x00222000  	_calDuty+0
0x27D4	0x00182000  	_fDuty+0
0x27D8	0x00004120  	#1092616192
0x27DC	0x00202000  	_dutyy+0
0x27E0	0x00242000  	_dutyOld+0
0x27E4	0x00262000  	_dutyCounter+0
0x27E8	0x00282000  	_dutyyy+0
0x27EC	0x00102000  	_adcSum+0
0x27F0	0x27D82200  	_bitRespond+0
0x27F4	0x00062000  	_gear_status+0
0x27F8	0x27E02200  	_bitCalSend+0
0x27FC	0x27C02200  	_bitResetTouchSensor+0
; end of _main
_NVIC_IntEnable:
;__Lib_System_101_102_103.c, 198 :: 		
; ivt start address is: 0 (R0)
0x1D10	0xB081    SUB	SP, SP, #4
; ivt end address is: 0 (R0)
; ivt start address is: 0 (R0)
;__Lib_System_101_102_103.c, 210 :: 		
0x1D12	0x2804    CMP	R0, #4
0x1D14	0xD106    BNE	L_NVIC_IntEnable12
; ivt end address is: 0 (R0)
;__Lib_System_101_102_103.c, 215 :: 		
0x1D16	0x4919    LDR	R1, [PC, #100]
0x1D18	0x6809    LDR	R1, [R1, #0]
0x1D1A	0xF4413280  ORR	R2, R1, #65536
0x1D1E	0x4917    LDR	R1, [PC, #92]
0x1D20	0x600A    STR	R2, [R1, #0]
;__Lib_System_101_102_103.c, 216 :: 		
0x1D22	0xE028    B	L_NVIC_IntEnable13
L_NVIC_IntEnable12:
;__Lib_System_101_102_103.c, 217 :: 		
; ivt start address is: 0 (R0)
0x1D24	0x2805    CMP	R0, #5
0x1D26	0xD106    BNE	L_NVIC_IntEnable14
; ivt end address is: 0 (R0)
;__Lib_System_101_102_103.c, 222 :: 		
0x1D28	0x4914    LDR	R1, [PC, #80]
0x1D2A	0x6809    LDR	R1, [R1, #0]
0x1D2C	0xF4413200  ORR	R2, R1, #131072
0x1D30	0x4912    LDR	R1, [PC, #72]
0x1D32	0x600A    STR	R2, [R1, #0]
;__Lib_System_101_102_103.c, 223 :: 		
0x1D34	0xE01F    B	L_NVIC_IntEnable15
L_NVIC_IntEnable14:
;__Lib_System_101_102_103.c, 224 :: 		
; ivt start address is: 0 (R0)
0x1D36	0x2806    CMP	R0, #6
0x1D38	0xD106    BNE	L_NVIC_IntEnable16
; ivt end address is: 0 (R0)
;__Lib_System_101_102_103.c, 229 :: 		
0x1D3A	0x4910    LDR	R1, [PC, #64]
0x1D3C	0x6809    LDR	R1, [R1, #0]
0x1D3E	0xF4412280  ORR	R2, R1, #262144
0x1D42	0x490E    LDR	R1, [PC, #56]
0x1D44	0x600A    STR	R2, [R1, #0]
;__Lib_System_101_102_103.c, 230 :: 		
0x1D46	0xE016    B	L_NVIC_IntEnable17
L_NVIC_IntEnable16:
;__Lib_System_101_102_103.c, 231 :: 		
; ivt start address is: 0 (R0)
0x1D48	0x280F    CMP	R0, #15
0x1D4A	0xD106    BNE	L_NVIC_IntEnable18
; ivt end address is: 0 (R0)
;__Lib_System_101_102_103.c, 236 :: 		
0x1D4C	0x490C    LDR	R1, [PC, #48]
0x1D4E	0x6809    LDR	R1, [R1, #0]
0x1D50	0xF0410202  ORR	R2, R1, #2
0x1D54	0x490A    LDR	R1, [PC, #40]
0x1D56	0x600A    STR	R2, [R1, #0]
;__Lib_System_101_102_103.c, 237 :: 		
0x1D58	0xE00D    B	L_NVIC_IntEnable19
L_NVIC_IntEnable18:
;__Lib_System_101_102_103.c, 238 :: 		
; ivt start address is: 0 (R0)
0x1D5A	0x2810    CMP	R0, #16
0x1D5C	0xD30B    BCC	L_NVIC_IntEnable20
;__Lib_System_101_102_103.c, 243 :: 		
0x1D5E	0xF2A00410  SUBW	R4, R0, #16
; ivt end address is: 0 (R0)
0x1D62	0x0961    LSRS	R1, R4, #5
0x1D64	0x008A    LSLS	R2, R1, #2
0x1D66	0x4907    LDR	R1, [PC, #28]
0x1D68	0x188B    ADDS	R3, R1, R2
;__Lib_System_101_102_103.c, 244 :: 		
0x1D6A	0xF004021F  AND	R2, R4, #31
0x1D6E	0xF04F0101  MOV	R1, #1
0x1D72	0x4091    LSLS	R1, R2
0x1D74	0x6019    STR	R1, [R3, #0]
;__Lib_System_101_102_103.c, 245 :: 		
L_NVIC_IntEnable20:
L_NVIC_IntEnable19:
L_NVIC_IntEnable17:
L_NVIC_IntEnable15:
L_NVIC_IntEnable13:
;__Lib_System_101_102_103.c, 246 :: 		
L_end_NVIC_IntEnable:
0x1D76	0xB001    ADD	SP, SP, #4
0x1D78	0x4770    BX	LR
0x1D7A	0xBF00    NOP
0x1D7C	0xED24E000  	SCB_SHCRS+0
0x1D80	0xE010E000  	STK_CTRL+0
0x1D84	0xE100E000  	NVIC_ISER0+0
; end of _NVIC_IntEnable
___CC2DW:
;__Lib_System_101_102_103.c, 28 :: 		
0x1AA0	0xB081    SUB	SP, SP, #4
;__Lib_System_101_102_103.c, 30 :: 		
L_loopDW:
;__Lib_System_101_102_103.c, 31 :: 		
0x1AA2	0xF81C9B01  LDRB	R9, [R12], #1
;__Lib_System_101_102_103.c, 32 :: 		
0x1AA6	0xF80B9B01  STRB	R9, [R11], #1
;__Lib_System_101_102_103.c, 33 :: 		
0x1AAA	0xEBBB0F0A  CMP	R11, R10, LSL #0
;__Lib_System_101_102_103.c, 34 :: 		
0x1AAE	0xD1F8    BNE	L_loopDW
;__Lib_System_101_102_103.c, 36 :: 		
L_end___CC2DW:
0x1AB0	0xB001    ADD	SP, SP, #4
0x1AB2	0x4770    BX	LR
; end of ___CC2DW
___FillZeros:
;__Lib_System_101_102_103.c, 70 :: 		
0x1AB4	0xB081    SUB	SP, SP, #4
;__Lib_System_101_102_103.c, 72 :: 		
0x1AB6	0xF04F0900  MOV	R9, #0
;__Lib_System_101_102_103.c, 73 :: 		
0x1ABA	0xF04F0C00  MOV	R12, #0
;__Lib_System_101_102_103.c, 74 :: 		
0x1ABE	0xEBBD0F0A  CMP	SP, R10, LSL #0
;__Lib_System_101_102_103.c, 75 :: 		
0x1AC2	0xDC04    BGT	L_loopFZs
;__Lib_System_101_102_103.c, 76 :: 		
0x1AC4	0xEBBD0F0B  CMP	SP, R11, LSL #0
;__Lib_System_101_102_103.c, 77 :: 		
0x1AC8	0xDB01    BLT	L_loopFZs
;__Lib_System_101_102_103.c, 78 :: 		
0x1ACA	0x46D4    MOV	R12, R10
;__Lib_System_101_102_103.c, 79 :: 		
0x1ACC	0x46EA    MOV	R10, SP
;__Lib_System_101_102_103.c, 80 :: 		
L_loopFZs:
;__Lib_System_101_102_103.c, 81 :: 		
0x1ACE	0xF84B9B04  STR	R9, [R11], #4
;__Lib_System_101_102_103.c, 82 :: 		
0x1AD2	0xEBBB0F0A  CMP	R11, R10, LSL #0
;__Lib_System_101_102_103.c, 83 :: 		
0x1AD6	0xD1FA    BNE	L_loopFZs
;__Lib_System_101_102_103.c, 84 :: 		
0x1AD8	0xEBBC0F0A  CMP	R12, R10, LSL #0
;__Lib_System_101_102_103.c, 85 :: 		
0x1ADC	0xDD05    BLE	L_norep
;__Lib_System_101_102_103.c, 86 :: 		
0x1ADE	0x46E2    MOV	R10, R12
;__Lib_System_101_102_103.c, 87 :: 		
0x1AE0	0xF8D9B000  LDR	R11, [R9, #0]
;__Lib_System_101_102_103.c, 88 :: 		
0x1AE4	0xF10B0B04  ADD	R11, R11, #4
;__Lib_System_101_102_103.c, 89 :: 		
0x1AE8	0xE7F1    B	L_loopFZs
;__Lib_System_101_102_103.c, 90 :: 		
L_norep:
;__Lib_System_101_102_103.c, 92 :: 		
L_end___FillZeros:
0x1AEA	0xB001    ADD	SP, SP, #4
0x1AEC	0x4770    BX	LR
; end of ___FillZeros
_UART1_Init_Advanced:
;__Lib_UART_123.c, 287 :: 		
; stop_bits start address is: 12 (R3)
; parity start address is: 8 (R2)
; data_bits start address is: 4 (R1)
; baud_rate start address is: 0 (R0)
0x1A14	0xB081    SUB	SP, SP, #4
0x1A16	0xF8CDE000  STR	LR, [SP, #0]
; stop_bits end address is: 12 (R3)
; parity end address is: 8 (R2)
; data_bits end address is: 4 (R1)
; baud_rate end address is: 0 (R0)
; baud_rate start address is: 0 (R0)
; data_bits start address is: 4 (R1)
; parity start address is: 8 (R2)
; stop_bits start address is: 12 (R3)
; module start address is: 20 (R5)
0x1A1A	0x9D01    LDR	R5, [SP, #4]
;__Lib_UART_123.c, 289 :: 		
0x1A1C	0x462C    MOV	R4, R5
; module end address is: 20 (R5)
0x1A1E	0xB410    PUSH	(R4)
; parity end address is: 8 (R2)
0x1A20	0xB408    PUSH	(R3)
0x1A22	0xB293    UXTH	R3, R2
0x1A24	0xB28A    UXTH	R2, R1
; data_bits end address is: 4 (R1)
0x1A26	0x4601    MOV	R1, R0
; baud_rate end address is: 0 (R0)
0x1A28	0x4803    LDR	R0, [PC, #12]
; stop_bits end address is: 12 (R3)
0x1A2A	0xF7FFFAEB  BL	__Lib_UART_123_UARTx_Init_Advanced+0
0x1A2E	0xB002    ADD	SP, SP, #8
;__Lib_UART_123.c, 290 :: 		
L_end_UART1_Init_Advanced:
0x1A30	0xF8DDE000  LDR	LR, [SP, #0]
0x1A34	0xB001    ADD	SP, SP, #4
0x1A36	0x4770    BX	LR
0x1A38	0x38004001  	USART1_SR+0
; end of _UART1_Init_Advanced
__Lib_UART_123_UARTx_Init_Advanced:
;__Lib_UART_123.c, 226 :: 		
; UART_Base start address is: 0 (R0)
0x1004	0xB08A    SUB	SP, SP, #40
0x1006	0xF8CDE000  STR	LR, [SP, #0]
0x100A	0x9108    STR	R1, [SP, #32]
0x100C	0xF8AD3024  STRH	R3, [SP, #36]
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 0 (R0)
0x1010	0xF8BD4028  LDRH	R4, [SP, #40]
0x1014	0xF8AD4028  STRH	R4, [SP, #40]
; module start address is: 24 (R6)
0x1018	0x9E0B    LDR	R6, [SP, #44]
;__Lib_UART_123.c, 230 :: 		
0x101A	0xAC03    ADD	R4, SP, #12
0x101C	0x9001    STR	R0, [SP, #4]
0x101E	0x4620    MOV	R0, R4
0x1020	0xF7FFFED8  BL	_RCC_GetClocksFrequency+0
0x1024	0x9801    LDR	R0, [SP, #4]
;__Lib_UART_123.c, 232 :: 		
0x1026	0x4C50    LDR	R4, [PC, #320]
0x1028	0x42A0    CMP	R0, R4
0x102A	0xD112    BNE	L___Lib_UART_123_UARTx_Init_Advanced15
;__Lib_UART_123.c, 233 :: 		
0x102C	0x2501    MOVS	R5, #1
0x102E	0xB26D    SXTB	R5, R5
0x1030	0x4C4E    LDR	R4, [PC, #312]
0x1032	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123.c, 234 :: 		
0x1034	0x4D4E    LDR	R5, [PC, #312]
0x1036	0x4C4F    LDR	R4, [PC, #316]
0x1038	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123.c, 235 :: 		
0x103A	0x4D4F    LDR	R5, [PC, #316]
0x103C	0x4C4F    LDR	R4, [PC, #316]
0x103E	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123.c, 236 :: 		
0x1040	0x4D4F    LDR	R5, [PC, #316]
0x1042	0x4C50    LDR	R4, [PC, #320]
0x1044	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123.c, 237 :: 		
0x1046	0x4D50    LDR	R5, [PC, #320]
0x1048	0x4C50    LDR	R4, [PC, #320]
0x104A	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123.c, 238 :: 		
0x104C	0x9C06    LDR	R4, [SP, #24]
0x104E	0x9402    STR	R4, [SP, #8]
;__Lib_UART_123.c, 239 :: 		
0x1050	0xE02A    B	L___Lib_UART_123_UARTx_Init_Advanced16
L___Lib_UART_123_UARTx_Init_Advanced15:
;__Lib_UART_123.c, 240 :: 		
0x1052	0x4C4F    LDR	R4, [PC, #316]
0x1054	0x42A0    CMP	R0, R4
0x1056	0xD112    BNE	L___Lib_UART_123_UARTx_Init_Advanced17
;__Lib_UART_123.c, 241 :: 		
0x1058	0x2501    MOVS	R5, #1
0x105A	0xB26D    SXTB	R5, R5
0x105C	0x4C4D    LDR	R4, [PC, #308]
0x105E	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123.c, 242 :: 		
0x1060	0x4D4D    LDR	R5, [PC, #308]
0x1062	0x4C44    LDR	R4, [PC, #272]
0x1064	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123.c, 243 :: 		
0x1066	0x4D4D    LDR	R5, [PC, #308]
0x1068	0x4C44    LDR	R4, [PC, #272]
0x106A	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123.c, 244 :: 		
0x106C	0x4D4C    LDR	R5, [PC, #304]
0x106E	0x4C45    LDR	R4, [PC, #276]
0x1070	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123.c, 245 :: 		
0x1072	0x4D4C    LDR	R5, [PC, #304]
0x1074	0x4C45    LDR	R4, [PC, #276]
0x1076	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123.c, 246 :: 		
0x1078	0x9C05    LDR	R4, [SP, #20]
0x107A	0x9402    STR	R4, [SP, #8]
;__Lib_UART_123.c, 247 :: 		
0x107C	0xE014    B	L___Lib_UART_123_UARTx_Init_Advanced18
L___Lib_UART_123_UARTx_Init_Advanced17:
;__Lib_UART_123.c, 248 :: 		
0x107E	0x4C4A    LDR	R4, [PC, #296]
0x1080	0x42A0    CMP	R0, R4
0x1082	0xD111    BNE	L___Lib_UART_123_UARTx_Init_Advanced19
;__Lib_UART_123.c, 249 :: 		
0x1084	0x2501    MOVS	R5, #1
0x1086	0xB26D    SXTB	R5, R5
0x1088	0x4C48    LDR	R4, [PC, #288]
0x108A	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123.c, 250 :: 		
0x108C	0x4D48    LDR	R5, [PC, #288]
0x108E	0x4C39    LDR	R4, [PC, #228]
0x1090	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123.c, 251 :: 		
0x1092	0x4D48    LDR	R5, [PC, #288]
0x1094	0x4C39    LDR	R4, [PC, #228]
0x1096	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123.c, 252 :: 		
0x1098	0x4D47    LDR	R5, [PC, #284]
0x109A	0x4C3A    LDR	R4, [PC, #232]
0x109C	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123.c, 253 :: 		
0x109E	0x4D47    LDR	R5, [PC, #284]
0x10A0	0x4C3A    LDR	R4, [PC, #232]
0x10A2	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123.c, 254 :: 		
0x10A4	0x9C05    LDR	R4, [SP, #20]
0x10A6	0x9402    STR	R4, [SP, #8]
;__Lib_UART_123.c, 255 :: 		
L___Lib_UART_123_UARTx_Init_Advanced19:
L___Lib_UART_123_UARTx_Init_Advanced18:
L___Lib_UART_123_UARTx_Init_Advanced16:
;__Lib_UART_123.c, 257 :: 		
0x10A8	0x9001    STR	R0, [SP, #4]
; module end address is: 24 (R6)
0x10AA	0x4630    MOV	R0, R6
0x10AC	0xF7FFFF14  BL	_GPIO_Alternate_Function_Enable+0
0x10B0	0x9801    LDR	R0, [SP, #4]
;__Lib_UART_123.c, 259 :: 		
0x10B2	0xF2000510  ADDW	R5, R0, #16
0x10B6	0x2400    MOVS	R4, #0
0x10B8	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123.c, 260 :: 		
0x10BA	0xF2000610  ADDW	R6, R0, #16
0x10BE	0x6835    LDR	R5, [R6, #0]
0x10C0	0xF8BD4028  LDRH	R4, [SP, #40]
0x10C4	0xEA450404  ORR	R4, R5, R4, LSL #0
0x10C8	0x6034    STR	R4, [R6, #0]
;__Lib_UART_123.c, 261 :: 		
0x10CA	0xF200050C  ADDW	R5, R0, #12
0x10CE	0x2400    MOVS	R4, #0
0x10D0	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123.c, 263 :: 		
0x10D2	0xF8BD4024  LDRH	R4, [SP, #36]
0x10D6	0xB12C    CBZ	R4, L___Lib_UART_123_UARTx_Init_Advanced20
;__Lib_UART_123.c, 264 :: 		
0x10D8	0xF8BD4024  LDRH	R4, [SP, #36]
0x10DC	0xF4446480  ORR	R4, R4, #1024
0x10E0	0xF8AD4024  STRH	R4, [SP, #36]
;__Lib_UART_123.c, 265 :: 		
L___Lib_UART_123_UARTx_Init_Advanced20:
;__Lib_UART_123.c, 267 :: 		
0x10E4	0xF200060C  ADDW	R6, R0, #12
0x10E8	0x6835    LDR	R5, [R6, #0]
0x10EA	0xF8BD4024  LDRH	R4, [SP, #36]
0x10EE	0xEA450404  ORR	R4, R5, R4, LSL #0
0x10F2	0x6034    STR	R4, [R6, #0]
;__Lib_UART_123.c, 269 :: 		
0x10F4	0xF200060C  ADDW	R6, R0, #12
0x10F8	0x2501    MOVS	R5, #1
0x10FA	0x6834    LDR	R4, [R6, #0]
0x10FC	0xF365344D  BFI	R4, R5, #13, #1
0x1100	0x6034    STR	R4, [R6, #0]
;__Lib_UART_123.c, 270 :: 		
0x1102	0xF200060C  ADDW	R6, R0, #12
0x1106	0x2501    MOVS	R5, #1
0x1108	0x6834    LDR	R4, [R6, #0]
0x110A	0xF36504C3  BFI	R4, R5, #3, #1
0x110E	0x6034    STR	R4, [R6, #0]
;__Lib_UART_123.c, 271 :: 		
0x1110	0xF200060C  ADDW	R6, R0, #12
0x1114	0x2501    MOVS	R5, #1
0x1116	0x6834    LDR	R4, [R6, #0]
0x1118	0xF3650482  BFI	R4, R5, #2, #1
0x111C	0x6034    STR	R4, [R6, #0]
;__Lib_UART_123.c, 272 :: 		
0x111E	0xF2000514  ADDW	R5, R0, #20
0x1122	0x2400    MOVS	R4, #0
0x1124	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123.c, 277 :: 		
0x1126	0x9D02    LDR	R5, [SP, #8]
0x1128	0x2419    MOVS	R4, #25
0x112A	0x4365    MULS	R5, R4, R5
0x112C	0x9C08    LDR	R4, [SP, #32]
0x112E	0x00A4    LSLS	R4, R4, #2
0x1130	0xFBB5F7F4  UDIV	R7, R5, R4
;__Lib_UART_123.c, 278 :: 		
0x1134	0x2464    MOVS	R4, #100
0x1136	0xFBB7F4F4  UDIV	R4, R7, R4
0x113A	0x0126    LSLS	R6, R4, #4
;__Lib_UART_123.c, 280 :: 		
0x113C	0x0935    LSRS	R5, R6, #4
0x113E	0x2464    MOVS	R4, #100
0x1140	0x436C    MULS	R4, R5, R4
0x1142	0x1B3C    SUB	R4, R7, R4
;__Lib_UART_123.c, 281 :: 		
0x1144	0x0124    LSLS	R4, R4, #4
0x1146	0xF2040532  ADDW	R5, R4, #50
0x114A	0x2464    MOVS	R4, #100
0x114C	0xFBB5F4F4  UDIV	R4, R5, R4
0x1150	0xF004040F  AND	R4, R4, #15
0x1154	0xEA460404  ORR	R4, R6, R4, LSL #0
;__Lib_UART_123.c, 283 :: 		
0x1158	0xF2000508  ADDW	R5, R0, #8
; UART_Base end address is: 0 (R0)
0x115C	0xB2A4    UXTH	R4, R4
0x115E	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123.c, 284 :: 		
L_end_UARTx_Init_Advanced:
0x1160	0xF8DDE000  LDR	LR, [SP, #0]
0x1164	0xB00A    ADD	SP, SP, #40
0x1166	0x4770    BX	LR
0x1168	0x38004001  	USART1_SR+0
0x116C	0x03384242  	RCC_APB2ENR+0
0x1170	0x0FE90000  	_UART1_Write+0
0x1174	0x03D42000  	_UART_Wr_Ptr+0
0x1178	0x18190000  	_UART1_Read+0
0x117C	0x03D82000  	_UART_Rd_Ptr+0
0x1180	0xFFFFFFFF  	_UART1_Data_Ready+0
0x1184	0x03DC2000  	_UART_Rdy_Ptr+0
0x1188	0xFFFFFFFF  	_UART1_Tx_Idle+0
0x118C	0x03E02000  	_UART_Tx_Idle_Ptr+0
0x1190	0x44004000  	USART2_SR+0
0x1194	0x03C44242  	RCC_APB1ENR+0
0x1198	0xFFFFFFFF  	_UART2_Write+0
0x119C	0xFFFFFFFF  	_UART2_Read+0
0x11A0	0xFFFFFFFF  	_UART2_Data_Ready+0
0x11A4	0xFFFFFFFF  	_UART2_Tx_Idle+0
0x11A8	0x48004000  	USART3_SR+0
0x11AC	0x03C84242  	RCC_APB1ENR+0
0x11B0	0xFFFFFFFF  	_UART3_Write+0
0x11B4	0xFFFFFFFF  	_UART3_Read+0
0x11B8	0xFFFFFFFF  	_UART3_Data_Ready+0
0x11BC	0xFFFFFFFF  	_UART3_Tx_Idle+0
; end of __Lib_UART_123_UARTx_Init_Advanced
_RCC_GetClocksFrequency:
;__Lib_System_101_102_103.c, 435 :: 		
; RCC_Clocks start address is: 0 (R0)
0x0DD4	0xB082    SUB	SP, SP, #8
0x0DD6	0xF8CDE000  STR	LR, [SP, #0]
0x0DDA	0x4603    MOV	R3, R0
; RCC_Clocks end address is: 0 (R0)
; RCC_Clocks start address is: 12 (R3)
;__Lib_System_101_102_103.c, 438 :: 		
0x0DDC	0x4619    MOV	R1, R3
0x0DDE	0x9101    STR	R1, [SP, #4]
0x0DE0	0xF7FFFF06  BL	_Get_Fosc_kHz+0
0x0DE4	0xF24031E8  MOVW	R1, #1000
0x0DE8	0xFB00F201  MUL	R2, R0, R1
0x0DEC	0x9901    LDR	R1, [SP, #4]
0x0DEE	0x600A    STR	R2, [R1, #0]
;__Lib_System_101_102_103.c, 441 :: 		
0x0DF0	0x491F    LDR	R1, [PC, #124]
0x0DF2	0x7809    LDRB	R1, [R1, #0]
0x0DF4	0xF3C11103  UBFX	R1, R1, #4, #4
; tmp start address is: 0 (R0)
0x0DF8	0xB2C8    UXTB	R0, R1
;__Lib_System_101_102_103.c, 442 :: 		
0x0DFA	0x491E    LDR	R1, [PC, #120]
0x0DFC	0x1809    ADDS	R1, R1, R0
; tmp end address is: 0 (R0)
0x0DFE	0x7808    LDRB	R0, [R1, #0]
; presc start address is: 0 (R0)
0x0E00	0xB2C0    UXTB	R0, R0
;__Lib_System_101_102_103.c, 444 :: 		
0x0E02	0x1D1A    ADDS	R2, R3, #4
0x0E04	0x6819    LDR	R1, [R3, #0]
0x0E06	0x40C1    LSRS	R1, R0
; presc end address is: 0 (R0)
0x0E08	0x6011    STR	R1, [R2, #0]
;__Lib_System_101_102_103.c, 446 :: 		
0x0E0A	0x4919    LDR	R1, [PC, #100]
0x0E0C	0x8809    LDRH	R1, [R1, #0]
0x0E0E	0xF3C12102  UBFX	R1, R1, #8, #3
; tmp start address is: 0 (R0)
0x0E12	0xB288    UXTH	R0, R1
;__Lib_System_101_102_103.c, 447 :: 		
0x0E14	0x4917    LDR	R1, [PC, #92]
0x0E16	0x1809    ADDS	R1, R1, R0
; tmp end address is: 0 (R0)
0x0E18	0x7808    LDRB	R0, [R1, #0]
; presc start address is: 0 (R0)
0x0E1A	0xB2C0    UXTB	R0, R0
;__Lib_System_101_102_103.c, 449 :: 		
0x0E1C	0xF2030208  ADDW	R2, R3, #8
0x0E20	0x1D19    ADDS	R1, R3, #4
0x0E22	0x6809    LDR	R1, [R1, #0]
0x0E24	0x40C1    LSRS	R1, R0
; presc end address is: 0 (R0)
0x0E26	0x6011    STR	R1, [R2, #0]
;__Lib_System_101_102_103.c, 451 :: 		
0x0E28	0x4911    LDR	R1, [PC, #68]
0x0E2A	0x8809    LDRH	R1, [R1, #0]
0x0E2C	0xF3C121C2  UBFX	R1, R1, #11, #3
; tmp start address is: 0 (R0)
0x0E30	0xB288    UXTH	R0, R1
;__Lib_System_101_102_103.c, 452 :: 		
0x0E32	0x4910    LDR	R1, [PC, #64]
0x0E34	0x1809    ADDS	R1, R1, R0
; tmp end address is: 0 (R0)
0x0E36	0x7808    LDRB	R0, [R1, #0]
; presc start address is: 0 (R0)
0x0E38	0xB2C0    UXTB	R0, R0
;__Lib_System_101_102_103.c, 454 :: 		
0x0E3A	0xF203020C  ADDW	R2, R3, #12
0x0E3E	0x1D19    ADDS	R1, R3, #4
0x0E40	0x6809    LDR	R1, [R1, #0]
0x0E42	0x40C1    LSRS	R1, R0
; presc end address is: 0 (R0)
0x0E44	0x6011    STR	R1, [R2, #0]
;__Lib_System_101_102_103.c, 456 :: 		
0x0E46	0x490A    LDR	R1, [PC, #40]
0x0E48	0x8809    LDRH	R1, [R1, #0]
0x0E4A	0xF3C13181  UBFX	R1, R1, #14, #2
; tmp start address is: 0 (R0)
0x0E4E	0xB288    UXTH	R0, R1
;__Lib_System_101_102_103.c, 457 :: 		
0x0E50	0x4909    LDR	R1, [PC, #36]
0x0E52	0x1809    ADDS	R1, R1, R0
; tmp end address is: 0 (R0)
0x0E54	0x7809    LDRB	R1, [R1, #0]
; presc start address is: 0 (R0)
0x0E56	0xB2C8    UXTB	R0, R1
;__Lib_System_101_102_103.c, 459 :: 		
0x0E58	0xF2030210  ADDW	R2, R3, #16
0x0E5C	0xF203010C  ADDW	R1, R3, #12
; RCC_Clocks end address is: 12 (R3)
0x0E60	0x6809    LDR	R1, [R1, #0]
0x0E62	0xFBB1F1F0  UDIV	R1, R1, R0
; presc end address is: 0 (R0)
0x0E66	0x6011    STR	R1, [R2, #0]
;__Lib_System_101_102_103.c, 460 :: 		
L_end_RCC_GetClocksFrequency:
0x0E68	0xF8DDE000  LDR	LR, [SP, #0]
0x0E6C	0xB002    ADD	SP, SP, #8
0x0E6E	0x4770    BX	LR
0x0E70	0x10044002  	RCC_CFGRbits+0
0x0E74	0x2EE60000  	__Lib_System_101_102_103_APBAHBPrescTable+0
0x0E78	0x177C0000  	__Lib_System_101_102_103_ADCPrescTable+0
; end of _RCC_GetClocksFrequency
_Get_Fosc_kHz:
;__Lib_Delays.c, 9 :: 		unsigned long Get_Fosc_kHz(){
;__Lib_Delays.c, 10 :: 		return __System_CLOCK_IN_KHZ;
0x0BF0	0x4801    LDR	R0, [PC, #4]
0x0BF2	0x6800    LDR	R0, [R0, #0]
;__Lib_Delays.c, 11 :: 		}
L_end_Get_Fosc_kHz:
0x0BF4	0x4770    BX	LR
0x0BF6	0xBF00    NOP
0x0BF8	0x03B82000  	___System_CLOCK_IN_KHZ+0
; end of _Get_Fosc_kHz
_GPIO_Alternate_Function_Enable:
;__Lib_GPIO_32F10x.c, 303 :: 		
; module start address is: 0 (R0)
0x0ED8	0xB081    SUB	SP, SP, #4
0x0EDA	0xF8CDE000  STR	LR, [SP, #0]
; module end address is: 0 (R0)
; module start address is: 0 (R0)
;__Lib_GPIO_32F10x.c, 304 :: 		
;__Lib_GPIO_32F10x.c, 305 :: 		
;__Lib_GPIO_32F10x.c, 307 :: 		
0x0EDE	0x2201    MOVS	R2, #1
0x0EE0	0xB252    SXTB	R2, R2
0x0EE2	0x493E    LDR	R1, [PC, #248]
0x0EE4	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_32F10x.c, 309 :: 		
0x0EE6	0xF2000168  ADDW	R1, R0, #104
0x0EEA	0x680B    LDR	R3, [R1, #0]
0x0EEC	0xF06F6100  MVN	R1, #134217728
0x0EF0	0xEA030201  AND	R2, R3, R1, LSL #0
; gpio_remap start address is: 16 (R4)
0x0EF4	0x4614    MOV	R4, R2
;__Lib_GPIO_32F10x.c, 310 :: 		
0x0EF6	0xF0036100  AND	R1, R3, #134217728
0x0EFA	0x0EC9    LSRS	R1, R1, #27
; newstate start address is: 12 (R3)
0x0EFC	0x460B    MOV	R3, R1
;__Lib_GPIO_32F10x.c, 312 :: 		
0x0EFE	0xF0024100  AND	R1, R2, #-2147483648
0x0F02	0xF1B14F00  CMP	R1, #-2147483648
0x0F06	0xD102    BNE	L_GPIO_Alternate_Function_Enable66
;__Lib_GPIO_32F10x.c, 314 :: 		
0x0F08	0x4935    LDR	R1, [PC, #212]
; tmpreg start address is: 8 (R2)
0x0F0A	0x680A    LDR	R2, [R1, #0]
;__Lib_GPIO_32F10x.c, 315 :: 		
; tmpreg end address is: 8 (R2)
0x0F0C	0xE001    B	L_GPIO_Alternate_Function_Enable67
L_GPIO_Alternate_Function_Enable66:
;__Lib_GPIO_32F10x.c, 318 :: 		
0x0F0E	0x4935    LDR	R1, [PC, #212]
; tmpreg start address is: 8 (R2)
0x0F10	0x680A    LDR	R2, [R1, #0]
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 319 :: 		
L_GPIO_Alternate_Function_Enable67:
;__Lib_GPIO_32F10x.c, 321 :: 		
; tmpreg start address is: 8 (R2)
0x0F12	0xF4042170  AND	R1, R4, #983040
0x0F16	0x0C09    LSRS	R1, R1, #16
; tmpmask start address is: 24 (R6)
0x0F18	0x460E    MOV	R6, R1
;__Lib_GPIO_32F10x.c, 322 :: 		
0x0F1A	0xF64F71FF  MOVW	R1, #65535
0x0F1E	0xEA040101  AND	R1, R4, R1, LSL #0
; tmp start address is: 20 (R5)
0x0F22	0x460D    MOV	R5, R1
;__Lib_GPIO_32F10x.c, 324 :: 		
0x0F24	0xF4041140  AND	R1, R4, #3145728
0x0F28	0xF5B11F40  CMP	R1, #3145728
0x0F2C	0xD10D    BNE	L_GPIO_Alternate_Function_Enable68
; tmpmask end address is: 24 (R6)
;__Lib_GPIO_32F10x.c, 326 :: 		
0x0F2E	0xF06F6170  MVN	R1, #251658240
0x0F32	0xEA020101  AND	R1, R2, R1, LSL #0
; tmpreg end address is: 8 (R2)
; tmpreg start address is: 24 (R6)
0x0F36	0x460E    MOV	R6, R1
;__Lib_GPIO_32F10x.c, 327 :: 		
0x0F38	0x492A    LDR	R1, [PC, #168]
0x0F3A	0x680A    LDR	R2, [R1, #0]
0x0F3C	0xF06F6170  MVN	R1, #251658240
0x0F40	0x400A    ANDS	R2, R1
0x0F42	0x4928    LDR	R1, [PC, #160]
0x0F44	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_32F10x.c, 328 :: 		
0x0F46	0x4632    MOV	R2, R6
; tmpreg end address is: 24 (R6)
0x0F48	0xE016    B	L_GPIO_Alternate_Function_Enable69
L_GPIO_Alternate_Function_Enable68:
;__Lib_GPIO_32F10x.c, 329 :: 		
; tmpreg start address is: 8 (R2)
; tmpmask start address is: 24 (R6)
0x0F4A	0xF4041180  AND	R1, R4, #1048576
0x0F4E	0xF5B11F80  CMP	R1, #1048576
0x0F52	0xD109    BNE	L_GPIO_Alternate_Function_Enable70
;__Lib_GPIO_32F10x.c, 331 :: 		
0x0F54	0xF04F0103  MOV	R1, #3
0x0F58	0x40B1    LSLS	R1, R6
; tmpmask end address is: 24 (R6)
;__Lib_GPIO_32F10x.c, 332 :: 		
0x0F5A	0x43C9    MVN	R1, R1
0x0F5C	0xEA020101  AND	R1, R2, R1, LSL #0
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 333 :: 		
0x0F60	0xF0416170  ORR	R1, R1, #251658240
; tmpreg start address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 334 :: 		
0x0F64	0x460A    MOV	R2, R1
; tmpreg end address is: 4 (R1)
0x0F66	0xE007    B	L_GPIO_Alternate_Function_Enable71
L_GPIO_Alternate_Function_Enable70:
;__Lib_GPIO_32F10x.c, 337 :: 		
; tmpreg start address is: 8 (R2)
0x0F68	0x0D61    LSRS	R1, R4, #21
0x0F6A	0x0109    LSLS	R1, R1, #4
0x0F6C	0xFA05F101  LSL	R1, R5, R1
0x0F70	0x43C9    MVN	R1, R1
0x0F72	0x400A    ANDS	R2, R1
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 338 :: 		
0x0F74	0xF0426270  ORR	R2, R2, #251658240
; tmpreg start address is: 8 (R2)
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 339 :: 		
L_GPIO_Alternate_Function_Enable71:
; tmpreg start address is: 8 (R2)
; tmpreg end address is: 8 (R2)
L_GPIO_Alternate_Function_Enable69:
;__Lib_GPIO_32F10x.c, 341 :: 		
; tmpreg start address is: 8 (R2)
0x0F78	0xB12B    CBZ	R3, L__GPIO_Alternate_Function_Enable106
; newstate end address is: 12 (R3)
;__Lib_GPIO_32F10x.c, 343 :: 		
0x0F7A	0x0D61    LSRS	R1, R4, #21
0x0F7C	0x0109    LSLS	R1, R1, #4
0x0F7E	0xFA05F101  LSL	R1, R5, R1
; tmp end address is: 20 (R5)
0x0F82	0x430A    ORRS	R2, R1
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 344 :: 		
0x0F84	0xE7FF    B	L_GPIO_Alternate_Function_Enable72
L__GPIO_Alternate_Function_Enable106:
;__Lib_GPIO_32F10x.c, 341 :: 		
;__Lib_GPIO_32F10x.c, 344 :: 		
L_GPIO_Alternate_Function_Enable72:
;__Lib_GPIO_32F10x.c, 346 :: 		
; tmpreg start address is: 8 (R2)
0x0F86	0xF0044100  AND	R1, R4, #-2147483648
; gpio_remap end address is: 16 (R4)
0x0F8A	0xF1B14F00  CMP	R1, #-2147483648
0x0F8E	0xD102    BNE	L_GPIO_Alternate_Function_Enable73
;__Lib_GPIO_32F10x.c, 348 :: 		
0x0F90	0x4913    LDR	R1, [PC, #76]
0x0F92	0x600A    STR	R2, [R1, #0]
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 349 :: 		
0x0F94	0xE001    B	L_GPIO_Alternate_Function_Enable74
L_GPIO_Alternate_Function_Enable73:
;__Lib_GPIO_32F10x.c, 352 :: 		
; tmpreg start address is: 8 (R2)
0x0F96	0x4913    LDR	R1, [PC, #76]
0x0F98	0x600A    STR	R2, [R1, #0]
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 353 :: 		
L_GPIO_Alternate_Function_Enable74:
;__Lib_GPIO_32F10x.c, 356 :: 		
; i start address is: 40 (R10)
0x0F9A	0xF2400A00  MOVW	R10, #0
; module end address is: 0 (R0)
; i end address is: 40 (R10)
0x0F9E	0x4681    MOV	R9, R0
;__Lib_GPIO_32F10x.c, 357 :: 		
L_GPIO_Alternate_Function_Enable75:
; i start address is: 40 (R10)
; module start address is: 36 (R9)
0x0FA0	0xEA4F018A  LSL	R1, R10, #2
0x0FA4	0xEB090101  ADD	R1, R9, R1, LSL #0
0x0FA8	0x6809    LDR	R1, [R1, #0]
0x0FAA	0xF1B13FFF  CMP	R1, #-1
0x0FAE	0xD010    BEQ	L_GPIO_Alternate_Function_Enable76
;__Lib_GPIO_32F10x.c, 358 :: 		
0x0FB0	0xF1090134  ADD	R1, R9, #52
0x0FB4	0xEA4F038A  LSL	R3, R10, #2
0x0FB8	0x18C9    ADDS	R1, R1, R3
0x0FBA	0x6809    LDR	R1, [R1, #0]
0x0FBC	0x460A    MOV	R2, R1
0x0FBE	0xEB090103  ADD	R1, R9, R3, LSL #0
0x0FC2	0x6809    LDR	R1, [R1, #0]
0x0FC4	0x4608    MOV	R0, R1
0x0FC6	0x4611    MOV	R1, R2
0x0FC8	0xF7FFFDC6  BL	__Lib_GPIO_32F10x_GPIO_Configure_Pin+0
;__Lib_GPIO_32F10x.c, 359 :: 		
0x0FCC	0xF10A0A01  ADD	R10, R10, #1
;__Lib_GPIO_32F10x.c, 360 :: 		
; module end address is: 36 (R9)
; i end address is: 40 (R10)
0x0FD0	0xE7E6    B	L_GPIO_Alternate_Function_Enable75
L_GPIO_Alternate_Function_Enable76:
;__Lib_GPIO_32F10x.c, 363 :: 		
L_end_GPIO_Alternate_Function_Enable:
0x0FD2	0xF8DDE000  LDR	LR, [SP, #0]
0x0FD6	0xB001    ADD	SP, SP, #4
0x0FD8	0x4770    BX	LR
0x0FDA	0xBF00    NOP
0x0FDC	0x03004242  	RCC_APB2ENRbits+0
0x0FE0	0x001C4001  	AFIO_MAPR2+0
0x0FE4	0x00044001  	AFIO_MAPR+0
; end of _GPIO_Alternate_Function_Enable
__Lib_GPIO_32F10x_GPIO_Configure_Pin:
;__Lib_GPIO_32F10x.c, 282 :: 		
; config start address is: 4 (R1)
; af_pin start address is: 0 (R0)
0x0B58	0xB083    SUB	SP, SP, #12
0x0B5A	0xF8CDE000  STR	LR, [SP, #0]
; config end address is: 4 (R1)
; af_pin end address is: 0 (R0)
; af_pin start address is: 0 (R0)
; config start address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 286 :: 		
0x0B5E	0xF00003FF  AND	R3, R0, #255
; af_pin end address is: 0 (R0)
0x0B62	0x091A    LSRS	R2, R3, #4
; port start address is: 0 (R0)
0x0B64	0x4610    MOV	R0, R2
;__Lib_GPIO_32F10x.c, 287 :: 		
0x0B66	0xF003020F  AND	R2, R3, #15
; pin start address is: 12 (R3)
0x0B6A	0x4613    MOV	R3, R2
;__Lib_GPIO_32F10x.c, 290 :: 		
0x0B6C	0xE014    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin57
; port end address is: 0 (R0)
;__Lib_GPIO_32F10x.c, 291 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin59:
0x0B6E	0x4A19    LDR	R2, [PC, #100]
0x0B70	0x9202    STR	R2, [SP, #8]
0x0B72	0xE01F    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 292 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin60:
0x0B74	0x4A18    LDR	R2, [PC, #96]
0x0B76	0x9202    STR	R2, [SP, #8]
0x0B78	0xE01C    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 293 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin61:
0x0B7A	0x4A18    LDR	R2, [PC, #96]
0x0B7C	0x9202    STR	R2, [SP, #8]
0x0B7E	0xE019    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 294 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin62:
0x0B80	0x4A17    LDR	R2, [PC, #92]
0x0B82	0x9202    STR	R2, [SP, #8]
0x0B84	0xE016    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 295 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin63:
0x0B86	0x4A17    LDR	R2, [PC, #92]
0x0B88	0x9202    STR	R2, [SP, #8]
0x0B8A	0xE013    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 296 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin64:
0x0B8C	0x4A16    LDR	R2, [PC, #88]
0x0B8E	0x9202    STR	R2, [SP, #8]
0x0B90	0xE010    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 297 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin65:
0x0B92	0x4A16    LDR	R2, [PC, #88]
0x0B94	0x9202    STR	R2, [SP, #8]
0x0B96	0xE00D    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 298 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin57:
; port start address is: 0 (R0)
0x0B98	0x2800    CMP	R0, #0
0x0B9A	0xD0E8    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin59
0x0B9C	0x2801    CMP	R0, #1
0x0B9E	0xD0E9    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin60
0x0BA0	0x2802    CMP	R0, #2
0x0BA2	0xD0EA    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin61
0x0BA4	0x2803    CMP	R0, #3
0x0BA6	0xD0EB    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin62
0x0BA8	0x2804    CMP	R0, #4
0x0BAA	0xD0EC    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin63
0x0BAC	0x2805    CMP	R0, #5
0x0BAE	0xD0ED    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin64
0x0BB0	0x2806    CMP	R0, #6
0x0BB2	0xD0EE    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin65
; port end address is: 0 (R0)
L___Lib_GPIO_32F10x_GPIO_Configure_Pin58:
;__Lib_GPIO_32F10x.c, 300 :: 		
0x0BB4	0x2201    MOVS	R2, #1
0x0BB6	0xB212    SXTH	R2, R2
0x0BB8	0x409A    LSLS	R2, R3
; pin end address is: 12 (R3)
0x0BBA	0xF8AD2004  STRH	R2, [SP, #4]
; config end address is: 4 (R1)
0x0BBE	0x9802    LDR	R0, [SP, #8]
0x0BC0	0x460A    MOV	R2, R1
0x0BC2	0xF8BD1004  LDRH	R1, [SP, #4]
0x0BC6	0xF7FFFB5B  BL	_GPIO_Config+0
;__Lib_GPIO_32F10x.c, 301 :: 		
L_end_GPIO_Configure_Pin:
0x0BCA	0xF8DDE000  LDR	LR, [SP, #0]
0x0BCE	0xB003    ADD	SP, SP, #12
0x0BD0	0x4770    BX	LR
0x0BD2	0xBF00    NOP
0x0BD4	0x08004001  	#1073809408
0x0BD8	0x0C004001  	#1073810432
0x0BDC	0x10004001  	#1073811456
0x0BE0	0x14004001  	#1073812480
0x0BE4	0x18004001  	#1073813504
0x0BE8	0x1C004001  	#1073814528
0x0BEC	0x20004001  	#1073815552
; end of __Lib_GPIO_32F10x_GPIO_Configure_Pin
_GPIO_Config:
;__Lib_GPIO_32F10x.c, 124 :: 		
; config start address is: 8 (R2)
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x0280	0xB081    SUB	SP, SP, #4
0x0282	0xF8CDE000  STR	LR, [SP, #0]
0x0286	0xB28C    UXTH	R4, R1
0x0288	0x4615    MOV	R5, R2
; config end address is: 8 (R2)
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 16 (R4)
; config start address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 129 :: 		
0x028A	0x4B77    LDR	R3, [PC, #476]
0x028C	0xEA000303  AND	R3, R0, R3, LSL #0
; port end address is: 0 (R0)
; port start address is: 24 (R6)
0x0290	0x461E    MOV	R6, R3
;__Lib_GPIO_32F10x.c, 131 :: 		
0x0292	0x4618    MOV	R0, R3
0x0294	0xF7FFFF58  BL	_GPIO_Clk_Enable+0
;__Lib_GPIO_32F10x.c, 134 :: 		
0x0298	0xF1B40FFF  CMP	R4, #255
0x029C	0xD10C    BNE	L_GPIO_Config18
;__Lib_GPIO_32F10x.c, 135 :: 		
0x029E	0x4B73    LDR	R3, [PC, #460]
0x02A0	0x429D    CMP	R5, R3
0x02A2	0xD103    BNE	L_GPIO_Config19
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 136 :: 		
0x02A4	0xF04F3333  MOV	R3, #858993459
0x02A8	0x6033    STR	R3, [R6, #0]
; port end address is: 24 (R6)
;__Lib_GPIO_32F10x.c, 137 :: 		
0x02AA	0xE0D9    B	L_end_GPIO_Config
;__Lib_GPIO_32F10x.c, 138 :: 		
L_GPIO_Config19:
;__Lib_GPIO_32F10x.c, 139 :: 		
; port start address is: 24 (R6)
; config start address is: 20 (R5)
; pin_mask start address is: 16 (R4)
0x02AC	0x2D42    CMP	R5, #66
0x02AE	0xD103    BNE	L_GPIO_Config20
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 140 :: 		
0x02B0	0xF04F3344  MOV	R3, #1145324612
0x02B4	0x6033    STR	R3, [R6, #0]
; port end address is: 24 (R6)
;__Lib_GPIO_32F10x.c, 141 :: 		
0x02B6	0xE0D3    B	L_end_GPIO_Config
;__Lib_GPIO_32F10x.c, 142 :: 		
L_GPIO_Config20:
;__Lib_GPIO_32F10x.c, 143 :: 		
; port start address is: 24 (R6)
; config start address is: 20 (R5)
; pin_mask start address is: 16 (R4)
L_GPIO_Config18:
;__Lib_GPIO_32F10x.c, 145 :: 		
0x02B8	0xF64F73FF  MOVW	R3, #65535
0x02BC	0x429C    CMP	R4, R3
0x02BE	0xD114    BNE	L_GPIO_Config21
;__Lib_GPIO_32F10x.c, 146 :: 		
0x02C0	0x4B6A    LDR	R3, [PC, #424]
0x02C2	0x429D    CMP	R5, R3
0x02C4	0xD107    BNE	L_GPIO_Config22
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 147 :: 		
0x02C6	0xF04F3333  MOV	R3, #858993459
0x02CA	0x6033    STR	R3, [R6, #0]
;__Lib_GPIO_32F10x.c, 148 :: 		
0x02CC	0x1D34    ADDS	R4, R6, #4
; port end address is: 24 (R6)
0x02CE	0xF04F3333  MOV	R3, #858993459
0x02D2	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F10x.c, 149 :: 		
0x02D4	0xE0C4    B	L_end_GPIO_Config
;__Lib_GPIO_32F10x.c, 150 :: 		
L_GPIO_Config22:
;__Lib_GPIO_32F10x.c, 151 :: 		
; port start address is: 24 (R6)
; config start address is: 20 (R5)
; pin_mask start address is: 16 (R4)
0x02D6	0x2D42    CMP	R5, #66
0x02D8	0xD107    BNE	L_GPIO_Config23
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 152 :: 		
0x02DA	0xF04F3344  MOV	R3, #1145324612
0x02DE	0x6033    STR	R3, [R6, #0]
;__Lib_GPIO_32F10x.c, 153 :: 		
0x02E0	0x1D34    ADDS	R4, R6, #4
; port end address is: 24 (R6)
0x02E2	0xF04F3344  MOV	R3, #1145324612
0x02E6	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F10x.c, 154 :: 		
0x02E8	0xE0BA    B	L_end_GPIO_Config
;__Lib_GPIO_32F10x.c, 155 :: 		
L_GPIO_Config23:
;__Lib_GPIO_32F10x.c, 156 :: 		
; port start address is: 24 (R6)
; config start address is: 20 (R5)
; pin_mask start address is: 16 (R4)
L_GPIO_Config21:
;__Lib_GPIO_32F10x.c, 158 :: 		
; currentmode start address is: 4 (R1)
0x02EA	0x2100    MOVS	R1, #0
;__Lib_GPIO_32F10x.c, 159 :: 		
; speed start address is: 0 (R0)
0x02EC	0x2000    MOVS	R0, #0
;__Lib_GPIO_32F10x.c, 161 :: 		
0x02EE	0xF0050301  AND	R3, R5, #1
0x02F2	0xB10B    CBZ	R3, L_GPIO_Config24
;__Lib_GPIO_32F10x.c, 162 :: 		
0x02F4	0x2100    MOVS	R1, #0
0x02F6	0xE01D    B	L_GPIO_Config25
L_GPIO_Config24:
;__Lib_GPIO_32F10x.c, 163 :: 		
0x02F8	0xF0050302  AND	R3, R5, #2
0x02FC	0xB133    CBZ	R3, L_GPIO_Config26
; currentmode end address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 164 :: 		
0x02FE	0xF40573C0  AND	R3, R5, #384
0x0302	0xB10B    CBZ	R3, L_GPIO_Config27
;__Lib_GPIO_32F10x.c, 165 :: 		
; currentmode start address is: 4 (R1)
0x0304	0x2108    MOVS	R1, #8
; currentmode end address is: 4 (R1)
0x0306	0xE000    B	L_GPIO_Config28
L_GPIO_Config27:
;__Lib_GPIO_32F10x.c, 167 :: 		
; currentmode start address is: 4 (R1)
0x0308	0x2104    MOVS	R1, #4
; currentmode end address is: 4 (R1)
L_GPIO_Config28:
;__Lib_GPIO_32F10x.c, 168 :: 		
; currentmode start address is: 4 (R1)
0x030A	0xE013    B	L_GPIO_Config29
L_GPIO_Config26:
;__Lib_GPIO_32F10x.c, 169 :: 		
0x030C	0xF0050304  AND	R3, R5, #4
0x0310	0xB133    CBZ	R3, L_GPIO_Config30
; currentmode end address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 170 :: 		
0x0312	0xF0050320  AND	R3, R5, #32
0x0316	0xB10B    CBZ	R3, L_GPIO_Config31
;__Lib_GPIO_32F10x.c, 171 :: 		
; currentmode start address is: 4 (R1)
0x0318	0x2104    MOVS	R1, #4
; currentmode end address is: 4 (R1)
0x031A	0xE000    B	L_GPIO_Config32
L_GPIO_Config31:
;__Lib_GPIO_32F10x.c, 173 :: 		
; currentmode start address is: 4 (R1)
0x031C	0x2100    MOVS	R1, #0
; currentmode end address is: 4 (R1)
L_GPIO_Config32:
;__Lib_GPIO_32F10x.c, 174 :: 		
; currentmode start address is: 4 (R1)
0x031E	0xE009    B	L_GPIO_Config33
L_GPIO_Config30:
;__Lib_GPIO_32F10x.c, 175 :: 		
0x0320	0xF0050308  AND	R3, R5, #8
0x0324	0xB133    CBZ	R3, L__GPIO_Config100
; currentmode end address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 176 :: 		
0x0326	0xF0050320  AND	R3, R5, #32
0x032A	0xB10B    CBZ	R3, L_GPIO_Config35
;__Lib_GPIO_32F10x.c, 177 :: 		
; currentmode start address is: 4 (R1)
0x032C	0x210C    MOVS	R1, #12
; currentmode end address is: 4 (R1)
0x032E	0xE000    B	L_GPIO_Config36
L_GPIO_Config35:
;__Lib_GPIO_32F10x.c, 179 :: 		
; currentmode start address is: 4 (R1)
0x0330	0x2108    MOVS	R1, #8
; currentmode end address is: 4 (R1)
L_GPIO_Config36:
;__Lib_GPIO_32F10x.c, 180 :: 		
; currentmode start address is: 4 (R1)
; currentmode end address is: 4 (R1)
0x0332	0xE7FF    B	L_GPIO_Config34
L__GPIO_Config100:
;__Lib_GPIO_32F10x.c, 175 :: 		
;__Lib_GPIO_32F10x.c, 180 :: 		
L_GPIO_Config34:
; currentmode start address is: 4 (R1)
; currentmode end address is: 4 (R1)
L_GPIO_Config33:
; currentmode start address is: 4 (R1)
; currentmode end address is: 4 (R1)
L_GPIO_Config29:
; currentmode start address is: 4 (R1)
; currentmode end address is: 4 (R1)
L_GPIO_Config25:
;__Lib_GPIO_32F10x.c, 182 :: 		
; currentmode start address is: 4 (R1)
0x0334	0x4B4E    LDR	R3, [PC, #312]
0x0336	0xEA050303  AND	R3, R5, R3, LSL #0
0x033A	0xB10B    CBZ	R3, L_GPIO_Config37
;__Lib_GPIO_32F10x.c, 183 :: 		
0x033C	0x2003    MOVS	R0, #3
0x033E	0xE009    B	L_GPIO_Config38
L_GPIO_Config37:
;__Lib_GPIO_32F10x.c, 184 :: 		
0x0340	0xF4057300  AND	R3, R5, #512
0x0344	0xB10B    CBZ	R3, L_GPIO_Config39
;__Lib_GPIO_32F10x.c, 185 :: 		
0x0346	0x2002    MOVS	R0, #2
0x0348	0xE004    B	L_GPIO_Config40
L_GPIO_Config39:
;__Lib_GPIO_32F10x.c, 186 :: 		
0x034A	0xF4056380  AND	R3, R5, #1024
0x034E	0xB10B    CBZ	R3, L__GPIO_Config101
;__Lib_GPIO_32F10x.c, 187 :: 		
0x0350	0x2001    MOVS	R0, #1
; speed end address is: 0 (R0)
0x0352	0xE7FF    B	L_GPIO_Config41
L__GPIO_Config101:
;__Lib_GPIO_32F10x.c, 186 :: 		
;__Lib_GPIO_32F10x.c, 187 :: 		
L_GPIO_Config41:
; speed start address is: 0 (R0)
; speed end address is: 0 (R0)
L_GPIO_Config40:
; speed start address is: 0 (R0)
; speed end address is: 0 (R0)
L_GPIO_Config38:
;__Lib_GPIO_32F10x.c, 189 :: 		
; speed start address is: 0 (R0)
;__Lib_GPIO_32F10x.c, 195 :: 		
0x0354	0xF005030C  AND	R3, R5, #12
0x0358	0xB10B    CBZ	R3, L__GPIO_Config102
;__Lib_GPIO_32F10x.c, 198 :: 		
0x035A	0x4301    ORRS	R1, R0
; speed end address is: 0 (R0)
; currentmode end address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 199 :: 		
0x035C	0xE7FF    B	L_GPIO_Config42
L__GPIO_Config102:
;__Lib_GPIO_32F10x.c, 195 :: 		
;__Lib_GPIO_32F10x.c, 199 :: 		
L_GPIO_Config42:
;__Lib_GPIO_32F10x.c, 201 :: 		
; currentmode start address is: 4 (R1)
0x035E	0xF00403FF  AND	R3, R4, #255
0x0362	0xB29B    UXTH	R3, R3
0x0364	0x2B00    CMP	R3, #0
0x0366	0xD03B    BEQ	L__GPIO_Config104
;__Lib_GPIO_32F10x.c, 202 :: 		
0x0368	0x6837    LDR	R7, [R6, #0]
; tmpreg start address is: 28 (R7)
;__Lib_GPIO_32F10x.c, 204 :: 		
; pinpos start address is: 0 (R0)
0x036A	0x2000    MOVS	R0, #0
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
; currentmode end address is: 4 (R1)
; tmpreg end address is: 28 (R7)
; pinpos end address is: 0 (R0)
; port end address is: 24 (R6)
0x036C	0xFA1FF884  UXTH	R8, R4
0x0370	0x4632    MOV	R2, R6
0x0372	0x462E    MOV	R6, R5
L_GPIO_Config44:
; pinpos start address is: 0 (R0)
; tmpreg start address is: 28 (R7)
; currentmode start address is: 4 (R1)
; port start address is: 8 (R2)
; config start address is: 24 (R6)
; pin_mask start address is: 32 (R8)
0x0374	0x2808    CMP	R0, #8
0x0376	0xD22C    BCS	L_GPIO_Config45
;__Lib_GPIO_32F10x.c, 206 :: 		
0x0378	0xF04F0301  MOV	R3, #1
0x037C	0xFA03F400  LSL	R4, R3, R0
;__Lib_GPIO_32F10x.c, 208 :: 		
0x0380	0xEA080304  AND	R3, R8, R4, LSL #0
;__Lib_GPIO_32F10x.c, 210 :: 		
0x0384	0x42A3    CMP	R3, R4
0x0386	0xD122    BNE	L__GPIO_Config103
;__Lib_GPIO_32F10x.c, 212 :: 		
0x0388	0x0085    LSLS	R5, R0, #2
;__Lib_GPIO_32F10x.c, 214 :: 		
0x038A	0xF04F030F  MOV	R3, #15
0x038E	0x40AB    LSLS	R3, R5
;__Lib_GPIO_32F10x.c, 215 :: 		
0x0390	0x43DB    MVN	R3, R3
0x0392	0xEA070403  AND	R4, R7, R3, LSL #0
; tmpreg end address is: 28 (R7)
;__Lib_GPIO_32F10x.c, 218 :: 		
0x0396	0xFA01F305  LSL	R3, R1, R5
0x039A	0xEA440303  ORR	R3, R4, R3, LSL #0
; tmpreg start address is: 20 (R5)
0x039E	0x461D    MOV	R5, R3
;__Lib_GPIO_32F10x.c, 221 :: 		
0x03A0	0xF4067381  AND	R3, R6, #258
0x03A4	0xF5B37F81  CMP	R3, #258
0x03A8	0xD105    BNE	L_GPIO_Config48
;__Lib_GPIO_32F10x.c, 223 :: 		
0x03AA	0xF2020414  ADDW	R4, R2, #20
0x03AE	0xF04F0301  MOV	R3, #1
0x03B2	0x4083    LSLS	R3, R0
0x03B4	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F10x.c, 224 :: 		
L_GPIO_Config48:
;__Lib_GPIO_32F10x.c, 226 :: 		
0x03B6	0xF0060382  AND	R3, R6, #130
0x03BA	0x2B82    CMP	R3, #130
0x03BC	0xD105    BNE	L_GPIO_Config49
;__Lib_GPIO_32F10x.c, 228 :: 		
0x03BE	0xF2020410  ADDW	R4, R2, #16
0x03C2	0xF04F0301  MOV	R3, #1
0x03C6	0x4083    LSLS	R3, R0
0x03C8	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F10x.c, 229 :: 		
L_GPIO_Config49:
;__Lib_GPIO_32F10x.c, 230 :: 		
0x03CA	0x462F    MOV	R7, R5
0x03CC	0xE7FF    B	L_GPIO_Config47
; tmpreg end address is: 20 (R5)
L__GPIO_Config103:
;__Lib_GPIO_32F10x.c, 210 :: 		
;__Lib_GPIO_32F10x.c, 230 :: 		
L_GPIO_Config47:
;__Lib_GPIO_32F10x.c, 204 :: 		
; tmpreg start address is: 28 (R7)
0x03CE	0x1C40    ADDS	R0, R0, #1
;__Lib_GPIO_32F10x.c, 231 :: 		
; pinpos end address is: 0 (R0)
0x03D0	0xE7D0    B	L_GPIO_Config44
L_GPIO_Config45:
;__Lib_GPIO_32F10x.c, 232 :: 		
0x03D2	0x6017    STR	R7, [R2, #0]
; currentmode end address is: 4 (R1)
; port end address is: 8 (R2)
; config end address is: 24 (R6)
; pin_mask end address is: 32 (R8)
; tmpreg end address is: 28 (R7)
0x03D4	0xFA1FF088  UXTH	R0, R8
0x03D8	0x460F    MOV	R7, R1
0x03DA	0x4631    MOV	R1, R6
0x03DC	0x4616    MOV	R6, R2
;__Lib_GPIO_32F10x.c, 234 :: 		
0x03DE	0xE002    B	L_GPIO_Config43
L__GPIO_Config104:
;__Lib_GPIO_32F10x.c, 201 :: 		
0x03E0	0x460F    MOV	R7, R1
0x03E2	0x4629    MOV	R1, R5
0x03E4	0xB2A0    UXTH	R0, R4
;__Lib_GPIO_32F10x.c, 234 :: 		
L_GPIO_Config43:
;__Lib_GPIO_32F10x.c, 238 :: 		
; currentmode start address is: 28 (R7)
; port start address is: 24 (R6)
; config start address is: 4 (R1)
; pin_mask start address is: 0 (R0)
0x03E6	0xF1B00FFF  CMP	R0, #255
0x03EA	0xD939    BLS	L_GPIO_Config50
;__Lib_GPIO_32F10x.c, 240 :: 		
0x03EC	0x1D33    ADDS	R3, R6, #4
0x03EE	0xF8D38000  LDR	R8, [R3, #0]
; tmpreg start address is: 32 (R8)
;__Lib_GPIO_32F10x.c, 241 :: 		
; pinpos start address is: 8 (R2)
0x03F2	0x2200    MOVS	R2, #0
; port end address is: 24 (R6)
; tmpreg end address is: 32 (R8)
; pinpos end address is: 8 (R2)
L_GPIO_Config51:
; pinpos start address is: 8 (R2)
; tmpreg start address is: 32 (R8)
; pin_mask start address is: 0 (R0)
; pin_mask end address is: 0 (R0)
; config start address is: 4 (R1)
; config end address is: 4 (R1)
; port start address is: 24 (R6)
; currentmode start address is: 28 (R7)
; currentmode end address is: 28 (R7)
0x03F4	0x2A08    CMP	R2, #8
0x03F6	0xD230    BCS	L_GPIO_Config52
; pin_mask end address is: 0 (R0)
; config end address is: 4 (R1)
; currentmode end address is: 28 (R7)
;__Lib_GPIO_32F10x.c, 243 :: 		
; currentmode start address is: 28 (R7)
; config start address is: 4 (R1)
; pin_mask start address is: 0 (R0)
0x03F8	0xF2020408  ADDW	R4, R2, #8
0x03FC	0xF04F0301  MOV	R3, #1
0x0400	0xFA03F404  LSL	R4, R3, R4
;__Lib_GPIO_32F10x.c, 245 :: 		
0x0404	0xEA000304  AND	R3, R0, R4, LSL #0
;__Lib_GPIO_32F10x.c, 246 :: 		
0x0408	0x42A3    CMP	R3, R4
0x040A	0xD124    BNE	L__GPIO_Config105
;__Lib_GPIO_32F10x.c, 248 :: 		
0x040C	0x0095    LSLS	R5, R2, #2
;__Lib_GPIO_32F10x.c, 250 :: 		
0x040E	0xF04F030F  MOV	R3, #15
0x0412	0x40AB    LSLS	R3, R5
;__Lib_GPIO_32F10x.c, 251 :: 		
0x0414	0x43DB    MVN	R3, R3
0x0416	0xEA080803  AND	R8, R8, R3, LSL #0
; tmpreg end address is: 32 (R8)
;__Lib_GPIO_32F10x.c, 254 :: 		
0x041A	0xFA07F305  LSL	R3, R7, R5
0x041E	0xEA480803  ORR	R8, R8, R3, LSL #0
; tmpreg start address is: 32 (R8)
;__Lib_GPIO_32F10x.c, 257 :: 		
0x0422	0xF4017381  AND	R3, R1, #258
0x0426	0xF5B37F81  CMP	R3, #258
0x042A	0xD107    BNE	L_GPIO_Config55
;__Lib_GPIO_32F10x.c, 259 :: 		
0x042C	0xF2060514  ADDW	R5, R6, #20
0x0430	0xF2020408  ADDW	R4, R2, #8
0x0434	0xF04F0301  MOV	R3, #1
0x0438	0x40A3    LSLS	R3, R4
0x043A	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F10x.c, 260 :: 		
L_GPIO_Config55:
;__Lib_GPIO_32F10x.c, 262 :: 		
0x043C	0xF0010382  AND	R3, R1, #130
0x0440	0x2B82    CMP	R3, #130
0x0442	0xD107    BNE	L_GPIO_Config56
;__Lib_GPIO_32F10x.c, 264 :: 		
0x0444	0xF2060510  ADDW	R5, R6, #16
0x0448	0xF2020408  ADDW	R4, R2, #8
0x044C	0xF04F0301  MOV	R3, #1
0x0450	0x40A3    LSLS	R3, R4
0x0452	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F10x.c, 265 :: 		
L_GPIO_Config56:
;__Lib_GPIO_32F10x.c, 266 :: 		
0x0454	0xE7FF    B	L_GPIO_Config54
; tmpreg end address is: 32 (R8)
L__GPIO_Config105:
;__Lib_GPIO_32F10x.c, 246 :: 		
;__Lib_GPIO_32F10x.c, 266 :: 		
L_GPIO_Config54:
;__Lib_GPIO_32F10x.c, 241 :: 		
; tmpreg start address is: 32 (R8)
0x0456	0x1C52    ADDS	R2, R2, #1
;__Lib_GPIO_32F10x.c, 267 :: 		
; pin_mask end address is: 0 (R0)
; config end address is: 4 (R1)
; currentmode end address is: 28 (R7)
; pinpos end address is: 8 (R2)
0x0458	0xE7CC    B	L_GPIO_Config51
L_GPIO_Config52:
;__Lib_GPIO_32F10x.c, 268 :: 		
0x045A	0x1D33    ADDS	R3, R6, #4
; port end address is: 24 (R6)
0x045C	0xF8C38000  STR	R8, [R3, #0]
; tmpreg end address is: 32 (R8)
;__Lib_GPIO_32F10x.c, 269 :: 		
L_GPIO_Config50:
;__Lib_GPIO_32F10x.c, 270 :: 		
L_end_GPIO_Config:
0x0460	0xF8DDE000  LDR	LR, [SP, #0]
0x0464	0xB001    ADD	SP, SP, #4
0x0466	0x4770    BX	LR
0x0468	0xFC00FFFF  	#-1024
0x046C	0x00140008  	#524308
0x0470	0x08000008  	#526336
; end of _GPIO_Config
_GPIO_Clk_Enable:
;__Lib_GPIO_32F10x.c, 83 :: 		
; gpio_port start address is: 0 (R0)
0x0148	0xB081    SUB	SP, SP, #4
; gpio_port end address is: 0 (R0)
; gpio_port start address is: 0 (R0)
;__Lib_GPIO_32F10x.c, 85 :: 		
0x014A	0x4919    LDR	R1, [PC, #100]
0x014C	0xEA000101  AND	R1, R0, R1, LSL #0
; gpio_port end address is: 0 (R0)
; prt start address is: 0 (R0)
0x0150	0x4608    MOV	R0, R1
;__Lib_GPIO_32F10x.c, 86 :: 		
; pos start address is: 8 (R2)
0x0152	0x2200    MOVS	R2, #0
;__Lib_GPIO_32F10x.c, 87 :: 		
0x0154	0xE00E    B	L_GPIO_Clk_Enable0
; prt end address is: 0 (R0)
; pos end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 88 :: 		
L_GPIO_Clk_Enable2:
; pos start address is: 0 (R0)
0x0156	0x2004    MOVS	R0, #4
; pos end address is: 0 (R0)
0x0158	0xE022    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 89 :: 		
L_GPIO_Clk_Enable3:
; pos start address is: 0 (R0)
0x015A	0x2008    MOVS	R0, #8
; pos end address is: 0 (R0)
0x015C	0xE020    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 90 :: 		
L_GPIO_Clk_Enable4:
; pos start address is: 0 (R0)
0x015E	0x2010    MOVS	R0, #16
; pos end address is: 0 (R0)
0x0160	0xE01E    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 91 :: 		
L_GPIO_Clk_Enable5:
; pos start address is: 0 (R0)
0x0162	0x2020    MOVS	R0, #32
; pos end address is: 0 (R0)
0x0164	0xE01C    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 92 :: 		
L_GPIO_Clk_Enable6:
; pos start address is: 0 (R0)
0x0166	0x2040    MOVS	R0, #64
; pos end address is: 0 (R0)
0x0168	0xE01A    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 93 :: 		
L_GPIO_Clk_Enable7:
; pos start address is: 0 (R0)
0x016A	0x2080    MOVS	R0, #128
; pos end address is: 0 (R0)
0x016C	0xE018    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 94 :: 		
L_GPIO_Clk_Enable8:
; pos start address is: 0 (R0)
0x016E	0xF2401000  MOVW	R0, #256
; pos end address is: 0 (R0)
0x0172	0xE015    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 95 :: 		
L_GPIO_Clk_Enable0:
; pos start address is: 8 (R2)
; prt start address is: 0 (R0)
0x0174	0x490F    LDR	R1, [PC, #60]
0x0176	0x4288    CMP	R0, R1
0x0178	0xD0ED    BEQ	L_GPIO_Clk_Enable2
0x017A	0x490F    LDR	R1, [PC, #60]
0x017C	0x4288    CMP	R0, R1
0x017E	0xD0EC    BEQ	L_GPIO_Clk_Enable3
0x0180	0x490E    LDR	R1, [PC, #56]
0x0182	0x4288    CMP	R0, R1
0x0184	0xD0EB    BEQ	L_GPIO_Clk_Enable4
0x0186	0x490E    LDR	R1, [PC, #56]
0x0188	0x4288    CMP	R0, R1
0x018A	0xD0EA    BEQ	L_GPIO_Clk_Enable5
0x018C	0x490D    LDR	R1, [PC, #52]
0x018E	0x4288    CMP	R0, R1
0x0190	0xD0E9    BEQ	L_GPIO_Clk_Enable6
0x0192	0x490D    LDR	R1, [PC, #52]
0x0194	0x4288    CMP	R0, R1
0x0196	0xD0E8    BEQ	L_GPIO_Clk_Enable7
0x0198	0x490C    LDR	R1, [PC, #48]
0x019A	0x4288    CMP	R0, R1
0x019C	0xD0E7    BEQ	L_GPIO_Clk_Enable8
; prt end address is: 0 (R0)
; pos end address is: 8 (R2)
0x019E	0x4610    MOV	R0, R2
L_GPIO_Clk_Enable1:
;__Lib_GPIO_32F10x.c, 97 :: 		
; pos start address is: 0 (R0)
0x01A0	0x490B    LDR	R1, [PC, #44]
0x01A2	0x6809    LDR	R1, [R1, #0]
0x01A4	0xEA410200  ORR	R2, R1, R0, LSL #0
; pos end address is: 0 (R0)
0x01A8	0x4909    LDR	R1, [PC, #36]
0x01AA	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_32F10x.c, 98 :: 		
L_end_GPIO_Clk_Enable:
0x01AC	0xB001    ADD	SP, SP, #4
0x01AE	0x4770    BX	LR
0x01B0	0xFC00FFFF  	#-1024
0x01B4	0x08004001  	#1073809408
0x01B8	0x0C004001  	#1073810432
0x01BC	0x10004001  	#1073811456
0x01C0	0x14004001  	#1073812480
0x01C4	0x18004001  	#1073813504
0x01C8	0x1C004001  	#1073814528
0x01CC	0x20004001  	#1073815552
0x01D0	0x10184002  	RCC_APB2ENR+0
; end of _GPIO_Clk_Enable
_GPIO_Digital_Output:
;__Lib_GPIO_32F10x.c, 365 :: 		
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x1B08	0xB081    SUB	SP, SP, #4
0x1B0A	0xF8CDE000  STR	LR, [SP, #0]
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 366 :: 		
0x1B0E	0x4A04    LDR	R2, [PC, #16]
0x1B10	0xB289    UXTH	R1, R1
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
0x1B12	0xF7FEFBB5  BL	_GPIO_Config+0
;__Lib_GPIO_32F10x.c, 367 :: 		
L_end_GPIO_Digital_Output:
0x1B16	0xF8DDE000  LDR	LR, [SP, #0]
0x1B1A	0xB001    ADD	SP, SP, #4
0x1B1C	0x4770    BX	LR
0x1B1E	0xBF00    NOP
0x1B20	0x00140008  	#524308
; end of _GPIO_Digital_Output
_GPIO_Analog_Input:
;__Lib_GPIO_32F10x.c, 373 :: 		
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x1AF0	0xB081    SUB	SP, SP, #4
0x1AF2	0xF8CDE000  STR	LR, [SP, #0]
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 374 :: 		
0x1AF6	0xF04F0201  MOV	R2, #1
0x1AFA	0xB289    UXTH	R1, R1
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
0x1AFC	0xF7FEFBC0  BL	_GPIO_Config+0
;__Lib_GPIO_32F10x.c, 375 :: 		
L_end_GPIO_Analog_Input:
0x1B00	0xF8DDE000  LDR	LR, [SP, #0]
0x1B04	0xB001    ADD	SP, SP, #4
0x1B06	0x4770    BX	LR
; end of _GPIO_Analog_Input
_ADC1_Init:
;__Lib_ADC_12_32F10x_10ch.c, 128 :: 		
0x1B44	0xB081    SUB	SP, SP, #4
0x1B46	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_ADC_12_32F10x_10ch.c, 129 :: 		
0x1B4A	0x4907    LDR	R1, [PC, #28]
0x1B4C	0x4807    LDR	R0, [PC, #28]
0x1B4E	0x6001    STR	R1, [R0, #0]
;__Lib_ADC_12_32F10x_10ch.c, 131 :: 		
0x1B50	0x2101    MOVS	R1, #1
0x1B52	0xB249    SXTB	R1, R1
0x1B54	0x4806    LDR	R0, [PC, #24]
0x1B56	0x6001    STR	R1, [R0, #0]
;__Lib_ADC_12_32F10x_10ch.c, 133 :: 		
0x1B58	0x4806    LDR	R0, [PC, #24]
0x1B5A	0xF7FFFB97  BL	__Lib_ADC_12_32F10x_10ch_ADCx_Init+0
;__Lib_ADC_12_32F10x_10ch.c, 166 :: 		
L_end_ADC1_Init:
0x1B5E	0xF8DDE000  LDR	LR, [SP, #0]
0x1B62	0xB001    ADD	SP, SP, #4
0x1B64	0x4770    BX	LR
0x1B66	0xBF00    NOP
0x1B68	0x1CF50000  	_ADC1_Get_Sample+0
0x1B6C	0x03B42000  	_ADC_Get_Sample_Ptr+0
0x1B70	0x03244242  	RCC_APB2ENRbits+0
0x1B74	0x24004001  	ADC1_SR+0
; end of _ADC1_Init
__Lib_ADC_12_32F10x_10ch_ADCx_Init:
;__Lib_ADC_12_32F10x_10ch.c, 58 :: 		
; base start address is: 0 (R0)
0x128C	0xB081    SUB	SP, SP, #4
; base end address is: 0 (R0)
; base start address is: 0 (R0)
;__Lib_ADC_12_32F10x_10ch.c, 62 :: 		
0x128E	0x1D03    ADDS	R3, R0, #4
0x1290	0x681A    LDR	R2, [R3, #0]
0x1292	0x4946    LDR	R1, [PC, #280]
0x1294	0xEA020101  AND	R1, R2, R1, LSL #0
0x1298	0x6019    STR	R1, [R3, #0]
;__Lib_ADC_12_32F10x_10ch.c, 64 :: 		
0x129A	0xF2000308  ADDW	R3, R0, #8
0x129E	0x681A    LDR	R2, [R3, #0]
0x12A0	0x4943    LDR	R1, [PC, #268]
0x12A2	0xEA020101  AND	R1, R2, R1, LSL #0
0x12A6	0x6019    STR	R1, [R3, #0]
;__Lib_ADC_12_32F10x_10ch.c, 66 :: 		
0x12A8	0x1D03    ADDS	R3, R0, #4
0x12AA	0x2200    MOVS	R2, #0
0x12AC	0x6819    LDR	R1, [R3, #0]
0x12AE	0xF3624110  BFI	R1, R2, #16, #1
0x12B2	0x6019    STR	R1, [R3, #0]
;__Lib_ADC_12_32F10x_10ch.c, 67 :: 		
0x12B4	0x1D03    ADDS	R3, R0, #4
0x12B6	0x2200    MOVS	R2, #0
0x12B8	0x6819    LDR	R1, [R3, #0]
0x12BA	0xF3624151  BFI	R1, R2, #17, #1
0x12BE	0x6019    STR	R1, [R3, #0]
;__Lib_ADC_12_32F10x_10ch.c, 68 :: 		
0x12C0	0x1D03    ADDS	R3, R0, #4
0x12C2	0x2200    MOVS	R2, #0
0x12C4	0x6819    LDR	R1, [R3, #0]
0x12C6	0xF3624192  BFI	R1, R2, #18, #1
0x12CA	0x6019    STR	R1, [R3, #0]
;__Lib_ADC_12_32F10x_10ch.c, 69 :: 		
0x12CC	0x1D03    ADDS	R3, R0, #4
0x12CE	0x2200    MOVS	R2, #0
0x12D0	0x6819    LDR	R1, [R3, #0]
0x12D2	0xF36241D3  BFI	R1, R2, #19, #1
0x12D6	0x6019    STR	R1, [R3, #0]
;__Lib_ADC_12_32F10x_10ch.c, 71 :: 		
0x12D8	0x1D03    ADDS	R3, R0, #4
0x12DA	0x2200    MOVS	R2, #0
0x12DC	0x6819    LDR	R1, [R3, #0]
0x12DE	0xF3622108  BFI	R1, R2, #8, #1
0x12E2	0x6019    STR	R1, [R3, #0]
;__Lib_ADC_12_32F10x_10ch.c, 74 :: 		
0x12E4	0xF2000308  ADDW	R3, R0, #8
0x12E8	0x2200    MOVS	R2, #0
0x12EA	0x6819    LDR	R1, [R3, #0]
0x12EC	0xF3620141  BFI	R1, R2, #1, #1
0x12F0	0x6019    STR	R1, [R3, #0]
;__Lib_ADC_12_32F10x_10ch.c, 76 :: 		
0x12F2	0xF2000308  ADDW	R3, R0, #8
0x12F6	0x2200    MOVS	R2, #0
0x12F8	0x6819    LDR	R1, [R3, #0]
0x12FA	0xF36221CB  BFI	R1, R2, #11, #1
0x12FE	0x6019    STR	R1, [R3, #0]
;__Lib_ADC_12_32F10x_10ch.c, 78 :: 		
0x1300	0xF2000308  ADDW	R3, R0, #8
0x1304	0x2201    MOVS	R2, #1
0x1306	0x6819    LDR	R1, [R3, #0]
0x1308	0xF3624151  BFI	R1, R2, #17, #1
0x130C	0x6019    STR	R1, [R3, #0]
;__Lib_ADC_12_32F10x_10ch.c, 79 :: 		
0x130E	0xF2000308  ADDW	R3, R0, #8
0x1312	0x2201    MOVS	R2, #1
0x1314	0x6819    LDR	R1, [R3, #0]
0x1316	0xF3624192  BFI	R1, R2, #18, #1
0x131A	0x6019    STR	R1, [R3, #0]
;__Lib_ADC_12_32F10x_10ch.c, 80 :: 		
0x131C	0xF2000308  ADDW	R3, R0, #8
0x1320	0x2201    MOVS	R2, #1
0x1322	0x6819    LDR	R1, [R3, #0]
0x1324	0xF36241D3  BFI	R1, R2, #19, #1
0x1328	0x6019    STR	R1, [R3, #0]
;__Lib_ADC_12_32F10x_10ch.c, 83 :: 		
0x132A	0xF200032C  ADDW	R3, R0, #44
0x132E	0x2200    MOVS	R2, #0
0x1330	0x6819    LDR	R1, [R3, #0]
0x1332	0xF3625114  BFI	R1, R2, #20, #1
0x1336	0x6019    STR	R1, [R3, #0]
;__Lib_ADC_12_32F10x_10ch.c, 84 :: 		
0x1338	0xF200032C  ADDW	R3, R0, #44
0x133C	0x2200    MOVS	R2, #0
0x133E	0x6819    LDR	R1, [R3, #0]
0x1340	0xF3625155  BFI	R1, R2, #21, #1
0x1344	0x6019    STR	R1, [R3, #0]
;__Lib_ADC_12_32F10x_10ch.c, 85 :: 		
0x1346	0xF200032C  ADDW	R3, R0, #44
0x134A	0x2200    MOVS	R2, #0
0x134C	0x6819    LDR	R1, [R3, #0]
0x134E	0xF3625196  BFI	R1, R2, #22, #1
0x1352	0x6019    STR	R1, [R3, #0]
;__Lib_ADC_12_32F10x_10ch.c, 86 :: 		
0x1354	0xF200032C  ADDW	R3, R0, #44
0x1358	0x2200    MOVS	R2, #0
0x135A	0x6819    LDR	R1, [R3, #0]
0x135C	0xF36251D7  BFI	R1, R2, #23, #1
0x1360	0x6019    STR	R1, [R3, #0]
;__Lib_ADC_12_32F10x_10ch.c, 92 :: 		
0x1362	0xF2000308  ADDW	R3, R0, #8
0x1366	0x2201    MOVS	R2, #1
0x1368	0x6819    LDR	R1, [R3, #0]
0x136A	0xF3620100  BFI	R1, R2, #0, #1
0x136E	0x6019    STR	R1, [R3, #0]
;__Lib_ADC_12_32F10x_10ch.c, 95 :: 		
0x1370	0xF2000308  ADDW	R3, R0, #8
0x1374	0x2201    MOVS	R2, #1
0x1376	0x6819    LDR	R1, [R3, #0]
0x1378	0xF36201C3  BFI	R1, R2, #3, #1
0x137C	0x6019    STR	R1, [R3, #0]
; base end address is: 0 (R0)
;__Lib_ADC_12_32F10x_10ch.c, 96 :: 		
L___Lib_ADC_12_32F10x_10ch_ADCx_Init10:
; base start address is: 0 (R0)
0x137E	0xF2000108  ADDW	R1, R0, #8
0x1382	0x680A    LDR	R2, [R1, #0]
0x1384	0xF3C201C0  UBFX	R1, R2, #3, #1
0x1388	0xB101    CBZ	R1, L___Lib_ADC_12_32F10x_10ch_ADCx_Init11
0x138A	0xE7F8    B	L___Lib_ADC_12_32F10x_10ch_ADCx_Init10
L___Lib_ADC_12_32F10x_10ch_ADCx_Init11:
;__Lib_ADC_12_32F10x_10ch.c, 99 :: 		
0x138C	0xF2000308  ADDW	R3, R0, #8
0x1390	0x2201    MOVS	R2, #1
0x1392	0x6819    LDR	R1, [R3, #0]
0x1394	0xF3620182  BFI	R1, R2, #2, #1
0x1398	0x6019    STR	R1, [R3, #0]
; base end address is: 0 (R0)
;__Lib_ADC_12_32F10x_10ch.c, 100 :: 		
L___Lib_ADC_12_32F10x_10ch_ADCx_Init12:
; base start address is: 0 (R0)
0x139A	0xF2000108  ADDW	R1, R0, #8
0x139E	0x680A    LDR	R2, [R1, #0]
0x13A0	0xF3C20180  UBFX	R1, R2, #2, #1
0x13A4	0xB101    CBZ	R1, L___Lib_ADC_12_32F10x_10ch_ADCx_Init13
; base end address is: 0 (R0)
0x13A6	0xE7F8    B	L___Lib_ADC_12_32F10x_10ch_ADCx_Init12
L___Lib_ADC_12_32F10x_10ch_ADCx_Init13:
;__Lib_ADC_12_32F10x_10ch.c, 102 :: 		
L_end_ADCx_Init:
0x13A8	0xB001    ADD	SP, SP, #4
0x13AA	0x4770    BX	LR
0x13AC	0xFEFFFFF0  	#-983297
0x13B0	0xF7FDFFF1  	#-919555
; end of __Lib_ADC_12_32F10x_10ch_ADCx_Init
_EEPROM_24C02_Init:
;eeprom.c, 8 :: 		void EEPROM_24C02_Init() {
0x1B24	0xB081    SUB	SP, SP, #4
0x1B26	0xF8CDE000  STR	LR, [SP, #0]
;eeprom.c, 10 :: 		I2C1_Init_Advanced(100000, &_GPIO_MODULE_I2C1_PB67);
0x1B2A	0x4904    LDR	R1, [PC, #16]
0x1B2C	0x4804    LDR	R0, [PC, #16]
0x1B2E	0xF7FFFB9F  BL	_I2C1_Init_Advanced+0
;eeprom.c, 11 :: 		}//~
L_end_EEPROM_24C02_Init:
0x1B32	0xF8DDE000  LDR	LR, [SP, #0]
0x1B36	0xB001    ADD	SP, SP, #4
0x1B38	0x4770    BX	LR
0x1B3A	0xBF00    NOP
0x1B3C	0x2E3C0000  	__GPIO_MODULE_I2C1_PB67+0
0x1B40	0x86A00001  	#100000
; end of _EEPROM_24C02_Init
_I2C1_Init_Advanced:
;__Lib_I2C_12.c, 544 :: 		
; module start address is: 4 (R1)
; I2C_ClockSpeed start address is: 0 (R0)
0x1270	0xB081    SUB	SP, SP, #4
0x1272	0xF8CDE000  STR	LR, [SP, #0]
; module end address is: 4 (R1)
; I2C_ClockSpeed end address is: 0 (R0)
; I2C_ClockSpeed start address is: 0 (R0)
; module start address is: 4 (R1)
;__Lib_I2C_12.c, 545 :: 		
0x1276	0x460A    MOV	R2, R1
; module end address is: 4 (R1)
0x1278	0x4601    MOV	R1, R0
; I2C_ClockSpeed end address is: 0 (R0)
0x127A	0x4803    LDR	R0, [PC, #12]
0x127C	0xF7FFFCDC  BL	_I2Cx_Init_Advanced+0
;__Lib_I2C_12.c, 546 :: 		
L_end_I2C1_Init_Advanced:
0x1280	0xF8DDE000  LDR	LR, [SP, #0]
0x1284	0xB001    ADD	SP, SP, #4
0x1286	0x4770    BX	LR
0x1288	0x54004000  	I2C1_CR1+0
; end of _I2C1_Init_Advanced
_I2Cx_Init_Advanced:
;__Lib_I2C_12.c, 591 :: 		
; module start address is: 8 (R2)
; I2C_ClockSpeed start address is: 4 (R1)
; I2C_BASE start address is: 0 (R0)
0x0C38	0xB088    SUB	SP, SP, #32
0x0C3A	0xF8CDE000  STR	LR, [SP, #0]
0x0C3E	0x460E    MOV	R6, R1
; module end address is: 8 (R2)
; I2C_ClockSpeed end address is: 4 (R1)
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 0 (R0)
; I2C_ClockSpeed start address is: 24 (R6)
; module start address is: 8 (R2)
;__Lib_I2C_12.c, 593 :: 		
;__Lib_I2C_12.c, 600 :: 		
0x0C40	0x4B55    LDR	R3, [PC, #340]
0x0C42	0x4298    CMP	R0, R3
0x0C44	0xD10D    BNE	L_I2Cx_Init_Advanced112
;__Lib_I2C_12.c, 601 :: 		
0x0C46	0x2401    MOVS	R4, #1
0x0C48	0xB264    SXTB	R4, R4
0x0C4A	0x4B54    LDR	R3, [PC, #336]
0x0C4C	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_12.c, 602 :: 		
0x0C4E	0x4C54    LDR	R4, [PC, #336]
0x0C50	0x4B54    LDR	R3, [PC, #336]
0x0C52	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_12.c, 603 :: 		
0x0C54	0x4C54    LDR	R4, [PC, #336]
0x0C56	0x4B55    LDR	R3, [PC, #340]
0x0C58	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_12.c, 604 :: 		
0x0C5A	0x4C55    LDR	R4, [PC, #340]
0x0C5C	0x4B55    LDR	R3, [PC, #340]
0x0C5E	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_12.c, 605 :: 		
0x0C60	0xE00F    B	L_I2Cx_Init_Advanced113
L_I2Cx_Init_Advanced112:
;__Lib_I2C_12.c, 606 :: 		
0x0C62	0x4B55    LDR	R3, [PC, #340]
0x0C64	0x4298    CMP	R0, R3
0x0C66	0xD10C    BNE	L_I2Cx_Init_Advanced114
;__Lib_I2C_12.c, 607 :: 		
0x0C68	0x2401    MOVS	R4, #1
0x0C6A	0xB264    SXTB	R4, R4
0x0C6C	0x4B53    LDR	R3, [PC, #332]
0x0C6E	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_12.c, 608 :: 		
0x0C70	0x4C53    LDR	R4, [PC, #332]
0x0C72	0x4B4C    LDR	R3, [PC, #304]
0x0C74	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_12.c, 609 :: 		
0x0C76	0x4C53    LDR	R4, [PC, #332]
0x0C78	0x4B4C    LDR	R3, [PC, #304]
0x0C7A	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_12.c, 610 :: 		
0x0C7C	0x4C52    LDR	R4, [PC, #328]
0x0C7E	0x4B4D    LDR	R3, [PC, #308]
0x0C80	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_12.c, 611 :: 		
L_I2Cx_Init_Advanced114:
L_I2Cx_Init_Advanced113:
;__Lib_I2C_12.c, 612 :: 		
0x0C82	0x9601    STR	R6, [SP, #4]
; module end address is: 8 (R2)
0x0C84	0x9002    STR	R0, [SP, #8]
0x0C86	0x4610    MOV	R0, R2
0x0C88	0xF000F926  BL	_GPIO_Alternate_Function_Enable+0
0x0C8C	0x9802    LDR	R0, [SP, #8]
0x0C8E	0x9E01    LDR	R6, [SP, #4]
;__Lib_I2C_12.c, 617 :: 		
0x0C90	0x1D03    ADDS	R3, R0, #4
0x0C92	0x681B    LDR	R3, [R3, #0]
;__Lib_I2C_12.c, 619 :: 		
0x0C94	0xB29C    UXTH	R4, R3
0x0C96	0xF06F033F  MVN	R3, #63
0x0C9A	0xEA040303  AND	R3, R4, R3, LSL #0
; tmpreg start address is: 20 (R5)
0x0C9E	0xB29D    UXTH	R5, R3
;__Lib_I2C_12.c, 621 :: 		
0x0CA0	0xAB03    ADD	R3, SP, #12
0x0CA2	0x9001    STR	R0, [SP, #4]
0x0CA4	0x4618    MOV	R0, R3
0x0CA6	0xF000F895  BL	_RCC_GetClocksFrequency+0
0x0CAA	0x9801    LDR	R0, [SP, #4]
;__Lib_I2C_12.c, 622 :: 		
; pclk1 start address is: 28 (R7)
0x0CAC	0x9F05    LDR	R7, [SP, #20]
;__Lib_I2C_12.c, 624 :: 		
0x0CAE	0x9C05    LDR	R4, [SP, #20]
0x0CB0	0x4B46    LDR	R3, [PC, #280]
0x0CB2	0xFBB4F3F3  UDIV	R3, R4, R3
; freqrange start address is: 4 (R1)
0x0CB6	0xB299    UXTH	R1, R3
;__Lib_I2C_12.c, 625 :: 		
0x0CB8	0xB29B    UXTH	R3, R3
0x0CBA	0xEA450403  ORR	R4, R5, R3, LSL #0
0x0CBE	0xB2A4    UXTH	R4, R4
; tmpreg end address is: 20 (R5)
;__Lib_I2C_12.c, 627 :: 		
0x0CC0	0x1D03    ADDS	R3, R0, #4
0x0CC2	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_12.c, 631 :: 		
0x0CC4	0x2400    MOVS	R4, #0
0x0CC6	0x6803    LDR	R3, [R0, #0]
0x0CC8	0xF3640300  BFI	R3, R4, #0, #1
0x0CCC	0x6003    STR	R3, [R0, #0]
;__Lib_I2C_12.c, 634 :: 		
; tmpreg start address is: 8 (R2)
0x0CCE	0x2200    MOVS	R2, #0
;__Lib_I2C_12.c, 637 :: 		
0x0CD0	0x4B3F    LDR	R3, [PC, #252]
0x0CD2	0x429E    CMP	R6, R3
0x0CD4	0xD812    BHI	L_I2Cx_Init_Advanced115
;__Lib_I2C_12.c, 640 :: 		
0x0CD6	0x0073    LSLS	R3, R6, #1
; I2C_ClockSpeed end address is: 24 (R6)
0x0CD8	0xFBB7F4F3  UDIV	R4, R7, R3
; pclk1 end address is: 28 (R7)
; result start address is: 16 (R4)
0x0CDC	0xB2A4    UXTH	R4, R4
;__Lib_I2C_12.c, 642 :: 		
0x0CDE	0x2C04    CMP	R4, #4
0x0CE0	0xD202    BCS	L__I2Cx_Init_Advanced144
; result end address is: 16 (R4)
;__Lib_I2C_12.c, 645 :: 		
; result start address is: 12 (R3)
0x0CE2	0x2304    MOVS	R3, #4
; result end address is: 12 (R3)
0x0CE4	0x461C    MOV	R4, R3
;__Lib_I2C_12.c, 646 :: 		
0x0CE6	0xE7FF    B	L_I2Cx_Init_Advanced116
L__I2Cx_Init_Advanced144:
;__Lib_I2C_12.c, 642 :: 		
;__Lib_I2C_12.c, 646 :: 		
L_I2Cx_Init_Advanced116:
;__Lib_I2C_12.c, 648 :: 		
; result start address is: 16 (R4)
0x0CE8	0xEA420304  ORR	R3, R2, R4, LSL #0
; result end address is: 16 (R4)
0x0CEC	0xB29A    UXTH	R2, R3
;__Lib_I2C_12.c, 650 :: 		
0x0CEE	0xF2000420  ADDW	R4, R0, #32
0x0CF2	0x1C4B    ADDS	R3, R1, #1
0x0CF4	0xB29B    UXTH	R3, R3
; freqrange end address is: 4 (R1)
0x0CF6	0x6023    STR	R3, [R4, #0]
;__Lib_I2C_12.c, 651 :: 		
0x0CF8	0xB291    UXTH	R1, R2
0x0CFA	0xE03F    B	L_I2Cx_Init_Advanced117
L_I2Cx_Init_Advanced115:
;__Lib_I2C_12.c, 656 :: 		
; freqrange start address is: 4 (R1)
; pclk1 start address is: 28 (R7)
; I2C_ClockSpeed start address is: 24 (R6)
0x0CFC	0x2303    MOVS	R3, #3
0x0CFE	0xFB06F403  MUL	R4, R6, R3
0x0D02	0xFBB7F3F4  UDIV	R3, R7, R4
; result start address is: 32 (R8)
0x0D06	0xFA1FF883  UXTH	R8, R3
;__Lib_I2C_12.c, 659 :: 		
0x0D0A	0x2319    MOVS	R3, #25
0x0D0C	0xFB06F503  MUL	R5, R6, R3
0x0D10	0xFBB7F3F5  UDIV	R3, R7, R5
; result25 start address is: 36 (R9)
0x0D14	0xFA1FF983  UXTH	R9, R3
;__Lib_I2C_12.c, 661 :: 		
0x0D18	0xFB08F404  MUL	R4, R8, R4
; result end address is: 32 (R8)
;__Lib_I2C_12.c, 663 :: 		
0x0D1C	0xFB09F305  MUL	R3, R9, R5
; result25 end address is: 36 (R9)
;__Lib_I2C_12.c, 665 :: 		
0x0D20	0x1B3C    SUB	R4, R7, R4
0x0D22	0x1AFB    SUB	R3, R7, R3
0x0D24	0x429C    CMP	R4, R3
0x0D26	0xD205    BCS	L_I2Cx_Init_Advanced118
;__Lib_I2C_12.c, 666 :: 		
0x0D28	0x2303    MOVS	R3, #3
0x0D2A	0x4373    MULS	R3, R6, R3
; I2C_ClockSpeed end address is: 24 (R6)
0x0D2C	0xFBB7F4F3  UDIV	R4, R7, R3
; pclk1 end address is: 28 (R7)
; result start address is: 16 (R4)
0x0D30	0xB2A4    UXTH	R4, R4
;__Lib_I2C_12.c, 667 :: 		
; result end address is: 16 (R4)
0x0D32	0xE006    B	L_I2Cx_Init_Advanced119
L_I2Cx_Init_Advanced118:
;__Lib_I2C_12.c, 669 :: 		
; pclk1 start address is: 28 (R7)
; I2C_ClockSpeed start address is: 24 (R6)
0x0D34	0x2319    MOVS	R3, #25
0x0D36	0x4373    MULS	R3, R6, R3
; I2C_ClockSpeed end address is: 24 (R6)
0x0D38	0xFBB7F4F3  UDIV	R4, R7, R3
; pclk1 end address is: 28 (R7)
; result start address is: 16 (R4)
0x0D3C	0xB2A4    UXTH	R4, R4
;__Lib_I2C_12.c, 670 :: 		
0x0D3E	0xF4444480  ORR	R4, R4, #16384
; result end address is: 16 (R4)
;__Lib_I2C_12.c, 671 :: 		
L_I2Cx_Init_Advanced119:
;__Lib_I2C_12.c, 674 :: 		
; result start address is: 16 (R4)
0x0D42	0xF64073FF  MOVW	R3, #4095
0x0D46	0xEA040303  AND	R3, R4, R3, LSL #0
0x0D4A	0xB913    CBNZ	R3, L__I2Cx_Init_Advanced145
;__Lib_I2C_12.c, 677 :: 		
0x0D4C	0xF0440401  ORR	R4, R4, #1
; result end address is: 16 (R4)
;__Lib_I2C_12.c, 678 :: 		
0x0D50	0xE7FF    B	L_I2Cx_Init_Advanced120
L__I2Cx_Init_Advanced145:
;__Lib_I2C_12.c, 674 :: 		
;__Lib_I2C_12.c, 678 :: 		
L_I2Cx_Init_Advanced120:
;__Lib_I2C_12.c, 680 :: 		
; result start address is: 16 (R4)
0x0D52	0xF4444300  ORR	R3, R4, #32768
; result end address is: 16 (R4)
0x0D56	0xB29B    UXTH	R3, R3
0x0D58	0x431A    ORRS	R2, R3
0x0D5A	0xB292    UXTH	R2, R2
;__Lib_I2C_12.c, 682 :: 		
0x0D5C	0xF2000520  ADDW	R5, R0, #32
0x0D60	0xF240132C  MOVW	R3, #300
0x0D64	0xFB01F403  MUL	R4, R1, R3
0x0D68	0xB2A4    UXTH	R4, R4
; freqrange end address is: 4 (R1)
0x0D6A	0xF24033E8  MOVW	R3, #1000
0x0D6E	0xFBB4F3F3  UDIV	R3, R4, R3
0x0D72	0xB29B    UXTH	R3, R3
0x0D74	0x1C5B    ADDS	R3, R3, #1
0x0D76	0xB29B    UXTH	R3, R3
0x0D78	0x602B    STR	R3, [R5, #0]
; tmpreg end address is: 8 (R2)
0x0D7A	0xB291    UXTH	R1, R2
;__Lib_I2C_12.c, 683 :: 		
L_I2Cx_Init_Advanced117:
;__Lib_I2C_12.c, 685 :: 		
; tmpreg start address is: 4 (R1)
0x0D7C	0xF200031C  ADDW	R3, R0, #28
0x0D80	0x6019    STR	R1, [R3, #0]
; tmpreg end address is: 4 (R1)
;__Lib_I2C_12.c, 687 :: 		
0x0D82	0x2300    MOVS	R3, #0
0x0D84	0x6003    STR	R3, [R0, #0]
;__Lib_I2C_12.c, 688 :: 		
0x0D86	0x2401    MOVS	R4, #1
0x0D88	0x6803    LDR	R3, [R0, #0]
0x0D8A	0xF3640300  BFI	R3, R4, #0, #1
0x0D8E	0x6003    STR	R3, [R0, #0]
; I2C_BASE end address is: 0 (R0)
;__Lib_I2C_12.c, 689 :: 		
L_end_I2Cx_Init_Advanced:
0x0D90	0xF8DDE000  LDR	LR, [SP, #0]
0x0D94	0xB008    ADD	SP, SP, #32
0x0D96	0x4770    BX	LR
0x0D98	0x54004000  	I2C1_CR1+0
0x0D9C	0x03D44242  	RCC_APB1ENR+0
0x0DA0	0x0E7D0000  	_I2C1_Start+0
0x0DA4	0x03C82000  	_I2C_Start_Ptr+0
0x0DA8	0x0EB50000  	_I2C1_Read+0
0x0DAC	0x03CC2000  	_I2C_Read_Ptr+0
0x0DB0	0x0BFD0000  	_I2C1_Write+0
0x0DB4	0x03D02000  	_I2C_Write_Ptr+0
0x0DB8	0x58004000  	I2C2_CR1+0
0x0DBC	0x03D84242  	RCC_APB1ENR+0
0x0DC0	0xFFFFFFFF  	_I2C2_Start+0
0x0DC4	0xFFFFFFFF  	_I2C2_Read+0
0x0DC8	0xFFFFFFFF  	_I2C2_Write+0
0x0DCC	0x4240000F  	#1000000
0x0DD0	0x86A00001  	#100000
; end of _I2Cx_Init_Advanced
_citajeprom:
;eeprom.c, 31 :: 		void citajeprom(){
0x1A3C	0xB081    SUB	SP, SP, #4
0x1A3E	0xF8CDE000  STR	LR, [SP, #0]
;eeprom.c, 32 :: 		leftLimit = EEPROM_24C02_RdSingle(2);
0x1A42	0x2002    MOVS	R0, #2
0x1A44	0xF7FFFCDA  BL	_EEPROM_24C02_RdSingle+0
0x1A48	0x4912    LDR	R1, [PC, #72]
0x1A4A	0x8008    STRH	R0, [R1, #0]
;eeprom.c, 33 :: 		leftLimit = leftLimit << 8;
0x1A4C	0x4608    MOV	R0, R1
0x1A4E	0x8800    LDRH	R0, [R0, #0]
0x1A50	0x0200    LSLS	R0, R0, #8
0x1A52	0x8008    STRH	R0, [R1, #0]
;eeprom.c, 34 :: 		leftLimit = leftLimit + EEPROM_24C02_RdSingle(1);
0x1A54	0x2001    MOVS	R0, #1
0x1A56	0xF7FFFCD1  BL	_EEPROM_24C02_RdSingle+0
0x1A5A	0x4A0E    LDR	R2, [PC, #56]
0x1A5C	0x8811    LDRH	R1, [R2, #0]
0x1A5E	0x1808    ADDS	R0, R1, R0
0x1A60	0x8010    STRH	R0, [R2, #0]
;eeprom.c, 36 :: 		rightLimit= EEPROM_24C02_RdSingle(4);
0x1A62	0x2004    MOVS	R0, #4
0x1A64	0xF7FFFCCA  BL	_EEPROM_24C02_RdSingle+0
0x1A68	0x490B    LDR	R1, [PC, #44]
0x1A6A	0x8008    STRH	R0, [R1, #0]
;eeprom.c, 37 :: 		rightLimit = rightLimit << 8;
0x1A6C	0x4608    MOV	R0, R1
0x1A6E	0x8800    LDRH	R0, [R0, #0]
0x1A70	0x0200    LSLS	R0, R0, #8
0x1A72	0x8008    STRH	R0, [R1, #0]
;eeprom.c, 38 :: 		rightLimit = rightLimit + EEPROM_24C02_RdSingle(3);
0x1A74	0x2003    MOVS	R0, #3
0x1A76	0xF7FFFCC1  BL	_EEPROM_24C02_RdSingle+0
0x1A7A	0x4A07    LDR	R2, [PC, #28]
0x1A7C	0x8811    LDRH	R1, [R2, #0]
0x1A7E	0x1808    ADDS	R0, R1, R0
0x1A80	0x8010    STRH	R0, [R2, #0]
;eeprom.c, 40 :: 		dir = EEPROM_24C02_RdSingle(5);
0x1A82	0x2005    MOVS	R0, #5
0x1A84	0xF7FFFCBA  BL	_EEPROM_24C02_RdSingle+0
0x1A88	0x4904    LDR	R1, [PC, #16]
0x1A8A	0x7008    STRB	R0, [R1, #0]
;eeprom.c, 42 :: 		}
L_end_citajeprom:
0x1A8C	0xF8DDE000  LDR	LR, [SP, #0]
0x1A90	0xB001    ADD	SP, SP, #4
0x1A92	0x4770    BX	LR
0x1A94	0x00002000  	_leftLimit+0
0x1A98	0x00022000  	_rightLimit+0
0x1A9C	0x002B2000  	_dir+0
; end of _citajeprom
_EEPROM_24C02_RdSingle:
;eeprom.c, 22 :: 		unsigned short EEPROM_24C02_RdSingle(unsigned int rAddr) {
; rAddr start address is: 0 (R0)
0x13FC	0xB081    SUB	SP, SP, #4
0x13FE	0xF8CDE000  STR	LR, [SP, #0]
; rAddr end address is: 0 (R0)
; rAddr start address is: 0 (R0)
;eeprom.c, 23 :: 		data_[0] = rAddr;
0x1402	0x490C    LDR	R1, [PC, #48]
0x1404	0x7008    STRB	R0, [R1, #0]
; rAddr end address is: 0 (R0)
;eeprom.c, 24 :: 		I2C1_Start();              // issue I2C start signal
0x1406	0xF7FFFD39  BL	_I2C1_Start+0
;eeprom.c, 25 :: 		I2C1_Write(0x50,data_,1,END_MODE_RESTART);
0x140A	0xF2400300  MOVW	R3, #0
0x140E	0x2201    MOVS	R2, #1
0x1410	0x4908    LDR	R1, [PC, #32]
0x1412	0x2050    MOVS	R0, #80
0x1414	0xF7FFFBF2  BL	_I2C1_Write+0
;eeprom.c, 26 :: 		I2C1_Read(0x50,data_,1,END_MODE_STOP);
0x1418	0xF2400301  MOVW	R3, #1
0x141C	0x2201    MOVS	R2, #1
0x141E	0x4905    LDR	R1, [PC, #20]
0x1420	0x2050    MOVS	R0, #80
0x1422	0xF7FFFD47  BL	_I2C1_Read+0
;eeprom.c, 28 :: 		return data_[0];
0x1426	0x4903    LDR	R1, [PC, #12]
0x1428	0x7808    LDRB	R0, [R1, #0]
;eeprom.c, 29 :: 		}
L_end_EEPROM_24C02_RdSingle:
0x142A	0xF8DDE000  LDR	LR, [SP, #0]
0x142E	0xB001    ADD	SP, SP, #4
0x1430	0x4770    BX	LR
0x1432	0xBF00    NOP
0x1434	0x003E2000  	_data_+0
; end of _EEPROM_24C02_RdSingle
_I2C1_Start:
;__Lib_I2C_12.c, 536 :: 		
0x0E7C	0xB081    SUB	SP, SP, #4
0x0E7E	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_I2C_12.c, 537 :: 		
0x0E82	0x4803    LDR	R0, [PC, #12]
0x0E84	0xF7FFFE02  BL	_I2Cx_Start+0
;__Lib_I2C_12.c, 538 :: 		
L_end_I2C1_Start:
0x0E88	0xF8DDE000  LDR	LR, [SP, #0]
0x0E8C	0xB001    ADD	SP, SP, #4
0x0E8E	0x4770    BX	LR
0x0E90	0x54004000  	I2C1_CR1+0
; end of _I2C1_Start
_I2Cx_Start:
;__Lib_I2C_12.c, 204 :: 		
; I2C_BASE start address is: 0 (R0)
0x0A8C	0xB083    SUB	SP, SP, #12
0x0A8E	0xF8CDE000  STR	LR, [SP, #0]
0x0A92	0x4603    MOV	R3, R0
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 12 (R3)
;__Lib_I2C_12.c, 205 :: 		
; timeout start address is: 0 (R0)
0x0A94	0xF04F0000  MOV	R0, #0
;__Lib_I2C_12.c, 208 :: 		
0x0A98	0x4926    LDR	R1, [PC, #152]
0x0A9A	0x428B    CMP	R3, R1
0x0A9C	0xD106    BNE	L_I2Cx_Start7
; timeout end address is: 0 (R0)
;__Lib_I2C_12.c, 209 :: 		
0x0A9E	0x4926    LDR	R1, [PC, #152]
; timeout start address is: 16 (R4)
0x0AA0	0x680C    LDR	R4, [R1, #0]
;__Lib_I2C_12.c, 210 :: 		
0x0AA2	0x4926    LDR	R1, [PC, #152]
0x0AA4	0x680A    LDR	R2, [R1, #0]
0x0AA6	0x4926    LDR	R1, [PC, #152]
0x0AA8	0x600A    STR	R2, [R1, #0]
;__Lib_I2C_12.c, 211 :: 		
; timeout end address is: 16 (R4)
0x0AAA	0xE00B    B	L_I2Cx_Start8
L_I2Cx_Start7:
;__Lib_I2C_12.c, 212 :: 		
; timeout start address is: 0 (R0)
0x0AAC	0x4925    LDR	R1, [PC, #148]
0x0AAE	0x428B    CMP	R3, R1
0x0AB0	0xD107    BNE	L__I2Cx_Start123
; timeout end address is: 0 (R0)
;__Lib_I2C_12.c, 213 :: 		
0x0AB2	0x4925    LDR	R1, [PC, #148]
; timeout start address is: 0 (R0)
0x0AB4	0x6808    LDR	R0, [R1, #0]
;__Lib_I2C_12.c, 214 :: 		
0x0AB6	0x4925    LDR	R1, [PC, #148]
0x0AB8	0x680A    LDR	R2, [R1, #0]
0x0ABA	0x4921    LDR	R1, [PC, #132]
0x0ABC	0x600A    STR	R2, [R1, #0]
; timeout end address is: 0 (R0)
0x0ABE	0x4604    MOV	R4, R0
;__Lib_I2C_12.c, 215 :: 		
0x0AC0	0xE000    B	L_I2Cx_Start9
L__I2Cx_Start123:
;__Lib_I2C_12.c, 212 :: 		
0x0AC2	0x4604    MOV	R4, R0
;__Lib_I2C_12.c, 215 :: 		
L_I2Cx_Start9:
; timeout start address is: 16 (R4)
; timeout end address is: 16 (R4)
L_I2Cx_Start8:
;__Lib_I2C_12.c, 217 :: 		
; timeout start address is: 16 (R4)
0x0AC4	0x4922    LDR	R1, [PC, #136]
0x0AC6	0x600C    STR	R4, [R1, #0]
;__Lib_I2C_12.c, 219 :: 		
0x0AC8	0x9401    STR	R4, [SP, #4]
0x0ACA	0x9302    STR	R3, [SP, #8]
0x0ACC	0x4618    MOV	R0, R3
0x0ACE	0xF7FFFB8F  BL	__Lib_I2C_12_I2Cx_Wait_For_Idle+0
0x0AD2	0x9B02    LDR	R3, [SP, #8]
0x0AD4	0x9C01    LDR	R4, [SP, #4]
0x0AD6	0xB910    CBNZ	R0, L_I2Cx_Start10
; I2C_BASE end address is: 12 (R3)
; timeout end address is: 16 (R4)
;__Lib_I2C_12.c, 220 :: 		
0x0AD8	0xF64F70FF  MOVW	R0, #65535
0x0ADC	0xE025    B	L_end_I2Cx_Start
;__Lib_I2C_12.c, 221 :: 		
L_I2Cx_Start10:
;__Lib_I2C_12.c, 224 :: 		
; timeout start address is: 16 (R4)
; I2C_BASE start address is: 12 (R3)
0x0ADE	0x2201    MOVS	R2, #1
0x0AE0	0x6819    LDR	R1, [R3, #0]
0x0AE2	0xF3622108  BFI	R1, R2, #8, #1
0x0AE6	0x6019    STR	R1, [R3, #0]
;__Lib_I2C_12.c, 226 :: 		
0x0AE8	0xF2030114  ADDW	R1, R3, #20
0x0AEC	0x680A    LDR	R2, [R1, #0]
0x0AEE	0xF3C22140  UBFX	R1, R2, #9, #1
0x0AF2	0xB111    CBZ	R1, L_I2Cx_Start11
; I2C_BASE end address is: 12 (R3)
; timeout end address is: 16 (R4)
;__Lib_I2C_12.c, 227 :: 		
0x0AF4	0xF64F70FF  MOVW	R0, #65535
0x0AF8	0xE017    B	L_end_I2Cx_Start
;__Lib_I2C_12.c, 228 :: 		
L_I2Cx_Start11:
;__Lib_I2C_12.c, 229 :: 		
; timeout start address is: 16 (R4)
; I2C_BASE start address is: 12 (R3)
0x0AFA	0x4625    MOV	R5, R4
; timeout end address is: 16 (R4)
0x0AFC	0x461C    MOV	R4, R3
L_I2Cx_Start12:
; I2C_BASE end address is: 12 (R3)
; timeout start address is: 20 (R5)
; I2C_BASE start address is: 16 (R4)
0x0AFE	0x4915    LDR	R1, [PC, #84]
0x0B00	0x4620    MOV	R0, R4
0x0B02	0xF7FFFCB7  BL	_ChekXForEvent+0
0x0B06	0xB978    CBNZ	R0, L_I2Cx_Start13
;__Lib_I2C_12.c, 230 :: 		
0x0B08	0x4911    LDR	R1, [PC, #68]
0x0B0A	0x6809    LDR	R1, [R1, #0]
0x0B0C	0xB159    CBZ	R1, L__I2Cx_Start124
;__Lib_I2C_12.c, 231 :: 		
0x0B0E	0xB935    CBNZ	R5, L_I2Cx_Start15
; I2C_BASE end address is: 16 (R4)
; timeout end address is: 20 (R5)
;__Lib_I2C_12.c, 232 :: 		
0x0B10	0x2006    MOVS	R0, #6
0x0B12	0x4C0B    LDR	R4, [PC, #44]
0x0B14	0x6824    LDR	R4, [R4, #0]
0x0B16	0x47A0    BLX	R4
;__Lib_I2C_12.c, 233 :: 		
0x0B18	0xF64F70FF  MOVW	R0, #65535
0x0B1C	0xE005    B	L_end_I2Cx_Start
;__Lib_I2C_12.c, 234 :: 		
L_I2Cx_Start15:
;__Lib_I2C_12.c, 235 :: 		
; timeout start address is: 20 (R5)
; I2C_BASE start address is: 16 (R4)
0x0B1E	0x1E69    SUBS	R1, R5, #1
; timeout end address is: 20 (R5)
; timeout start address is: 0 (R0)
0x0B20	0x4608    MOV	R0, R1
; timeout end address is: 0 (R0)
0x0B22	0x4605    MOV	R5, R0
;__Lib_I2C_12.c, 236 :: 		
0x0B24	0xE7FF    B	L_I2Cx_Start14
L__I2Cx_Start124:
;__Lib_I2C_12.c, 230 :: 		
;__Lib_I2C_12.c, 236 :: 		
L_I2Cx_Start14:
;__Lib_I2C_12.c, 237 :: 		
; timeout start address is: 20 (R5)
; I2C_BASE end address is: 16 (R4)
; timeout end address is: 20 (R5)
0x0B26	0xE7EA    B	L_I2Cx_Start12
L_I2Cx_Start13:
;__Lib_I2C_12.c, 238 :: 		
0x0B28	0x2000    MOVS	R0, #0
;__Lib_I2C_12.c, 239 :: 		
L_end_I2Cx_Start:
0x0B2A	0xF8DDE000  LDR	LR, [SP, #0]
0x0B2E	0xB003    ADD	SP, SP, #12
0x0B30	0x4770    BX	LR
0x0B32	0xBF00    NOP
0x0B34	0x54004000  	I2C1_CR1+0
0x0B38	0x002C2000  	__Lib_I2C_12__I2C1_TIMEOUT+0
0x0B3C	0x03C02000  	_I2C1_Timeout_Ptr+0
0x0B40	0x03BC2000  	_I2Cx_Timeout_Ptr+0
0x0B44	0x58004000  	I2C2_CR1+0
0x0B48	0x00302000  	__Lib_I2C_12__I2C2_TIMEOUT+0
0x0B4C	0x03C42000  	_I2C2_Timeout_Ptr+0
0x0B50	0x00342000  	__Lib_I2C_12__I2Cx_TIMEOUT+0
0x0B54	0x00010003  	#196609
; end of _I2Cx_Start
__Lib_I2C_12_I2Cx_Wait_For_Idle:
;__Lib_I2C_12.c, 172 :: 		
; I2C_BASE start address is: 0 (R0)
0x01F0	0xB081    SUB	SP, SP, #4
0x01F2	0xF8CDE000  STR	LR, [SP, #0]
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 0 (R0)
;__Lib_I2C_12.c, 173 :: 		
; timeout start address is: 8 (R2)
0x01F6	0xF04F0200  MOV	R2, #0
;__Lib_I2C_12.c, 176 :: 		
0x01FA	0x4919    LDR	R1, [PC, #100]
0x01FC	0x4288    CMP	R0, R1
0x01FE	0xD107    BNE	L___Lib_I2C_12_I2Cx_Wait_For_Idle0
; timeout end address is: 8 (R2)
;__Lib_I2C_12.c, 177 :: 		
0x0200	0x4918    LDR	R1, [PC, #96]
; timeout start address is: 12 (R3)
0x0202	0x680B    LDR	R3, [R1, #0]
;__Lib_I2C_12.c, 178 :: 		
0x0204	0x4918    LDR	R1, [PC, #96]
0x0206	0x680A    LDR	R2, [R1, #0]
0x0208	0x4918    LDR	R1, [PC, #96]
0x020A	0x600A    STR	R2, [R1, #0]
;__Lib_I2C_12.c, 179 :: 		
0x020C	0x461C    MOV	R4, R3
; timeout end address is: 12 (R3)
0x020E	0xE00B    B	L___Lib_I2C_12_I2Cx_Wait_For_Idle1
L___Lib_I2C_12_I2Cx_Wait_For_Idle0:
;__Lib_I2C_12.c, 180 :: 		
; timeout start address is: 8 (R2)
0x0210	0x4917    LDR	R1, [PC, #92]
0x0212	0x4288    CMP	R0, R1
0x0214	0xD107    BNE	L___Lib_I2C_12_I2Cx_Wait_For_Idle121
; timeout end address is: 8 (R2)
;__Lib_I2C_12.c, 181 :: 		
0x0216	0x4917    LDR	R1, [PC, #92]
; timeout start address is: 12 (R3)
0x0218	0x680B    LDR	R3, [R1, #0]
;__Lib_I2C_12.c, 182 :: 		
0x021A	0x4917    LDR	R1, [PC, #92]
0x021C	0x680A    LDR	R2, [R1, #0]
0x021E	0x4913    LDR	R1, [PC, #76]
0x0220	0x600A    STR	R2, [R1, #0]
; timeout end address is: 12 (R3)
0x0222	0x461C    MOV	R4, R3
;__Lib_I2C_12.c, 183 :: 		
0x0224	0xE000    B	L___Lib_I2C_12_I2Cx_Wait_For_Idle2
L___Lib_I2C_12_I2Cx_Wait_For_Idle121:
;__Lib_I2C_12.c, 180 :: 		
0x0226	0x4614    MOV	R4, R2
;__Lib_I2C_12.c, 183 :: 		
L___Lib_I2C_12_I2Cx_Wait_For_Idle2:
; timeout start address is: 16 (R4)
; timeout end address is: 16 (R4)
L___Lib_I2C_12_I2Cx_Wait_For_Idle1:
;__Lib_I2C_12.c, 185 :: 		
; timeout start address is: 16 (R4)
0x0228	0x4914    LDR	R1, [PC, #80]
0x022A	0x600C    STR	R4, [R1, #0]
; I2C_BASE end address is: 0 (R0)
; timeout end address is: 16 (R4)
0x022C	0x4603    MOV	R3, R0
;__Lib_I2C_12.c, 187 :: 		
L___Lib_I2C_12_I2Cx_Wait_For_Idle3:
; timeout start address is: 16 (R4)
; I2C_BASE start address is: 12 (R3)
0x022E	0x4618    MOV	R0, R3
0x0230	0xF7FFFF7E  BL	_I2Cx_Is_Idle+0
0x0234	0xB970    CBNZ	R0, L___Lib_I2C_12_I2Cx_Wait_For_Idle4
;__Lib_I2C_12.c, 188 :: 		
0x0236	0x4911    LDR	R1, [PC, #68]
0x0238	0x6809    LDR	R1, [R1, #0]
0x023A	0xB151    CBZ	R1, L___Lib_I2C_12_I2Cx_Wait_For_Idle122
;__Lib_I2C_12.c, 189 :: 		
0x023C	0xB92C    CBNZ	R4, L___Lib_I2C_12_I2Cx_Wait_For_Idle6
; I2C_BASE end address is: 12 (R3)
; timeout end address is: 16 (R4)
;__Lib_I2C_12.c, 190 :: 		
0x023E	0x2005    MOVS	R0, #5
0x0240	0x4C0A    LDR	R4, [PC, #40]
0x0242	0x6824    LDR	R4, [R4, #0]
0x0244	0x47A0    BLX	R4
;__Lib_I2C_12.c, 191 :: 		
0x0246	0x2000    MOVS	R0, #0
0x0248	0xE005    B	L_end_I2Cx_Wait_For_Idle
;__Lib_I2C_12.c, 192 :: 		
L___Lib_I2C_12_I2Cx_Wait_For_Idle6:
;__Lib_I2C_12.c, 193 :: 		
; timeout start address is: 16 (R4)
; I2C_BASE start address is: 12 (R3)
0x024A	0x1E61    SUBS	R1, R4, #1
; timeout end address is: 16 (R4)
; timeout start address is: 0 (R0)
0x024C	0x4608    MOV	R0, R1
; timeout end address is: 0 (R0)
0x024E	0x4604    MOV	R4, R0
;__Lib_I2C_12.c, 194 :: 		
0x0250	0xE7FF    B	L___Lib_I2C_12_I2Cx_Wait_For_Idle5
L___Lib_I2C_12_I2Cx_Wait_For_Idle122:
;__Lib_I2C_12.c, 188 :: 		
;__Lib_I2C_12.c, 194 :: 		
L___Lib_I2C_12_I2Cx_Wait_For_Idle5:
;__Lib_I2C_12.c, 195 :: 		
; timeout start address is: 16 (R4)
; I2C_BASE end address is: 12 (R3)
; timeout end address is: 16 (R4)
0x0252	0xE7EC    B	L___Lib_I2C_12_I2Cx_Wait_For_Idle3
L___Lib_I2C_12_I2Cx_Wait_For_Idle4:
;__Lib_I2C_12.c, 196 :: 		
0x0254	0x2001    MOVS	R0, #1
;__Lib_I2C_12.c, 197 :: 		
L_end_I2Cx_Wait_For_Idle:
0x0256	0xF8DDE000  LDR	LR, [SP, #0]
0x025A	0xB001    ADD	SP, SP, #4
0x025C	0x4770    BX	LR
0x025E	0xBF00    NOP
0x0260	0x54004000  	I2C1_CR1+0
0x0264	0x002C2000  	__Lib_I2C_12__I2C1_TIMEOUT+0
0x0268	0x03C02000  	_I2C1_Timeout_Ptr+0
0x026C	0x03BC2000  	_I2Cx_Timeout_Ptr+0
0x0270	0x58004000  	I2C2_CR1+0
0x0274	0x00302000  	__Lib_I2C_12__I2C2_TIMEOUT+0
0x0278	0x03C42000  	_I2C2_Timeout_Ptr+0
0x027C	0x00342000  	__Lib_I2C_12__I2Cx_TIMEOUT+0
; end of __Lib_I2C_12_I2Cx_Wait_For_Idle
_I2Cx_Is_Idle:
;__Lib_I2C_12.c, 167 :: 		
; I2C_BASE start address is: 0 (R0)
0x0130	0xB081    SUB	SP, SP, #4
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 0 (R0)
;__Lib_I2C_12.c, 168 :: 		
0x0132	0xF2000118  ADDW	R1, R0, #24
; I2C_BASE end address is: 0 (R0)
0x0136	0x680A    LDR	R2, [R1, #0]
0x0138	0xF3C20140  UBFX	R1, R2, #1, #1
0x013C	0xF0810101  EOR	R1, R1, #1
0x0140	0xB2C9    UXTB	R1, R1
0x0142	0xB2C8    UXTB	R0, R1
;__Lib_I2C_12.c, 169 :: 		
L_end_I2Cx_Is_Idle:
0x0144	0xB001    ADD	SP, SP, #4
0x0146	0x4770    BX	LR
; end of _I2Cx_Is_Idle
_ChekXForEvent:
;__Lib_I2C_12.c, 199 :: 		
; Event start address is: 4 (R1)
; I2C_BASE start address is: 0 (R0)
0x0474	0xB081    SUB	SP, SP, #4
0x0476	0xF8CDE000  STR	LR, [SP, #0]
0x047A	0x460B    MOV	R3, R1
; Event end address is: 4 (R1)
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 0 (R0)
; Event start address is: 12 (R3)
;__Lib_I2C_12.c, 200 :: 		
; I2C_BASE end address is: 0 (R0)
0x047C	0xF7FFFEAA  BL	_I2Cx_Get_Status+0
0x0480	0xEA000203  AND	R2, R0, R3, LSL #0
0x0484	0x429A    CMP	R2, R3
0x0486	0xF2400200  MOVW	R2, #0
0x048A	0xD100    BNE	L__ChekXForEvent156
0x048C	0x2201    MOVS	R2, #1
L__ChekXForEvent156:
; Event end address is: 12 (R3)
0x048E	0xB2D0    UXTB	R0, R2
;__Lib_I2C_12.c, 201 :: 		
L_end_ChekXForEvent:
0x0490	0xF8DDE000  LDR	LR, [SP, #0]
0x0494	0xB001    ADD	SP, SP, #4
0x0496	0x4770    BX	LR
; end of _ChekXForEvent
_I2Cx_Get_Status:
;__Lib_I2C_12.c, 154 :: 		
; I2C_BASE start address is: 0 (R0)
0x01D4	0xB081    SUB	SP, SP, #4
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 0 (R0)
;__Lib_I2C_12.c, 157 :: 		
0x01D6	0xF2000114  ADDW	R1, R0, #20
0x01DA	0x680A    LDR	R2, [R1, #0]
;__Lib_I2C_12.c, 158 :: 		
0x01DC	0xF2000118  ADDW	R1, R0, #24
; I2C_BASE end address is: 0 (R0)
0x01E0	0x6809    LDR	R1, [R1, #0]
;__Lib_I2C_12.c, 160 :: 		
0x01E2	0x0409    LSLS	R1, R1, #16
0x01E4	0xEA420101  ORR	R1, R2, R1, LSL #0
0x01E8	0x4608    MOV	R0, R1
;__Lib_I2C_12.c, 161 :: 		
L_end_I2Cx_Get_Status:
0x01EA	0xB001    ADD	SP, SP, #4
0x01EC	0x4770    BX	LR
; end of _I2Cx_Get_Status
_I2C1_Write:
;__Lib_I2C_12.c, 556 :: 		
; END_mode start address is: 12 (R3)
; count start address is: 8 (R2)
; buf start address is: 4 (R1)
; slave_address start address is: 0 (R0)
0x0BFC	0xB081    SUB	SP, SP, #4
0x0BFE	0xF8CDE000  STR	LR, [SP, #0]
; END_mode end address is: 12 (R3)
; count end address is: 8 (R2)
; buf end address is: 4 (R1)
; slave_address end address is: 0 (R0)
; slave_address start address is: 0 (R0)
; buf start address is: 4 (R1)
; count start address is: 8 (R2)
; END_mode start address is: 12 (R3)
;__Lib_I2C_12.c, 557 :: 		
0x0C02	0xB408    PUSH	(R3)
; count end address is: 8 (R2)
0x0C04	0x4613    MOV	R3, R2
0x0C06	0x460A    MOV	R2, R1
; buf end address is: 4 (R1)
0x0C08	0xB2C1    UXTB	R1, R0
; slave_address end address is: 0 (R0)
0x0C0A	0x4804    LDR	R0, [PC, #16]
; END_mode end address is: 12 (R3)
0x0C0C	0xF7FFFE72  BL	_I2Cx_Write+0
0x0C10	0xB001    ADD	SP, SP, #4
;__Lib_I2C_12.c, 558 :: 		
L_end_I2C1_Write:
0x0C12	0xF8DDE000  LDR	LR, [SP, #0]
0x0C16	0xB001    ADD	SP, SP, #4
0x0C18	0x4770    BX	LR
0x0C1A	0xBF00    NOP
0x0C1C	0x54004000  	I2C1_CR1+0
; end of _I2C1_Write
_I2Cx_Write:
;__Lib_I2C_12.c, 245 :: 		
; count start address is: 12 (R3)
; buf start address is: 8 (R2)
; slave_address start address is: 4 (R1)
; I2C_BASE start address is: 0 (R0)
0x08F4	0xB082    SUB	SP, SP, #8
0x08F6	0xF8CDE000  STR	LR, [SP, #0]
; count end address is: 12 (R3)
; buf end address is: 8 (R2)
; slave_address end address is: 4 (R1)
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 0 (R0)
; slave_address start address is: 4 (R1)
; buf start address is: 8 (R2)
; count start address is: 12 (R3)
; END_mode start address is: 24 (R6)
0x08FA	0x9E02    LDR	R6, [SP, #8]
;__Lib_I2C_12.c, 247 :: 		
; timeout start address is: 20 (R5)
0x08FC	0xF04F0500  MOV	R5, #0
;__Lib_I2C_12.c, 250 :: 		
0x0900	0x4C56    LDR	R4, [PC, #344]
0x0902	0x42A0    CMP	R0, R4
0x0904	0xD106    BNE	L_I2Cx_Write16
; timeout end address is: 20 (R5)
;__Lib_I2C_12.c, 251 :: 		
0x0906	0x4C56    LDR	R4, [PC, #344]
; timeout start address is: 28 (R7)
0x0908	0x6827    LDR	R7, [R4, #0]
;__Lib_I2C_12.c, 252 :: 		
0x090A	0x4C56    LDR	R4, [PC, #344]
0x090C	0x6825    LDR	R5, [R4, #0]
0x090E	0x4C56    LDR	R4, [PC, #344]
0x0910	0x6025    STR	R5, [R4, #0]
;__Lib_I2C_12.c, 253 :: 		
; timeout end address is: 28 (R7)
0x0912	0xE00A    B	L_I2Cx_Write17
L_I2Cx_Write16:
;__Lib_I2C_12.c, 254 :: 		
; timeout start address is: 20 (R5)
0x0914	0x4C55    LDR	R4, [PC, #340]
0x0916	0x42A0    CMP	R0, R4
0x0918	0xD106    BNE	L__I2Cx_Write125
; timeout end address is: 20 (R5)
;__Lib_I2C_12.c, 255 :: 		
0x091A	0x4C55    LDR	R4, [PC, #340]
; timeout start address is: 28 (R7)
0x091C	0x6827    LDR	R7, [R4, #0]
;__Lib_I2C_12.c, 256 :: 		
0x091E	0x4C55    LDR	R4, [PC, #340]
0x0920	0x6825    LDR	R5, [R4, #0]
0x0922	0x4C51    LDR	R4, [PC, #324]
0x0924	0x6025    STR	R5, [R4, #0]
; timeout end address is: 28 (R7)
;__Lib_I2C_12.c, 257 :: 		
0x0926	0xE000    B	L_I2Cx_Write18
L__I2Cx_Write125:
;__Lib_I2C_12.c, 254 :: 		
0x0928	0x462F    MOV	R7, R5
;__Lib_I2C_12.c, 257 :: 		
L_I2Cx_Write18:
; timeout start address is: 28 (R7)
; timeout end address is: 28 (R7)
L_I2Cx_Write17:
;__Lib_I2C_12.c, 259 :: 		
; timeout start address is: 28 (R7)
0x092A	0x4C53    LDR	R4, [PC, #332]
0x092C	0x6027    STR	R7, [R4, #0]
;__Lib_I2C_12.c, 261 :: 		
0x092E	0xF2000510  ADDW	R5, R0, #16
0x0932	0x004C    LSLS	R4, R1, #1
0x0934	0xB2A4    UXTH	R4, R4
; slave_address end address is: 4 (R1)
0x0936	0x602C    STR	R4, [R5, #0]
; I2C_BASE end address is: 0 (R0)
; buf end address is: 8 (R2)
; count end address is: 12 (R3)
; END_mode end address is: 24 (R6)
; timeout end address is: 28 (R7)
0x0938	0x46B9    MOV	R9, R7
0x093A	0x4607    MOV	R7, R0
0x093C	0x4690    MOV	R8, R2
0x093E	0x4635    MOV	R5, R6
0x0940	0x461E    MOV	R6, R3
;__Lib_I2C_12.c, 262 :: 		
L_I2Cx_Write19:
; timeout start address is: 36 (R9)
; END_mode start address is: 20 (R5)
; count start address is: 24 (R6)
; buf start address is: 32 (R8)
; I2C_BASE start address is: 28 (R7)
0x0942	0x494E    LDR	R1, [PC, #312]
0x0944	0x4638    MOV	R0, R7
0x0946	0xF7FFFD95  BL	_ChekXForEvent+0
0x094A	0xB988    CBNZ	R0, L_I2Cx_Write20
;__Lib_I2C_12.c, 263 :: 		
0x094C	0x4C4A    LDR	R4, [PC, #296]
0x094E	0x6824    LDR	R4, [R4, #0]
0x0950	0xB16C    CBZ	R4, L__I2Cx_Write126
;__Lib_I2C_12.c, 264 :: 		
0x0952	0xF1B90F00  CMP	R9, #0
0x0956	0xD106    BNE	L_I2Cx_Write22
; count end address is: 24 (R6)
; I2C_BASE end address is: 28 (R7)
; buf end address is: 32 (R8)
; timeout end address is: 36 (R9)
; END_mode end address is: 20 (R5)
;__Lib_I2C_12.c, 265 :: 		
0x0958	0x2004    MOVS	R0, #4
0x095A	0x4C43    LDR	R4, [PC, #268]
0x095C	0x6824    LDR	R4, [R4, #0]
0x095E	0x47A0    BLX	R4
;__Lib_I2C_12.c, 266 :: 		
0x0960	0xF64F70FF  MOVW	R0, #65535
0x0964	0xE076    B	L_end_I2Cx_Write
;__Lib_I2C_12.c, 267 :: 		
L_I2Cx_Write22:
;__Lib_I2C_12.c, 268 :: 		
; END_mode start address is: 20 (R5)
; timeout start address is: 36 (R9)
; buf start address is: 32 (R8)
; I2C_BASE start address is: 28 (R7)
; count start address is: 24 (R6)
0x0966	0xF1A90001  SUB	R0, R9, #1
; timeout end address is: 36 (R9)
; timeout start address is: 0 (R0)
; timeout end address is: 0 (R0)
0x096A	0x4681    MOV	R9, R0
;__Lib_I2C_12.c, 269 :: 		
0x096C	0xE7FF    B	L_I2Cx_Write21
L__I2Cx_Write126:
;__Lib_I2C_12.c, 263 :: 		
;__Lib_I2C_12.c, 269 :: 		
L_I2Cx_Write21:
;__Lib_I2C_12.c, 270 :: 		
; timeout start address is: 36 (R9)
; timeout end address is: 36 (R9)
0x096E	0xE7E8    B	L_I2Cx_Write19
L_I2Cx_Write20:
;__Lib_I2C_12.c, 271 :: 		
; i start address is: 0 (R0)
0x0970	0x2000    MOVS	R0, #0
; count end address is: 24 (R6)
; I2C_BASE end address is: 28 (R7)
; buf end address is: 32 (R8)
; i end address is: 0 (R0)
; END_mode end address is: 20 (R5)
0x0972	0x9701    STR	R7, [SP, #4]
0x0974	0x4629    MOV	R1, R5
0x0976	0x4637    MOV	R7, R6
0x0978	0x9E01    LDR	R6, [SP, #4]
L_I2Cx_Write23:
; i start address is: 0 (R0)
; I2C_BASE start address is: 24 (R6)
; buf start address is: 32 (R8)
; count start address is: 28 (R7)
; END_mode start address is: 4 (R1)
0x097A	0x1E7C    SUBS	R4, R7, #1
0x097C	0x42A0    CMP	R0, R4
0x097E	0xD226    BCS	L_I2Cx_Write24
;__Lib_I2C_12.c, 272 :: 		
0x0980	0xF2060510  ADDW	R5, R6, #16
0x0984	0xEB080400  ADD	R4, R8, R0, LSL #0
0x0988	0x7824    LDRB	R4, [R4, #0]
0x098A	0x602C    STR	R4, [R5, #0]
;__Lib_I2C_12.c, 274 :: 		
0x098C	0x4C3A    LDR	R4, [PC, #232]
; timeout start address is: 36 (R9)
0x098E	0xF8D49000  LDR	R9, [R4, #0]
; END_mode end address is: 4 (R1)
; count end address is: 28 (R7)
; buf end address is: 32 (R8)
; timeout end address is: 36 (R9)
; i end address is: 0 (R0)
; I2C_BASE end address is: 24 (R6)
0x0992	0x4682    MOV	R10, R0
0x0994	0x460D    MOV	R5, R1
;__Lib_I2C_12.c, 275 :: 		
L_I2Cx_Write26:
; timeout start address is: 36 (R9)
; END_mode start address is: 20 (R5)
; count start address is: 28 (R7)
; buf start address is: 32 (R8)
; I2C_BASE start address is: 24 (R6)
; i start address is: 40 (R10)
0x0996	0x493A    LDR	R1, [PC, #232]
0x0998	0x4630    MOV	R0, R6
0x099A	0xF7FFFD6B  BL	_ChekXForEvent+0
0x099E	0xB988    CBNZ	R0, L_I2Cx_Write27
;__Lib_I2C_12.c, 276 :: 		
0x09A0	0x4C35    LDR	R4, [PC, #212]
0x09A2	0x6824    LDR	R4, [R4, #0]
0x09A4	0xB16C    CBZ	R4, L__I2Cx_Write127
;__Lib_I2C_12.c, 277 :: 		
0x09A6	0xF1B90F00  CMP	R9, #0
0x09AA	0xD106    BNE	L_I2Cx_Write29
; count end address is: 28 (R7)
; buf end address is: 32 (R8)
; i end address is: 40 (R10)
; timeout end address is: 36 (R9)
; END_mode end address is: 20 (R5)
; I2C_BASE end address is: 24 (R6)
;__Lib_I2C_12.c, 278 :: 		
0x09AC	0x2004    MOVS	R0, #4
0x09AE	0x4C2E    LDR	R4, [PC, #184]
0x09B0	0x6824    LDR	R4, [R4, #0]
0x09B2	0x47A0    BLX	R4
;__Lib_I2C_12.c, 279 :: 		
0x09B4	0xF64F70FF  MOVW	R0, #65535
0x09B8	0xE04C    B	L_end_I2Cx_Write
;__Lib_I2C_12.c, 280 :: 		
L_I2Cx_Write29:
;__Lib_I2C_12.c, 281 :: 		
; I2C_BASE start address is: 24 (R6)
; END_mode start address is: 20 (R5)
; timeout start address is: 36 (R9)
; i start address is: 40 (R10)
; buf start address is: 32 (R8)
; count start address is: 28 (R7)
0x09BA	0xF1A90001  SUB	R0, R9, #1
; timeout end address is: 36 (R9)
; timeout start address is: 0 (R0)
; timeout end address is: 0 (R0)
0x09BE	0x4681    MOV	R9, R0
;__Lib_I2C_12.c, 282 :: 		
0x09C0	0xE7FF    B	L_I2Cx_Write28
L__I2Cx_Write127:
;__Lib_I2C_12.c, 276 :: 		
;__Lib_I2C_12.c, 282 :: 		
L_I2Cx_Write28:
;__Lib_I2C_12.c, 283 :: 		
; timeout start address is: 36 (R9)
; timeout end address is: 36 (R9)
0x09C2	0xE7E8    B	L_I2Cx_Write26
L_I2Cx_Write27:
;__Lib_I2C_12.c, 271 :: 		
0x09C4	0xF10A0401  ADD	R4, R10, #1
; i end address is: 40 (R10)
; i start address is: 0 (R0)
0x09C8	0x4620    MOV	R0, R4
;__Lib_I2C_12.c, 284 :: 		
0x09CA	0x4629    MOV	R1, R5
; count end address is: 28 (R7)
; END_mode end address is: 20 (R5)
0x09CC	0xE7D5    B	L_I2Cx_Write23
L_I2Cx_Write24:
;__Lib_I2C_12.c, 286 :: 		
; END_mode start address is: 4 (R1)
0x09CE	0xF2060510  ADDW	R5, R6, #16
0x09D2	0xEB080400  ADD	R4, R8, R0, LSL #0
; buf end address is: 32 (R8)
; i end address is: 0 (R0)
0x09D6	0x7824    LDRB	R4, [R4, #0]
0x09D8	0x602C    STR	R4, [R5, #0]
;__Lib_I2C_12.c, 288 :: 		
0x09DA	0x4C27    LDR	R4, [PC, #156]
; timeout start address is: 28 (R7)
0x09DC	0x6827    LDR	R7, [R4, #0]
; END_mode end address is: 4 (R1)
; I2C_BASE end address is: 24 (R6)
; timeout end address is: 28 (R7)
0x09DE	0x460D    MOV	R5, R1
;__Lib_I2C_12.c, 289 :: 		
L_I2Cx_Write30:
; timeout start address is: 28 (R7)
; END_mode start address is: 20 (R5)
; I2C_BASE start address is: 24 (R6)
0x09E0	0x4928    LDR	R1, [PC, #160]
0x09E2	0x4630    MOV	R0, R6
0x09E4	0xF7FFFD46  BL	_ChekXForEvent+0
0x09E8	0xB970    CBNZ	R0, L_I2Cx_Write31
;__Lib_I2C_12.c, 290 :: 		
0x09EA	0x4C23    LDR	R4, [PC, #140]
0x09EC	0x6824    LDR	R4, [R4, #0]
0x09EE	0xB154    CBZ	R4, L__I2Cx_Write128
;__Lib_I2C_12.c, 291 :: 		
0x09F0	0xB937    CBNZ	R7, L_I2Cx_Write33
; END_mode end address is: 20 (R5)
; I2C_BASE end address is: 24 (R6)
; timeout end address is: 28 (R7)
;__Lib_I2C_12.c, 292 :: 		
0x09F2	0x2004    MOVS	R0, #4
0x09F4	0x4C1C    LDR	R4, [PC, #112]
0x09F6	0x6824    LDR	R4, [R4, #0]
0x09F8	0x47A0    BLX	R4
;__Lib_I2C_12.c, 293 :: 		
0x09FA	0xF64F70FF  MOVW	R0, #65535
0x09FE	0xE029    B	L_end_I2Cx_Write
;__Lib_I2C_12.c, 294 :: 		
L_I2Cx_Write33:
;__Lib_I2C_12.c, 295 :: 		
; timeout start address is: 28 (R7)
; I2C_BASE start address is: 24 (R6)
; END_mode start address is: 20 (R5)
0x0A00	0x1E78    SUBS	R0, R7, #1
; timeout end address is: 28 (R7)
; timeout start address is: 0 (R0)
; timeout end address is: 0 (R0)
0x0A02	0x4607    MOV	R7, R0
;__Lib_I2C_12.c, 296 :: 		
0x0A04	0xE7FF    B	L_I2Cx_Write32
L__I2Cx_Write128:
;__Lib_I2C_12.c, 290 :: 		
;__Lib_I2C_12.c, 296 :: 		
L_I2Cx_Write32:
;__Lib_I2C_12.c, 297 :: 		
; timeout start address is: 28 (R7)
; timeout end address is: 28 (R7)
0x0A06	0xE7EB    B	L_I2Cx_Write30
L_I2Cx_Write31:
;__Lib_I2C_12.c, 298 :: 		
0x0A08	0x2D01    CMP	R5, #1
0x0A0A	0xD105    BNE	L_I2Cx_Write34
; END_mode end address is: 20 (R5)
;__Lib_I2C_12.c, 299 :: 		
0x0A0C	0x2501    MOVS	R5, #1
0x0A0E	0x6834    LDR	R4, [R6, #0]
0x0A10	0xF3652449  BFI	R4, R5, #9, #1
0x0A14	0x6034    STR	R4, [R6, #0]
; I2C_BASE end address is: 24 (R6)
0x0A16	0xE01C    B	L_I2Cx_Write35
L_I2Cx_Write34:
;__Lib_I2C_12.c, 301 :: 		
; I2C_BASE start address is: 24 (R6)
0x0A18	0x2501    MOVS	R5, #1
0x0A1A	0x6834    LDR	R4, [R6, #0]
0x0A1C	0xF3652408  BFI	R4, R5, #8, #1
0x0A20	0x6034    STR	R4, [R6, #0]
;__Lib_I2C_12.c, 303 :: 		
0x0A22	0x4C15    LDR	R4, [PC, #84]
; timeout start address is: 28 (R7)
0x0A24	0x6827    LDR	R7, [R4, #0]
; I2C_BASE end address is: 24 (R6)
; timeout end address is: 28 (R7)
0x0A26	0x4635    MOV	R5, R6
;__Lib_I2C_12.c, 304 :: 		
L_I2Cx_Write36:
; timeout start address is: 28 (R7)
; I2C_BASE start address is: 20 (R5)
0x0A28	0x4917    LDR	R1, [PC, #92]
0x0A2A	0x4628    MOV	R0, R5
0x0A2C	0xF7FFFD22  BL	_ChekXForEvent+0
0x0A30	0xB978    CBNZ	R0, L_I2Cx_Write37
;__Lib_I2C_12.c, 305 :: 		
0x0A32	0x4C11    LDR	R4, [PC, #68]
0x0A34	0x6824    LDR	R4, [R4, #0]
0x0A36	0xB15C    CBZ	R4, L__I2Cx_Write129
;__Lib_I2C_12.c, 306 :: 		
0x0A38	0xB937    CBNZ	R7, L_I2Cx_Write39
; I2C_BASE end address is: 20 (R5)
; timeout end address is: 28 (R7)
;__Lib_I2C_12.c, 307 :: 		
0x0A3A	0x2004    MOVS	R0, #4
0x0A3C	0x4C0A    LDR	R4, [PC, #40]
0x0A3E	0x6824    LDR	R4, [R4, #0]
0x0A40	0x47A0    BLX	R4
;__Lib_I2C_12.c, 308 :: 		
0x0A42	0xF64F70FF  MOVW	R0, #65535
0x0A46	0xE005    B	L_end_I2Cx_Write
;__Lib_I2C_12.c, 309 :: 		
L_I2Cx_Write39:
;__Lib_I2C_12.c, 310 :: 		
; timeout start address is: 28 (R7)
; I2C_BASE start address is: 20 (R5)
0x0A48	0x1E7C    SUBS	R4, R7, #1
; timeout end address is: 28 (R7)
; timeout start address is: 0 (R0)
0x0A4A	0x4620    MOV	R0, R4
; timeout end address is: 0 (R0)
0x0A4C	0x4607    MOV	R7, R0
;__Lib_I2C_12.c, 311 :: 		
0x0A4E	0xE7FF    B	L_I2Cx_Write38
L__I2Cx_Write129:
;__Lib_I2C_12.c, 305 :: 		
;__Lib_I2C_12.c, 311 :: 		
L_I2Cx_Write38:
;__Lib_I2C_12.c, 312 :: 		
; timeout start address is: 28 (R7)
; I2C_BASE end address is: 20 (R5)
; timeout end address is: 28 (R7)
0x0A50	0xE7EA    B	L_I2Cx_Write36
L_I2Cx_Write37:
;__Lib_I2C_12.c, 313 :: 		
L_I2Cx_Write35:
;__Lib_I2C_12.c, 314 :: 		
0x0A52	0x2000    MOVS	R0, #0
;__Lib_I2C_12.c, 315 :: 		
L_end_I2Cx_Write:
0x0A54	0xF8DDE000  LDR	LR, [SP, #0]
0x0A58	0xB002    ADD	SP, SP, #8
0x0A5A	0x4770    BX	LR
0x0A5C	0x54004000  	I2C1_CR1+0
0x0A60	0x002C2000  	__Lib_I2C_12__I2C1_TIMEOUT+0
0x0A64	0x03C02000  	_I2C1_Timeout_Ptr+0
0x0A68	0x03BC2000  	_I2Cx_Timeout_Ptr+0
0x0A6C	0x58004000  	I2C2_CR1+0
0x0A70	0x00302000  	__Lib_I2C_12__I2C2_TIMEOUT+0
0x0A74	0x03C42000  	_I2C2_Timeout_Ptr+0
0x0A78	0x00342000  	__Lib_I2C_12__I2Cx_TIMEOUT+0
0x0A7C	0x00820007  	#458882
0x0A80	0x00800007  	#458880
0x0A84	0x00840007  	#458884
0x0A88	0x00010003  	#196609
; end of _I2Cx_Write
_I2C1_Read:
;__Lib_I2C_12.c, 552 :: 		
; END_mode start address is: 12 (R3)
; count start address is: 8 (R2)
; buf start address is: 4 (R1)
; slave_address start address is: 0 (R0)
0x0EB4	0xB081    SUB	SP, SP, #4
0x0EB6	0xF8CDE000  STR	LR, [SP, #0]
; END_mode end address is: 12 (R3)
; count end address is: 8 (R2)
; buf end address is: 4 (R1)
; slave_address end address is: 0 (R0)
; slave_address start address is: 0 (R0)
; buf start address is: 4 (R1)
; count start address is: 8 (R2)
; END_mode start address is: 12 (R3)
;__Lib_I2C_12.c, 553 :: 		
0x0EBA	0xB408    PUSH	(R3)
; count end address is: 8 (R2)
0x0EBC	0x4613    MOV	R3, R2
0x0EBE	0x460A    MOV	R2, R1
; buf end address is: 4 (R1)
0x0EC0	0xB2C1    UXTB	R1, R0
; slave_address end address is: 0 (R0)
0x0EC2	0x4804    LDR	R0, [PC, #16]
; END_mode end address is: 12 (R3)
0x0EC4	0xF7FFFAE8  BL	_I2Cx_Read+0
0x0EC8	0xB001    ADD	SP, SP, #4
;__Lib_I2C_12.c, 554 :: 		
L_end_I2C1_Read:
0x0ECA	0xF8DDE000  LDR	LR, [SP, #0]
0x0ECE	0xB001    ADD	SP, SP, #4
0x0ED0	0x4770    BX	LR
0x0ED2	0xBF00    NOP
0x0ED4	0x54004000  	I2C1_CR1+0
; end of _I2C1_Read
_I2Cx_Read:
;__Lib_I2C_12.c, 319 :: 		
; count start address is: 12 (R3)
; buf start address is: 8 (R2)
; slave_address start address is: 4 (R1)
; I2C_BASE start address is: 0 (R0)
0x0498	0xB082    SUB	SP, SP, #8
0x049A	0xF8CDE000  STR	LR, [SP, #0]
0x049E	0xB2CF    UXTB	R7, R1
0x04A0	0x4601    MOV	R1, R0
0x04A2	0x4698    MOV	R8, R3
; count end address is: 12 (R3)
; buf end address is: 8 (R2)
; slave_address end address is: 4 (R1)
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 4 (R1)
; slave_address start address is: 28 (R7)
; buf start address is: 8 (R2)
; count start address is: 32 (R8)
; END_mode start address is: 12 (R3)
0x04A4	0x9B02    LDR	R3, [SP, #8]
;__Lib_I2C_12.c, 321 :: 		
; i start address is: 24 (R6)
0x04A6	0xF04F0600  MOV	R6, #0
;__Lib_I2C_12.c, 322 :: 		
; timeout start address is: 20 (R5)
0x04AA	0xF04F0500  MOV	R5, #0
;__Lib_I2C_12.c, 325 :: 		
0x04AE	0x4CC4    LDR	R4, [PC, #784]
0x04B0	0x42A1    CMP	R1, R4
0x04B2	0xD107    BNE	L_I2Cx_Read40
; timeout end address is: 20 (R5)
;__Lib_I2C_12.c, 326 :: 		
0x04B4	0x4CC3    LDR	R4, [PC, #780]
; timeout start address is: 36 (R9)
0x04B6	0xF8D49000  LDR	R9, [R4, #0]
;__Lib_I2C_12.c, 327 :: 		
0x04BA	0x4CC3    LDR	R4, [PC, #780]
0x04BC	0x6825    LDR	R5, [R4, #0]
0x04BE	0x4CC3    LDR	R4, [PC, #780]
0x04C0	0x6025    STR	R5, [R4, #0]
;__Lib_I2C_12.c, 328 :: 		
; timeout end address is: 36 (R9)
0x04C2	0xE00B    B	L_I2Cx_Read41
L_I2Cx_Read40:
;__Lib_I2C_12.c, 329 :: 		
; timeout start address is: 20 (R5)
0x04C4	0x4CC2    LDR	R4, [PC, #776]
0x04C6	0x42A1    CMP	R1, R4
0x04C8	0xD107    BNE	L__I2Cx_Read130
; timeout end address is: 20 (R5)
;__Lib_I2C_12.c, 330 :: 		
0x04CA	0x4CC2    LDR	R4, [PC, #776]
; timeout start address is: 0 (R0)
0x04CC	0x6820    LDR	R0, [R4, #0]
;__Lib_I2C_12.c, 331 :: 		
0x04CE	0x4CC2    LDR	R4, [PC, #776]
0x04D0	0x6825    LDR	R5, [R4, #0]
0x04D2	0x4CBE    LDR	R4, [PC, #760]
0x04D4	0x6025    STR	R5, [R4, #0]
; timeout end address is: 0 (R0)
0x04D6	0x4681    MOV	R9, R0
;__Lib_I2C_12.c, 332 :: 		
0x04D8	0xE000    B	L_I2Cx_Read42
L__I2Cx_Read130:
;__Lib_I2C_12.c, 329 :: 		
0x04DA	0x46A9    MOV	R9, R5
;__Lib_I2C_12.c, 332 :: 		
L_I2Cx_Read42:
; timeout start address is: 36 (R9)
; timeout end address is: 36 (R9)
L_I2Cx_Read41:
;__Lib_I2C_12.c, 334 :: 		
; timeout start address is: 36 (R9)
0x04DC	0x4CBF    LDR	R4, [PC, #764]
0x04DE	0xF8C49000  STR	R9, [R4, #0]
;__Lib_I2C_12.c, 336 :: 		
0x04E2	0xE1F4    B	L_I2Cx_Read43
; count end address is: 32 (R8)
;__Lib_I2C_12.c, 337 :: 		
L_I2Cx_Read45:
;__Lib_I2C_12.c, 338 :: 		
0x04E4	0xF2010510  ADDW	R5, R1, #16
0x04E8	0x007C    LSLS	R4, R7, #1
0x04EA	0xB2A4    UXTH	R4, R4
; slave_address end address is: 28 (R7)
0x04EC	0xF0440401  ORR	R4, R4, #1
0x04F0	0xB2A4    UXTH	R4, R4
0x04F2	0x602C    STR	R4, [R5, #0]
; timeout end address is: 36 (R9)
; buf end address is: 8 (R2)
; i end address is: 24 (R6)
; END_mode end address is: 12 (R3)
; I2C_BASE end address is: 4 (R1)
0x04F4	0x9601    STR	R6, [SP, #4]
0x04F6	0x4616    MOV	R6, R2
0x04F8	0x464F    MOV	R7, R9
0x04FA	0x9A01    LDR	R2, [SP, #4]
;__Lib_I2C_12.c, 339 :: 		
L_I2Cx_Read46:
; timeout start address is: 28 (R7)
; i start address is: 8 (R2)
; END_mode start address is: 12 (R3)
; buf start address is: 24 (R6)
; I2C_BASE start address is: 4 (R1)
0x04FC	0xF2010414  ADDW	R4, R1, #20
0x0500	0x6825    LDR	R5, [R4, #0]
0x0502	0xF3C50440  UBFX	R4, R5, #1, #1
0x0506	0xB964    CBNZ	R4, L_I2Cx_Read47
;__Lib_I2C_12.c, 340 :: 		
0x0508	0x4CB4    LDR	R4, [PC, #720]
0x050A	0x6824    LDR	R4, [R4, #0]
0x050C	0xB144    CBZ	R4, L__I2Cx_Read131
;__Lib_I2C_12.c, 341 :: 		
0x050E	0xB927    CBNZ	R7, L_I2Cx_Read49
; i end address is: 8 (R2)
; END_mode end address is: 12 (R3)
; buf end address is: 24 (R6)
; I2C_BASE end address is: 4 (R1)
; timeout end address is: 28 (R7)
;__Lib_I2C_12.c, 342 :: 		
0x0510	0x2003    MOVS	R0, #3
0x0512	0x4CAE    LDR	R4, [PC, #696]
0x0514	0x6824    LDR	R4, [R4, #0]
0x0516	0x47A0    BLX	R4
;__Lib_I2C_12.c, 343 :: 		
0x0518	0xE1E2    B	L_end_I2Cx_Read
;__Lib_I2C_12.c, 344 :: 		
L_I2Cx_Read49:
;__Lib_I2C_12.c, 345 :: 		
; timeout start address is: 28 (R7)
; I2C_BASE start address is: 4 (R1)
; buf start address is: 24 (R6)
; END_mode start address is: 12 (R3)
; i start address is: 8 (R2)
0x051A	0x1E78    SUBS	R0, R7, #1
; timeout end address is: 28 (R7)
; timeout start address is: 0 (R0)
; timeout end address is: 0 (R0)
0x051C	0x4607    MOV	R7, R0
;__Lib_I2C_12.c, 346 :: 		
0x051E	0xE7FF    B	L_I2Cx_Read48
L__I2Cx_Read131:
;__Lib_I2C_12.c, 340 :: 		
;__Lib_I2C_12.c, 346 :: 		
L_I2Cx_Read48:
;__Lib_I2C_12.c, 347 :: 		
; timeout start address is: 28 (R7)
; timeout end address is: 28 (R7)
0x0520	0xE7EC    B	L_I2Cx_Read46
L_I2Cx_Read47:
;__Lib_I2C_12.c, 348 :: 		
0x0522	0x2500    MOVS	R5, #0
0x0524	0x680C    LDR	R4, [R1, #0]
0x0526	0xF365248A  BFI	R4, R5, #10, #1
0x052A	0x600C    STR	R4, [R1, #0]
;__Lib_I2C_12.c, 349 :: 		
0x052C	0xF2010414  ADDW	R4, R1, #20
0x0530	0x6820    LDR	R0, [R4, #0]
; temp start address is: 0 (R0)
;__Lib_I2C_12.c, 350 :: 		
0x0532	0xBF00    NOP
;__Lib_I2C_12.c, 351 :: 		
0x0534	0xF2010418  ADDW	R4, R1, #24
0x0538	0x6824    LDR	R4, [R4, #0]
0x053A	0x0424    LSLS	R4, R4, #16
0x053C	0xEA400404  ORR	R4, R0, R4, LSL #0
0x0540	0x4620    MOV	R0, R4
; temp end address is: 0 (R0)
;__Lib_I2C_12.c, 352 :: 		
0x0542	0x2B01    CMP	R3, #1
0x0544	0xD105    BNE	L_I2Cx_Read50
;__Lib_I2C_12.c, 353 :: 		
0x0546	0x2501    MOVS	R5, #1
0x0548	0x680C    LDR	R4, [R1, #0]
0x054A	0xF3652449  BFI	R4, R5, #9, #1
0x054E	0x600C    STR	R4, [R1, #0]
0x0550	0xE004    B	L_I2Cx_Read51
L_I2Cx_Read50:
;__Lib_I2C_12.c, 355 :: 		
0x0552	0x2501    MOVS	R5, #1
0x0554	0x680C    LDR	R4, [R1, #0]
0x0556	0xF3652408  BFI	R4, R5, #8, #1
0x055A	0x600C    STR	R4, [R1, #0]
;__Lib_I2C_12.c, 356 :: 		
L_I2Cx_Read51:
;__Lib_I2C_12.c, 358 :: 		
0x055C	0x4C9F    LDR	R4, [PC, #636]
; timeout start address is: 20 (R5)
0x055E	0x6825    LDR	R5, [R4, #0]
; i end address is: 8 (R2)
; END_mode end address is: 12 (R3)
; buf end address is: 24 (R6)
; I2C_BASE end address is: 4 (R1)
; timeout end address is: 20 (R5)
0x0560	0x4691    MOV	R9, R2
0x0562	0x4698    MOV	R8, R3
0x0564	0x4637    MOV	R7, R6
0x0566	0x460E    MOV	R6, R1
;__Lib_I2C_12.c, 359 :: 		
L_I2Cx_Read52:
; timeout start address is: 20 (R5)
; I2C_BASE start address is: 24 (R6)
; buf start address is: 28 (R7)
; END_mode start address is: 32 (R8)
; i start address is: 36 (R9)
0x0568	0x499D    LDR	R1, [PC, #628]
0x056A	0x4630    MOV	R0, R6
0x056C	0xF7FFFF82  BL	_ChekXForEvent+0
0x0570	0xB968    CBNZ	R0, L_I2Cx_Read53
;__Lib_I2C_12.c, 360 :: 		
0x0572	0x4C9A    LDR	R4, [PC, #616]
0x0574	0x6824    LDR	R4, [R4, #0]
0x0576	0xB14C    CBZ	R4, L__I2Cx_Read132
;__Lib_I2C_12.c, 361 :: 		
0x0578	0xB925    CBNZ	R5, L_I2Cx_Read55
; I2C_BASE end address is: 24 (R6)
; buf end address is: 28 (R7)
; END_mode end address is: 32 (R8)
; i end address is: 36 (R9)
; timeout end address is: 20 (R5)
;__Lib_I2C_12.c, 362 :: 		
0x057A	0x2003    MOVS	R0, #3
0x057C	0x4C93    LDR	R4, [PC, #588]
0x057E	0x6824    LDR	R4, [R4, #0]
0x0580	0x47A0    BLX	R4
;__Lib_I2C_12.c, 363 :: 		
0x0582	0xE1AD    B	L_end_I2Cx_Read
;__Lib_I2C_12.c, 364 :: 		
L_I2Cx_Read55:
;__Lib_I2C_12.c, 365 :: 		
; timeout start address is: 20 (R5)
; i start address is: 36 (R9)
; END_mode start address is: 32 (R8)
; buf start address is: 28 (R7)
; I2C_BASE start address is: 24 (R6)
0x0584	0x1E6C    SUBS	R4, R5, #1
; timeout end address is: 20 (R5)
; timeout start address is: 0 (R0)
0x0586	0x4620    MOV	R0, R4
; timeout end address is: 0 (R0)
0x0588	0x4605    MOV	R5, R0
;__Lib_I2C_12.c, 366 :: 		
0x058A	0xE7FF    B	L_I2Cx_Read54
L__I2Cx_Read132:
;__Lib_I2C_12.c, 360 :: 		
;__Lib_I2C_12.c, 366 :: 		
L_I2Cx_Read54:
;__Lib_I2C_12.c, 367 :: 		
; timeout start address is: 20 (R5)
; timeout end address is: 20 (R5)
0x058C	0xE7EC    B	L_I2Cx_Read52
L_I2Cx_Read53:
;__Lib_I2C_12.c, 368 :: 		
0x058E	0xEB070509  ADD	R5, R7, R9, LSL #0
; buf end address is: 28 (R7)
; i end address is: 36 (R9)
0x0592	0xF2060410  ADDW	R4, R6, #16
0x0596	0x6824    LDR	R4, [R4, #0]
0x0598	0x702C    STRB	R4, [R5, #0]
;__Lib_I2C_12.c, 369 :: 		
0x059A	0xF1B80F01  CMP	R8, #1
0x059E	0xD113    BNE	L_I2Cx_Read56
; END_mode end address is: 32 (R8)
;__Lib_I2C_12.c, 370 :: 		
0x05A0	0x4C8E    LDR	R4, [PC, #568]
; timeout start address is: 4 (R1)
0x05A2	0x6821    LDR	R1, [R4, #0]
; I2C_BASE end address is: 24 (R6)
; timeout end address is: 4 (R1)
0x05A4	0x4630    MOV	R0, R6
;__Lib_I2C_12.c, 371 :: 		
L_I2Cx_Read57:
; timeout start address is: 4 (R1)
; I2C_BASE start address is: 0 (R0)
0x05A6	0x6805    LDR	R5, [R0, #0]
0x05A8	0xF3C52440  UBFX	R4, R5, #9, #1
0x05AC	0xB95C    CBNZ	R4, L_I2Cx_Read58
;__Lib_I2C_12.c, 372 :: 		
0x05AE	0x4C8B    LDR	R4, [PC, #556]
0x05B0	0x6824    LDR	R4, [R4, #0]
0x05B2	0xB13C    CBZ	R4, L__I2Cx_Read133
;__Lib_I2C_12.c, 373 :: 		
0x05B4	0xB921    CBNZ	R1, L_I2Cx_Read60
; I2C_BASE end address is: 0 (R0)
; timeout end address is: 4 (R1)
;__Lib_I2C_12.c, 374 :: 		
0x05B6	0x2003    MOVS	R0, #3
0x05B8	0x4C84    LDR	R4, [PC, #528]
0x05BA	0x6824    LDR	R4, [R4, #0]
0x05BC	0x47A0    BLX	R4
;__Lib_I2C_12.c, 375 :: 		
0x05BE	0xE18F    B	L_end_I2Cx_Read
;__Lib_I2C_12.c, 376 :: 		
L_I2Cx_Read60:
;__Lib_I2C_12.c, 377 :: 		
; timeout start address is: 4 (R1)
; I2C_BASE start address is: 0 (R0)
0x05C0	0x1E49    SUBS	R1, R1, #1
; timeout end address is: 4 (R1)
;__Lib_I2C_12.c, 378 :: 		
0x05C2	0xE7FF    B	L_I2Cx_Read59
L__I2Cx_Read133:
;__Lib_I2C_12.c, 372 :: 		
;__Lib_I2C_12.c, 378 :: 		
L_I2Cx_Read59:
;__Lib_I2C_12.c, 379 :: 		
; timeout start address is: 4 (R1)
; I2C_BASE end address is: 0 (R0)
; timeout end address is: 4 (R1)
0x05C4	0xE7EF    B	L_I2Cx_Read57
L_I2Cx_Read58:
;__Lib_I2C_12.c, 380 :: 		
0x05C6	0xE012    B	L_I2Cx_Read61
L_I2Cx_Read56:
;__Lib_I2C_12.c, 382 :: 		
; I2C_BASE start address is: 24 (R6)
0x05C8	0x4C84    LDR	R4, [PC, #528]
; timeout start address is: 4 (R1)
0x05CA	0x6821    LDR	R1, [R4, #0]
; I2C_BASE end address is: 24 (R6)
; timeout end address is: 4 (R1)
0x05CC	0x4630    MOV	R0, R6
;__Lib_I2C_12.c, 383 :: 		
L_I2Cx_Read62:
; timeout start address is: 4 (R1)
; I2C_BASE start address is: 0 (R0)
0x05CE	0x6805    LDR	R5, [R0, #0]
0x05D0	0xF3C52400  UBFX	R4, R5, #8, #1
0x05D4	0xB95C    CBNZ	R4, L_I2Cx_Read63
;__Lib_I2C_12.c, 384 :: 		
0x05D6	0x4C81    LDR	R4, [PC, #516]
0x05D8	0x6824    LDR	R4, [R4, #0]
0x05DA	0xB13C    CBZ	R4, L__I2Cx_Read134
;__Lib_I2C_12.c, 385 :: 		
0x05DC	0xB921    CBNZ	R1, L_I2Cx_Read65
; I2C_BASE end address is: 0 (R0)
; timeout end address is: 4 (R1)
;__Lib_I2C_12.c, 386 :: 		
0x05DE	0x2003    MOVS	R0, #3
0x05E0	0x4C7A    LDR	R4, [PC, #488]
0x05E2	0x6824    LDR	R4, [R4, #0]
0x05E4	0x47A0    BLX	R4
;__Lib_I2C_12.c, 387 :: 		
0x05E6	0xE17B    B	L_end_I2Cx_Read
;__Lib_I2C_12.c, 388 :: 		
L_I2Cx_Read65:
;__Lib_I2C_12.c, 389 :: 		
; timeout start address is: 4 (R1)
; I2C_BASE start address is: 0 (R0)
0x05E8	0x1E49    SUBS	R1, R1, #1
; timeout end address is: 4 (R1)
;__Lib_I2C_12.c, 390 :: 		
0x05EA	0xE7FF    B	L_I2Cx_Read64
L__I2Cx_Read134:
;__Lib_I2C_12.c, 384 :: 		
;__Lib_I2C_12.c, 390 :: 		
L_I2Cx_Read64:
;__Lib_I2C_12.c, 391 :: 		
; timeout start address is: 4 (R1)
; I2C_BASE end address is: 0 (R0)
; timeout end address is: 4 (R1)
0x05EC	0xE7EF    B	L_I2Cx_Read62
L_I2Cx_Read63:
;__Lib_I2C_12.c, 392 :: 		
L_I2Cx_Read61:
;__Lib_I2C_12.c, 393 :: 		
0x05EE	0xE177    B	L_I2Cx_Read44
;__Lib_I2C_12.c, 395 :: 		
L_I2Cx_Read66:
;__Lib_I2C_12.c, 396 :: 		
; I2C_BASE start address is: 4 (R1)
; END_mode start address is: 12 (R3)
; i start address is: 24 (R6)
; buf start address is: 8 (R2)
; timeout start address is: 36 (R9)
; slave_address start address is: 28 (R7)
0x05F0	0x2501    MOVS	R5, #1
0x05F2	0x680C    LDR	R4, [R1, #0]
0x05F4	0xF365248A  BFI	R4, R5, #10, #1
0x05F8	0x600C    STR	R4, [R1, #0]
;__Lib_I2C_12.c, 397 :: 		
0x05FA	0x2501    MOVS	R5, #1
0x05FC	0x680C    LDR	R4, [R1, #0]
0x05FE	0xF36524CB  BFI	R4, R5, #11, #1
0x0602	0x600C    STR	R4, [R1, #0]
;__Lib_I2C_12.c, 398 :: 		
0x0604	0xF2010510  ADDW	R5, R1, #16
0x0608	0x007C    LSLS	R4, R7, #1
0x060A	0xB2A4    UXTH	R4, R4
; slave_address end address is: 28 (R7)
0x060C	0xF0440401  ORR	R4, R4, #1
0x0610	0xB2A4    UXTH	R4, R4
0x0612	0x602C    STR	R4, [R5, #0]
; timeout end address is: 36 (R9)
; buf end address is: 8 (R2)
; i end address is: 24 (R6)
; END_mode end address is: 12 (R3)
; I2C_BASE end address is: 4 (R1)
0x0614	0x464F    MOV	R7, R9
;__Lib_I2C_12.c, 399 :: 		
L_I2Cx_Read67:
; timeout start address is: 28 (R7)
; i start address is: 24 (R6)
; END_mode start address is: 12 (R3)
; buf start address is: 8 (R2)
; I2C_BASE start address is: 4 (R1)
0x0616	0xF2010414  ADDW	R4, R1, #20
0x061A	0x6825    LDR	R5, [R4, #0]
0x061C	0xF3C50440  UBFX	R4, R5, #1, #1
0x0620	0xB964    CBNZ	R4, L_I2Cx_Read68
;__Lib_I2C_12.c, 400 :: 		
0x0622	0x4C6E    LDR	R4, [PC, #440]
0x0624	0x6824    LDR	R4, [R4, #0]
0x0626	0xB144    CBZ	R4, L__I2Cx_Read135
;__Lib_I2C_12.c, 401 :: 		
0x0628	0xB927    CBNZ	R7, L_I2Cx_Read70
; buf end address is: 8 (R2)
; i end address is: 24 (R6)
; END_mode end address is: 12 (R3)
; I2C_BASE end address is: 4 (R1)
; timeout end address is: 28 (R7)
;__Lib_I2C_12.c, 402 :: 		
0x062A	0x2003    MOVS	R0, #3
0x062C	0x4C67    LDR	R4, [PC, #412]
0x062E	0x6824    LDR	R4, [R4, #0]
0x0630	0x47A0    BLX	R4
;__Lib_I2C_12.c, 403 :: 		
0x0632	0xE155    B	L_end_I2Cx_Read
;__Lib_I2C_12.c, 404 :: 		
L_I2Cx_Read70:
;__Lib_I2C_12.c, 405 :: 		
; timeout start address is: 28 (R7)
; I2C_BASE start address is: 4 (R1)
; END_mode start address is: 12 (R3)
; i start address is: 24 (R6)
; buf start address is: 8 (R2)
0x0634	0x1E78    SUBS	R0, R7, #1
; timeout end address is: 28 (R7)
; timeout start address is: 0 (R0)
; timeout end address is: 0 (R0)
0x0636	0x4607    MOV	R7, R0
;__Lib_I2C_12.c, 406 :: 		
0x0638	0xE7FF    B	L_I2Cx_Read69
L__I2Cx_Read135:
;__Lib_I2C_12.c, 400 :: 		
;__Lib_I2C_12.c, 406 :: 		
L_I2Cx_Read69:
;__Lib_I2C_12.c, 407 :: 		
; timeout start address is: 28 (R7)
; timeout end address is: 28 (R7)
0x063A	0xE7EC    B	L_I2Cx_Read67
L_I2Cx_Read68:
;__Lib_I2C_12.c, 408 :: 		
0x063C	0xF2010414  ADDW	R4, R1, #20
0x0640	0x6820    LDR	R0, [R4, #0]
; temp start address is: 0 (R0)
;__Lib_I2C_12.c, 409 :: 		
0x0642	0xBF00    NOP
;__Lib_I2C_12.c, 410 :: 		
0x0644	0xF2010418  ADDW	R4, R1, #24
0x0648	0x6824    LDR	R4, [R4, #0]
0x064A	0x0424    LSLS	R4, R4, #16
0x064C	0x4320    ORRS	R0, R4
; temp end address is: 0 (R0)
;__Lib_I2C_12.c, 411 :: 		
0x064E	0x2500    MOVS	R5, #0
0x0650	0x680C    LDR	R4, [R1, #0]
0x0652	0xF365248A  BFI	R4, R5, #10, #1
0x0656	0x600C    STR	R4, [R1, #0]
;__Lib_I2C_12.c, 413 :: 		
0x0658	0x4C60    LDR	R4, [PC, #384]
; timeout start address is: 28 (R7)
0x065A	0x6827    LDR	R7, [R4, #0]
; buf end address is: 8 (R2)
; i end address is: 24 (R6)
; END_mode end address is: 12 (R3)
; I2C_BASE end address is: 4 (R1)
; timeout end address is: 28 (R7)
;__Lib_I2C_12.c, 414 :: 		
L_I2Cx_Read71:
; timeout start address is: 28 (R7)
; I2C_BASE start address is: 4 (R1)
; buf start address is: 8 (R2)
; END_mode start address is: 12 (R3)
; i start address is: 24 (R6)
0x065C	0xF2010414  ADDW	R4, R1, #20
0x0660	0x6825    LDR	R5, [R4, #0]
0x0662	0xF3C50480  UBFX	R4, R5, #2, #1
0x0666	0xB964    CBNZ	R4, L_I2Cx_Read72
;__Lib_I2C_12.c, 415 :: 		
0x0668	0x4C5C    LDR	R4, [PC, #368]
0x066A	0x6824    LDR	R4, [R4, #0]
0x066C	0xB144    CBZ	R4, L__I2Cx_Read136
;__Lib_I2C_12.c, 416 :: 		
0x066E	0xB927    CBNZ	R7, L_I2Cx_Read74
; buf end address is: 8 (R2)
; i end address is: 24 (R6)
; END_mode end address is: 12 (R3)
; I2C_BASE end address is: 4 (R1)
; timeout end address is: 28 (R7)
;__Lib_I2C_12.c, 417 :: 		
0x0670	0x2003    MOVS	R0, #3
0x0672	0x4C56    LDR	R4, [PC, #344]
0x0674	0x6824    LDR	R4, [R4, #0]
0x0676	0x47A0    BLX	R4
;__Lib_I2C_12.c, 418 :: 		
0x0678	0xE132    B	L_end_I2Cx_Read
;__Lib_I2C_12.c, 419 :: 		
L_I2Cx_Read74:
;__Lib_I2C_12.c, 420 :: 		
; timeout start address is: 28 (R7)
; I2C_BASE start address is: 4 (R1)
; END_mode start address is: 12 (R3)
; i start address is: 24 (R6)
; buf start address is: 8 (R2)
0x067A	0x1E78    SUBS	R0, R7, #1
; timeout end address is: 28 (R7)
; timeout start address is: 0 (R0)
; timeout end address is: 0 (R0)
0x067C	0x4607    MOV	R7, R0
;__Lib_I2C_12.c, 421 :: 		
0x067E	0xE7FF    B	L_I2Cx_Read73
L__I2Cx_Read136:
;__Lib_I2C_12.c, 415 :: 		
;__Lib_I2C_12.c, 421 :: 		
L_I2Cx_Read73:
;__Lib_I2C_12.c, 422 :: 		
; timeout start address is: 28 (R7)
; timeout end address is: 28 (R7)
0x0680	0xE7EC    B	L_I2Cx_Read71
L_I2Cx_Read72:
;__Lib_I2C_12.c, 423 :: 		
0x0682	0x2B01    CMP	R3, #1
0x0684	0xD105    BNE	L_I2Cx_Read75
;__Lib_I2C_12.c, 424 :: 		
0x0686	0x2501    MOVS	R5, #1
0x0688	0x680C    LDR	R4, [R1, #0]
0x068A	0xF3652449  BFI	R4, R5, #9, #1
0x068E	0x600C    STR	R4, [R1, #0]
0x0690	0xE004    B	L_I2Cx_Read76
L_I2Cx_Read75:
;__Lib_I2C_12.c, 426 :: 		
0x0692	0x2501    MOVS	R5, #1
0x0694	0x680C    LDR	R4, [R1, #0]
0x0696	0xF3652408  BFI	R4, R5, #8, #1
0x069A	0x600C    STR	R4, [R1, #0]
;__Lib_I2C_12.c, 427 :: 		
L_I2Cx_Read76:
;__Lib_I2C_12.c, 428 :: 		
0x069C	0x1995    ADDS	R5, R2, R6
0x069E	0xF2010410  ADDW	R4, R1, #16
0x06A2	0x6824    LDR	R4, [R4, #0]
0x06A4	0x702C    STRB	R4, [R5, #0]
0x06A6	0x1C74    ADDS	R4, R6, #1
; i end address is: 24 (R6)
;__Lib_I2C_12.c, 429 :: 		
0x06A8	0x1915    ADDS	R5, R2, R4
; buf end address is: 8 (R2)
0x06AA	0xF2010410  ADDW	R4, R1, #16
0x06AE	0x6824    LDR	R4, [R4, #0]
0x06B0	0x702C    STRB	R4, [R5, #0]
;__Lib_I2C_12.c, 430 :: 		
0x06B2	0x2B01    CMP	R3, #1
0x06B4	0xD114    BNE	L_I2Cx_Read77
; END_mode end address is: 12 (R3)
;__Lib_I2C_12.c, 431 :: 		
0x06B6	0x4C49    LDR	R4, [PC, #292]
; timeout start address is: 8 (R2)
0x06B8	0x6822    LDR	R2, [R4, #0]
; timeout end address is: 8 (R2)
; I2C_BASE end address is: 4 (R1)
;__Lib_I2C_12.c, 432 :: 		
L_I2Cx_Read78:
; timeout start address is: 8 (R2)
; I2C_BASE start address is: 4 (R1)
0x06BA	0x680D    LDR	R5, [R1, #0]
0x06BC	0xF3C52440  UBFX	R4, R5, #9, #1
0x06C0	0xB964    CBNZ	R4, L_I2Cx_Read79
;__Lib_I2C_12.c, 433 :: 		
0x06C2	0x4C46    LDR	R4, [PC, #280]
0x06C4	0x6824    LDR	R4, [R4, #0]
0x06C6	0xB144    CBZ	R4, L__I2Cx_Read137
;__Lib_I2C_12.c, 434 :: 		
0x06C8	0xB922    CBNZ	R2, L_I2Cx_Read81
; timeout end address is: 8 (R2)
; I2C_BASE end address is: 4 (R1)
;__Lib_I2C_12.c, 435 :: 		
0x06CA	0x2003    MOVS	R0, #3
0x06CC	0x4C3F    LDR	R4, [PC, #252]
0x06CE	0x6824    LDR	R4, [R4, #0]
0x06D0	0x47A0    BLX	R4
;__Lib_I2C_12.c, 436 :: 		
0x06D2	0xE105    B	L_end_I2Cx_Read
;__Lib_I2C_12.c, 437 :: 		
L_I2Cx_Read81:
;__Lib_I2C_12.c, 438 :: 		
; I2C_BASE start address is: 4 (R1)
; timeout start address is: 8 (R2)
0x06D4	0x1E50    SUBS	R0, R2, #1
; timeout end address is: 8 (R2)
; timeout start address is: 0 (R0)
; timeout end address is: 0 (R0)
0x06D6	0x4602    MOV	R2, R0
;__Lib_I2C_12.c, 439 :: 		
0x06D8	0xE7FF    B	L_I2Cx_Read80
L__I2Cx_Read137:
;__Lib_I2C_12.c, 433 :: 		
;__Lib_I2C_12.c, 439 :: 		
L_I2Cx_Read80:
;__Lib_I2C_12.c, 440 :: 		
; timeout start address is: 8 (R2)
; timeout end address is: 8 (R2)
0x06DA	0xE7EE    B	L_I2Cx_Read78
L_I2Cx_Read79:
;__Lib_I2C_12.c, 441 :: 		
0x06DC	0x4608    MOV	R0, R1
0x06DE	0xE013    B	L_I2Cx_Read82
L_I2Cx_Read77:
;__Lib_I2C_12.c, 443 :: 		
0x06E0	0x4C3E    LDR	R4, [PC, #248]
; timeout start address is: 8 (R2)
0x06E2	0x6822    LDR	R2, [R4, #0]
; timeout end address is: 8 (R2)
; I2C_BASE end address is: 4 (R1)
;__Lib_I2C_12.c, 444 :: 		
L_I2Cx_Read83:
; timeout start address is: 8 (R2)
; I2C_BASE start address is: 4 (R1)
0x06E4	0x680D    LDR	R5, [R1, #0]
0x06E6	0xF3C52400  UBFX	R4, R5, #8, #1
0x06EA	0xB964    CBNZ	R4, L_I2Cx_Read84
;__Lib_I2C_12.c, 445 :: 		
0x06EC	0x4C3B    LDR	R4, [PC, #236]
0x06EE	0x6824    LDR	R4, [R4, #0]
0x06F0	0xB144    CBZ	R4, L__I2Cx_Read138
;__Lib_I2C_12.c, 446 :: 		
0x06F2	0xB922    CBNZ	R2, L_I2Cx_Read86
; timeout end address is: 8 (R2)
; I2C_BASE end address is: 4 (R1)
;__Lib_I2C_12.c, 447 :: 		
0x06F4	0x2003    MOVS	R0, #3
0x06F6	0x4C35    LDR	R4, [PC, #212]
0x06F8	0x6824    LDR	R4, [R4, #0]
0x06FA	0x47A0    BLX	R4
;__Lib_I2C_12.c, 448 :: 		
0x06FC	0xE0F0    B	L_end_I2Cx_Read
;__Lib_I2C_12.c, 449 :: 		
L_I2Cx_Read86:
;__Lib_I2C_12.c, 450 :: 		
; I2C_BASE start address is: 4 (R1)
; timeout start address is: 8 (R2)
0x06FE	0x1E50    SUBS	R0, R2, #1
; timeout end address is: 8 (R2)
; timeout start address is: 0 (R0)
; timeout end address is: 0 (R0)
0x0700	0x4602    MOV	R2, R0
;__Lib_I2C_12.c, 451 :: 		
0x0702	0xE7FF    B	L_I2Cx_Read85
L__I2Cx_Read138:
;__Lib_I2C_12.c, 445 :: 		
;__Lib_I2C_12.c, 451 :: 		
L_I2Cx_Read85:
;__Lib_I2C_12.c, 452 :: 		
; timeout start address is: 8 (R2)
; timeout end address is: 8 (R2)
0x0704	0xE7EE    B	L_I2Cx_Read83
L_I2Cx_Read84:
;__Lib_I2C_12.c, 453 :: 		
0x0706	0x4608    MOV	R0, R1
L_I2Cx_Read82:
; I2C_BASE end address is: 4 (R1)
;__Lib_I2C_12.c, 455 :: 		
; I2C_BASE start address is: 0 (R0)
0x0708	0x2500    MOVS	R5, #0
0x070A	0x6804    LDR	R4, [R0, #0]
0x070C	0xF36524CB  BFI	R4, R5, #11, #1
0x0710	0x6004    STR	R4, [R0, #0]
; I2C_BASE end address is: 0 (R0)
;__Lib_I2C_12.c, 457 :: 		
0x0712	0xE0E5    B	L_I2Cx_Read44
;__Lib_I2C_12.c, 459 :: 		
L_I2Cx_Read87:
;__Lib_I2C_12.c, 460 :: 		
; I2C_BASE start address is: 4 (R1)
; END_mode start address is: 12 (R3)
; buf start address is: 8 (R2)
; timeout start address is: 36 (R9)
; count start address is: 32 (R8)
; slave_address start address is: 28 (R7)
0x0714	0x2501    MOVS	R5, #1
0x0716	0x680C    LDR	R4, [R1, #0]
0x0718	0xF365248A  BFI	R4, R5, #10, #1
0x071C	0x600C    STR	R4, [R1, #0]
;__Lib_I2C_12.c, 461 :: 		
0x071E	0xF2010510  ADDW	R5, R1, #16
0x0722	0x007C    LSLS	R4, R7, #1
0x0724	0xB2A4    UXTH	R4, R4
; slave_address end address is: 28 (R7)
0x0726	0xF0440401  ORR	R4, R4, #1
0x072A	0xB2A4    UXTH	R4, R4
0x072C	0x602C    STR	R4, [R5, #0]
; count end address is: 32 (R8)
; timeout end address is: 36 (R9)
; buf end address is: 8 (R2)
; END_mode end address is: 12 (R3)
; I2C_BASE end address is: 4 (R1)
0x072E	0x4646    MOV	R6, R8
0x0730	0x46C8    MOV	R8, R9
0x0732	0x4689    MOV	R9, R1
0x0734	0x4617    MOV	R7, R2
0x0736	0x461D    MOV	R5, R3
;__Lib_I2C_12.c, 462 :: 		
L_I2Cx_Read88:
; timeout start address is: 32 (R8)
; END_mode start address is: 20 (R5)
; count start address is: 24 (R6)
; buf start address is: 28 (R7)
; I2C_BASE start address is: 36 (R9)
0x0738	0x492A    LDR	R1, [PC, #168]
0x073A	0x4648    MOV	R0, R9
0x073C	0xF7FFFE9A  BL	_ChekXForEvent+0
0x0740	0xB978    CBNZ	R0, L_I2Cx_Read89
;__Lib_I2C_12.c, 463 :: 		
0x0742	0x4C26    LDR	R4, [PC, #152]
0x0744	0x6824    LDR	R4, [R4, #0]
0x0746	0xB15C    CBZ	R4, L__I2Cx_Read139
;__Lib_I2C_12.c, 464 :: 		
0x0748	0xF1B80F00  CMP	R8, #0
0x074C	0xD104    BNE	L_I2Cx_Read91
; END_mode end address is: 20 (R5)
; count end address is: 24 (R6)
; I2C_BASE end address is: 36 (R9)
; timeout end address is: 32 (R8)
; buf end address is: 28 (R7)
;__Lib_I2C_12.c, 465 :: 		
0x074E	0x2003    MOVS	R0, #3
0x0750	0x4C1E    LDR	R4, [PC, #120]
0x0752	0x6824    LDR	R4, [R4, #0]
0x0754	0x47A0    BLX	R4
;__Lib_I2C_12.c, 466 :: 		
0x0756	0xE0C3    B	L_end_I2Cx_Read
;__Lib_I2C_12.c, 467 :: 		
L_I2Cx_Read91:
;__Lib_I2C_12.c, 468 :: 		
; buf start address is: 28 (R7)
; timeout start address is: 32 (R8)
; I2C_BASE start address is: 36 (R9)
; count start address is: 24 (R6)
; END_mode start address is: 20 (R5)
0x0758	0xF1A80001  SUB	R0, R8, #1
; timeout end address is: 32 (R8)
; timeout start address is: 0 (R0)
; timeout end address is: 0 (R0)
0x075C	0x4680    MOV	R8, R0
;__Lib_I2C_12.c, 469 :: 		
0x075E	0xE7FF    B	L_I2Cx_Read90
L__I2Cx_Read139:
;__Lib_I2C_12.c, 463 :: 		
;__Lib_I2C_12.c, 469 :: 		
L_I2Cx_Read90:
;__Lib_I2C_12.c, 470 :: 		
; timeout start address is: 32 (R8)
; timeout end address is: 32 (R8)
0x0760	0xE7EA    B	L_I2Cx_Read88
L_I2Cx_Read89:
;__Lib_I2C_12.c, 471 :: 		
; i start address is: 4 (R1)
0x0762	0x2100    MOVS	R1, #0
; END_mode end address is: 20 (R5)
; count end address is: 24 (R6)
; I2C_BASE end address is: 36 (R9)
; i end address is: 4 (R1)
; buf end address is: 28 (R7)
0x0764	0x46A8    MOV	R8, R5
0x0766	0x464A    MOV	R2, R9
0x0768	0x46B1    MOV	R9, R6
0x076A	0x463B    MOV	R3, R7
;__Lib_I2C_12.c, 472 :: 		
L_I2Cx_Read92:
; i start address is: 4 (R1)
; I2C_BASE start address is: 8 (R2)
; buf start address is: 12 (R3)
; count start address is: 36 (R9)
; END_mode start address is: 32 (R8)
0x076C	0xF1A90403  SUB	R4, R9, #3
0x0770	0x42A1    CMP	R1, R4
0x0772	0xD222    BCS	L_I2Cx_Read93
;__Lib_I2C_12.c, 473 :: 		
0x0774	0x4C19    LDR	R4, [PC, #100]
; timeout start address is: 20 (R5)
0x0776	0x6825    LDR	R5, [R4, #0]
; buf end address is: 12 (R3)
; count end address is: 36 (R9)
; i end address is: 4 (R1)
; I2C_BASE end address is: 8 (R2)
; END_mode end address is: 32 (R8)
; timeout end address is: 20 (R5)
0x0778	0x468A    MOV	R10, R1
0x077A	0x4617    MOV	R7, R2
0x077C	0x461E    MOV	R6, R3
;__Lib_I2C_12.c, 474 :: 		
L_I2Cx_Read94:
; timeout start address is: 20 (R5)
; END_mode start address is: 32 (R8)
; count start address is: 36 (R9)
; buf start address is: 24 (R6)
; I2C_BASE start address is: 28 (R7)
; i start address is: 40 (R10)
0x077E	0x4918    LDR	R1, [PC, #96]
0x0780	0x4638    MOV	R0, R7
0x0782	0xF7FFFE77  BL	_ChekXForEvent+0
0x0786	0xB960    CBNZ	R0, L_I2Cx_Read95
;__Lib_I2C_12.c, 475 :: 		
0x0788	0x4C14    LDR	R4, [PC, #80]
0x078A	0x6824    LDR	R4, [R4, #0]
0x078C	0xB144    CBZ	R4, L__I2Cx_Read140
;__Lib_I2C_12.c, 476 :: 		
0x078E	0xB925    CBNZ	R5, L_I2Cx_Read97
; count end address is: 36 (R9)
; I2C_BASE end address is: 28 (R7)
; i end address is: 40 (R10)
; buf end address is: 24 (R6)
; END_mode end address is: 32 (R8)
; timeout end address is: 20 (R5)
;__Lib_I2C_12.c, 477 :: 		
0x0790	0x2003    MOVS	R0, #3
0x0792	0x4C0E    LDR	R4, [PC, #56]
0x0794	0x6824    LDR	R4, [R4, #0]
0x0796	0x47A0    BLX	R4
;__Lib_I2C_12.c, 478 :: 		
0x0798	0xE0A2    B	L_end_I2Cx_Read
;__Lib_I2C_12.c, 479 :: 		
L_I2Cx_Read97:
;__Lib_I2C_12.c, 480 :: 		
; timeout start address is: 20 (R5)
; END_mode start address is: 32 (R8)
; buf start address is: 24 (R6)
; i start address is: 40 (R10)
; I2C_BASE start address is: 28 (R7)
; count start address is: 36 (R9)
0x079A	0x1E68    SUBS	R0, R5, #1
; timeout end address is: 20 (R5)
; timeout start address is: 0 (R0)
; timeout end address is: 0 (R0)
0x079C	0x4605    MOV	R5, R0
;__Lib_I2C_12.c, 481 :: 		
0x079E	0xE7FF    B	L_I2Cx_Read96
L__I2Cx_Read140:
;__Lib_I2C_12.c, 475 :: 		
;__Lib_I2C_12.c, 481 :: 		
L_I2Cx_Read96:
;__Lib_I2C_12.c, 482 :: 		
; timeout start address is: 20 (R5)
; timeout end address is: 20 (R5)
0x07A0	0xE7ED    B	L_I2Cx_Read94
L_I2Cx_Read95:
;__Lib_I2C_12.c, 483 :: 		
0x07A2	0xEB06050A  ADD	R5, R6, R10, LSL #0
0x07A6	0xF2070410  ADDW	R4, R7, #16
0x07AA	0x6824    LDR	R4, [R4, #0]
0x07AC	0x702C    STRB	R4, [R5, #0]
0x07AE	0xF10A0401  ADD	R4, R10, #1
; i end address is: 40 (R10)
; i start address is: 4 (R1)
0x07B2	0x4621    MOV	R1, R4
;__Lib_I2C_12.c, 484 :: 		
; count end address is: 36 (R9)
; I2C_BASE end address is: 28 (R7)
; buf end address is: 24 (R6)
0x07B4	0x4633    MOV	R3, R6
0x07B6	0x463A    MOV	R2, R7
0x07B8	0xE7D8    B	L_I2Cx_Read92
L_I2Cx_Read93:
;__Lib_I2C_12.c, 485 :: 		
; I2C_BASE start address is: 8 (R2)
; buf start address is: 12 (R3)
0x07BA	0x4C08    LDR	R4, [PC, #32]
0x07BC	0xF000B814  B	#40
0x07C0	0x54004000  	I2C1_CR1+0
0x07C4	0x002C2000  	__Lib_I2C_12__I2C1_TIMEOUT+0
0x07C8	0x03C02000  	_I2C1_Timeout_Ptr+0
0x07CC	0x03BC2000  	_I2Cx_Timeout_Ptr+0
0x07D0	0x58004000  	I2C2_CR1+0
0x07D4	0x00302000  	__Lib_I2C_12__I2C2_TIMEOUT+0
0x07D8	0x03C42000  	_I2C2_Timeout_Ptr+0
0x07DC	0x00342000  	__Lib_I2C_12__I2Cx_TIMEOUT+0
0x07E0	0x00400003  	#196672
0x07E4	0x00020003  	#196610
; timeout start address is: 28 (R7)
0x07E8	0x6827    LDR	R7, [R4, #0]
; buf end address is: 12 (R3)
; i end address is: 4 (R1)
; I2C_BASE end address is: 8 (R2)
; timeout end address is: 28 (R7)
; END_mode end address is: 32 (R8)
0x07EA	0x9301    STR	R3, [SP, #4]
0x07EC	0x460B    MOV	R3, R1
0x07EE	0x4616    MOV	R6, R2
0x07F0	0x4642    MOV	R2, R8
0x07F2	0x9901    LDR	R1, [SP, #4]
;__Lib_I2C_12.c, 486 :: 		
L_I2Cx_Read98:
; timeout start address is: 28 (R7)
; END_mode start address is: 8 (R2)
; buf start address is: 4 (R1)
; I2C_BASE start address is: 24 (R6)
; i start address is: 12 (R3)
0x07F4	0xF2060414  ADDW	R4, R6, #20
0x07F8	0x6825    LDR	R5, [R4, #0]
0x07FA	0xF3C50480  UBFX	R4, R5, #2, #1
0x07FE	0xB964    CBNZ	R4, L_I2Cx_Read99
;__Lib_I2C_12.c, 487 :: 		
0x0800	0x4C39    LDR	R4, [PC, #228]
0x0802	0x6824    LDR	R4, [R4, #0]
0x0804	0xB144    CBZ	R4, L__I2Cx_Read141
;__Lib_I2C_12.c, 488 :: 		
0x0806	0xB927    CBNZ	R7, L_I2Cx_Read101
; END_mode end address is: 8 (R2)
; i end address is: 12 (R3)
; buf end address is: 4 (R1)
; timeout end address is: 28 (R7)
; I2C_BASE end address is: 24 (R6)
;__Lib_I2C_12.c, 489 :: 		
0x0808	0x2003    MOVS	R0, #3
0x080A	0x4C38    LDR	R4, [PC, #224]
0x080C	0x6824    LDR	R4, [R4, #0]
0x080E	0x47A0    BLX	R4
;__Lib_I2C_12.c, 490 :: 		
0x0810	0xE066    B	L_end_I2Cx_Read
;__Lib_I2C_12.c, 491 :: 		
L_I2Cx_Read101:
;__Lib_I2C_12.c, 492 :: 		
; I2C_BASE start address is: 24 (R6)
; timeout start address is: 28 (R7)
; buf start address is: 4 (R1)
; i start address is: 12 (R3)
; END_mode start address is: 8 (R2)
0x0812	0x1E78    SUBS	R0, R7, #1
; timeout end address is: 28 (R7)
; timeout start address is: 0 (R0)
; timeout end address is: 0 (R0)
0x0814	0x4607    MOV	R7, R0
;__Lib_I2C_12.c, 493 :: 		
0x0816	0xE7FF    B	L_I2Cx_Read100
L__I2Cx_Read141:
;__Lib_I2C_12.c, 487 :: 		
;__Lib_I2C_12.c, 493 :: 		
L_I2Cx_Read100:
;__Lib_I2C_12.c, 494 :: 		
; timeout start address is: 28 (R7)
; timeout end address is: 28 (R7)
0x0818	0xE7EC    B	L_I2Cx_Read98
L_I2Cx_Read99:
;__Lib_I2C_12.c, 495 :: 		
0x081A	0x2500    MOVS	R5, #0
0x081C	0x6834    LDR	R4, [R6, #0]
0x081E	0xF365248A  BFI	R4, R5, #10, #1
0x0822	0x6034    STR	R4, [R6, #0]
;__Lib_I2C_12.c, 496 :: 		
0x0824	0x18CD    ADDS	R5, R1, R3
0x0826	0xF2060410  ADDW	R4, R6, #16
0x082A	0x6824    LDR	R4, [R4, #0]
0x082C	0x702C    STRB	R4, [R5, #0]
0x082E	0x1C58    ADDS	R0, R3, #1
; i end address is: 12 (R3)
; i start address is: 0 (R0)
;__Lib_I2C_12.c, 498 :: 		
0x0830	0x4C2D    LDR	R4, [PC, #180]
; timeout start address is: 12 (R3)
0x0832	0x6823    LDR	R3, [R4, #0]
; END_mode end address is: 8 (R2)
; timeout end address is: 12 (R3)
; i end address is: 0 (R0)
; buf end address is: 4 (R1)
; I2C_BASE end address is: 24 (R6)
0x0834	0x4617    MOV	R7, R2
0x0836	0x4602    MOV	R2, R0
;__Lib_I2C_12.c, 499 :: 		
L_I2Cx_Read102:
; timeout start address is: 12 (R3)
; i start address is: 8 (R2)
; I2C_BASE start address is: 24 (R6)
; buf start address is: 4 (R1)
; END_mode start address is: 28 (R7)
0x0838	0xF2060414  ADDW	R4, R6, #20
0x083C	0x6825    LDR	R5, [R4, #0]
0x083E	0xF3C50480  UBFX	R4, R5, #2, #1
0x0842	0xB964    CBNZ	R4, L_I2Cx_Read103
;__Lib_I2C_12.c, 500 :: 		
0x0844	0x4C28    LDR	R4, [PC, #160]
0x0846	0x6824    LDR	R4, [R4, #0]
0x0848	0xB144    CBZ	R4, L__I2Cx_Read142
;__Lib_I2C_12.c, 501 :: 		
0x084A	0xB923    CBNZ	R3, L_I2Cx_Read105
; END_mode end address is: 28 (R7)
; timeout end address is: 12 (R3)
; buf end address is: 4 (R1)
; i end address is: 8 (R2)
; I2C_BASE end address is: 24 (R6)
;__Lib_I2C_12.c, 502 :: 		
0x084C	0x2003    MOVS	R0, #3
0x084E	0x4C27    LDR	R4, [PC, #156]
0x0850	0x6824    LDR	R4, [R4, #0]
0x0852	0x47A0    BLX	R4
;__Lib_I2C_12.c, 503 :: 		
0x0854	0xE044    B	L_end_I2Cx_Read
;__Lib_I2C_12.c, 504 :: 		
L_I2Cx_Read105:
;__Lib_I2C_12.c, 505 :: 		
; I2C_BASE start address is: 24 (R6)
; i start address is: 8 (R2)
; buf start address is: 4 (R1)
; timeout start address is: 12 (R3)
; END_mode start address is: 28 (R7)
0x0856	0x1E58    SUBS	R0, R3, #1
; timeout end address is: 12 (R3)
; timeout start address is: 0 (R0)
; timeout end address is: 0 (R0)
0x0858	0x4603    MOV	R3, R0
;__Lib_I2C_12.c, 506 :: 		
0x085A	0xE7FF    B	L_I2Cx_Read104
L__I2Cx_Read142:
;__Lib_I2C_12.c, 500 :: 		
;__Lib_I2C_12.c, 506 :: 		
L_I2Cx_Read104:
;__Lib_I2C_12.c, 507 :: 		
; timeout start address is: 12 (R3)
; timeout end address is: 12 (R3)
0x085C	0xE7EC    B	L_I2Cx_Read102
L_I2Cx_Read103:
;__Lib_I2C_12.c, 508 :: 		
0x085E	0x2F01    CMP	R7, #1
0x0860	0xD107    BNE	L_I2Cx_Read106
; END_mode end address is: 28 (R7)
;__Lib_I2C_12.c, 509 :: 		
0x0862	0x2501    MOVS	R5, #1
0x0864	0x6834    LDR	R4, [R6, #0]
0x0866	0xF3652449  BFI	R4, R5, #9, #1
0x086A	0x6034    STR	R4, [R6, #0]
0x086C	0x4610    MOV	R0, R2
0x086E	0x4632    MOV	R2, R6
0x0870	0xE021    B	L_I2Cx_Read107
L_I2Cx_Read106:
;__Lib_I2C_12.c, 511 :: 		
0x0872	0x2501    MOVS	R5, #1
0x0874	0x6834    LDR	R4, [R6, #0]
0x0876	0xF3652408  BFI	R4, R5, #8, #1
0x087A	0x6034    STR	R4, [R6, #0]
;__Lib_I2C_12.c, 513 :: 		
0x087C	0x4C1A    LDR	R4, [PC, #104]
; timeout start address is: 32 (R8)
0x087E	0xF8D48000  LDR	R8, [R4, #0]
; timeout end address is: 32 (R8)
; buf end address is: 4 (R1)
; i end address is: 8 (R2)
; I2C_BASE end address is: 24 (R6)
0x0882	0x4617    MOV	R7, R2
0x0884	0x460D    MOV	R5, R1
;__Lib_I2C_12.c, 514 :: 		
L_I2Cx_Read108:
; timeout start address is: 32 (R8)
; buf start address is: 20 (R5)
; I2C_BASE start address is: 24 (R6)
; i start address is: 28 (R7)
0x0886	0x491A    LDR	R1, [PC, #104]
0x0888	0x4630    MOV	R0, R6
0x088A	0xF7FFFDF3  BL	_ChekXForEvent+0
0x088E	0xB978    CBNZ	R0, L_I2Cx_Read109
;__Lib_I2C_12.c, 515 :: 		
0x0890	0x4C15    LDR	R4, [PC, #84]
0x0892	0x6824    LDR	R4, [R4, #0]
0x0894	0xB15C    CBZ	R4, L__I2Cx_Read143
;__Lib_I2C_12.c, 516 :: 		
0x0896	0xF1B80F00  CMP	R8, #0
0x089A	0xD104    BNE	L_I2Cx_Read111
; buf end address is: 20 (R5)
; i end address is: 28 (R7)
; timeout end address is: 32 (R8)
; I2C_BASE end address is: 24 (R6)
;__Lib_I2C_12.c, 517 :: 		
0x089C	0x2003    MOVS	R0, #3
0x089E	0x4C13    LDR	R4, [PC, #76]
0x08A0	0x6824    LDR	R4, [R4, #0]
0x08A2	0x47A0    BLX	R4
;__Lib_I2C_12.c, 518 :: 		
0x08A4	0xE01C    B	L_end_I2Cx_Read
;__Lib_I2C_12.c, 519 :: 		
L_I2Cx_Read111:
;__Lib_I2C_12.c, 520 :: 		
; I2C_BASE start address is: 24 (R6)
; timeout start address is: 32 (R8)
; i start address is: 28 (R7)
; buf start address is: 20 (R5)
0x08A6	0xF1A80001  SUB	R0, R8, #1
; timeout end address is: 32 (R8)
; timeout start address is: 0 (R0)
; timeout end address is: 0 (R0)
0x08AA	0x4680    MOV	R8, R0
;__Lib_I2C_12.c, 521 :: 		
0x08AC	0xE7FF    B	L_I2Cx_Read110
L__I2Cx_Read143:
;__Lib_I2C_12.c, 515 :: 		
;__Lib_I2C_12.c, 521 :: 		
L_I2Cx_Read110:
;__Lib_I2C_12.c, 522 :: 		
; timeout start address is: 32 (R8)
; timeout end address is: 32 (R8)
0x08AE	0xE7EA    B	L_I2Cx_Read108
L_I2Cx_Read109:
;__Lib_I2C_12.c, 523 :: 		
0x08B0	0x4629    MOV	R1, R5
; i end address is: 28 (R7)
; I2C_BASE end address is: 24 (R6)
0x08B2	0x4632    MOV	R2, R6
0x08B4	0x4638    MOV	R0, R7
L_I2Cx_Read107:
; buf end address is: 20 (R5)
;__Lib_I2C_12.c, 524 :: 		
; i start address is: 0 (R0)
; I2C_BASE start address is: 8 (R2)
; buf start address is: 4 (R1)
0x08B6	0x180D    ADDS	R5, R1, R0
0x08B8	0xF2020410  ADDW	R4, R2, #16
0x08BC	0x6824    LDR	R4, [R4, #0]
0x08BE	0x702C    STRB	R4, [R5, #0]
0x08C0	0x1C44    ADDS	R4, R0, #1
; i end address is: 0 (R0)
;__Lib_I2C_12.c, 525 :: 		
0x08C2	0x190D    ADDS	R5, R1, R4
; buf end address is: 4 (R1)
0x08C4	0xF2020410  ADDW	R4, R2, #16
; I2C_BASE end address is: 8 (R2)
0x08C8	0x6824    LDR	R4, [R4, #0]
0x08CA	0x702C    STRB	R4, [R5, #0]
;__Lib_I2C_12.c, 526 :: 		
0x08CC	0xE008    B	L_I2Cx_Read44
;__Lib_I2C_12.c, 528 :: 		
L_I2Cx_Read43:
; I2C_BASE start address is: 4 (R1)
; END_mode start address is: 12 (R3)
; i start address is: 24 (R6)
; buf start address is: 8 (R2)
; timeout start address is: 36 (R9)
; count start address is: 32 (R8)
; slave_address start address is: 28 (R7)
0x08CE	0xF1B80F01  CMP	R8, #1
0x08D2	0xF43FAE07  BEQ	L_I2Cx_Read45
0x08D6	0xF1B80F02  CMP	R8, #2
0x08DA	0xF43FAE89  BEQ	L_I2Cx_Read66
; i end address is: 24 (R6)
0x08DE	0xE719    B	L_I2Cx_Read87
; slave_address end address is: 28 (R7)
; count end address is: 32 (R8)
; timeout end address is: 36 (R9)
; buf end address is: 8 (R2)
; END_mode end address is: 12 (R3)
; I2C_BASE end address is: 4 (R1)
L_I2Cx_Read44:
;__Lib_I2C_12.c, 529 :: 		
L_end_I2Cx_Read:
0x08E0	0xF8DDE000  LDR	LR, [SP, #0]
0x08E4	0xB002    ADD	SP, SP, #8
0x08E6	0x4770    BX	LR
0x08E8	0x00342000  	__Lib_I2C_12__I2Cx_TIMEOUT+0
0x08EC	0x03BC2000  	_I2Cx_Timeout_Ptr+0
0x08F0	0x00010003  	#196609
; end of _I2Cx_Read
_InitTimer2:
;timers.h, 3 :: 		void InitTimer2(){
0x1CA0	0xB081    SUB	SP, SP, #4
0x1CA2	0xF8CDE000  STR	LR, [SP, #0]
;timers.h, 4 :: 		RCC_APB1ENR.TIM2EN = 1;
0x1CA6	0x2101    MOVS	R1, #1
0x1CA8	0xB249    SXTB	R1, R1
0x1CAA	0x480D    LDR	R0, [PC, #52]
0x1CAC	0x6001    STR	R1, [R0, #0]
;timers.h, 5 :: 		TIM2_CR1.CEN = 0;
0x1CAE	0x2100    MOVS	R1, #0
0x1CB0	0xB249    SXTB	R1, R1
0x1CB2	0x480C    LDR	R0, [PC, #48]
0x1CB4	0x6001    STR	R1, [R0, #0]
;timers.h, 6 :: 		TIM2_PSC = 59;
0x1CB6	0x213B    MOVS	R1, #59
0x1CB8	0x480B    LDR	R0, [PC, #44]
0x1CBA	0x6001    STR	R1, [R0, #0]
;timers.h, 7 :: 		TIM2_ARR = 59999;
0x1CBC	0xF64E215F  MOVW	R1, #59999
0x1CC0	0x480A    LDR	R0, [PC, #40]
0x1CC2	0x6001    STR	R1, [R0, #0]
;timers.h, 8 :: 		NVIC_IntEnable(IVT_INT_TIM2);
0x1CC4	0xF240002C  MOVW	R0, #44
0x1CC8	0xF000F822  BL	_NVIC_IntEnable+0
;timers.h, 9 :: 		TIM2_DIER.UIE = 1;
0x1CCC	0x2101    MOVS	R1, #1
0x1CCE	0xB249    SXTB	R1, R1
0x1CD0	0x4807    LDR	R0, [PC, #28]
0x1CD2	0x6001    STR	R1, [R0, #0]
;timers.h, 10 :: 		TIM2_CR1.CEN = 1;
0x1CD4	0x4803    LDR	R0, [PC, #12]
0x1CD6	0x6001    STR	R1, [R0, #0]
;timers.h, 11 :: 		}
L_end_InitTimer2:
0x1CD8	0xF8DDE000  LDR	LR, [SP, #0]
0x1CDC	0xB001    ADD	SP, SP, #4
0x1CDE	0x4770    BX	LR
0x1CE0	0x03804242  	RCC_APB1ENR+0
0x1CE4	0x00004200  	TIM2_CR1+0
0x1CE8	0x00284000  	TIM2_PSC+0
0x1CEC	0x002C4000  	TIM2_ARR+0
0x1CF0	0x01804200  	TIM2_DIER+0
; end of _InitTimer2
_Button:
;__Lib_Button.c, 6 :: 		
; active_state start address is: 12 (R3)
; time_ms start address is: 8 (R2)
; pin start address is: 4 (R1)
; port start address is: 0 (R0)
0x1C34	0xB082    SUB	SP, SP, #8
0x1C36	0xF8CDE000  STR	LR, [SP, #0]
0x1C3A	0x460D    MOV	R5, R1
0x1C3C	0x4611    MOV	R1, R2
; active_state end address is: 12 (R3)
; time_ms end address is: 8 (R2)
; pin end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin start address is: 20 (R5)
; time_ms start address is: 4 (R1)
; active_state start address is: 12 (R3)
;__Lib_Button.c, 8 :: 		
; rslt start address is: 8 (R2)
0x1C3E	0xF04F0200  MOV	R2, #0
;__Lib_Button.c, 11 :: 		
0x1C42	0x2401    MOVS	R4, #1
0x1C44	0xB224    SXTH	R4, R4
0x1C46	0x40AC    LSLS	R4, R5
0x1C48	0xB224    SXTH	R4, R4
; pin end address is: 20 (R5)
; pMask start address is: 20 (R5)
0x1C4A	0xB225    SXTH	R5, R4
;__Lib_Button.c, 13 :: 		
0x1C4C	0x6804    LDR	R4, [R0, #0]
0x1C4E	0x402C    ANDS	R4, R5
0x1C50	0x2C00    CMP	R4, #0
0x1C52	0xF2400400  MOVW	R4, #0
0x1C56	0xD100    BNE	L__Button7
0x1C58	0x2401    MOVS	R4, #1
L__Button7:
0x1C5A	0xB2E4    UXTB	R4, R4
0x1C5C	0x405C    EORS	R4, R3
0x1C5E	0xB1C4    CBZ	R4, L__Button5
; time_ms end address is: 4 (R1)
; pMask end address is: 20 (R5)
; rslt end address is: 8 (R2)
; active_state end address is: 12 (R3)
; port end address is: 0 (R0)
0x1C60	0x9501    STR	R5, [SP, #4]
0x1C62	0x460D    MOV	R5, R1
0x1C64	0x9901    LDR	R1, [SP, #4]
;__Lib_Button.c, 15 :: 		
L_Button1:
; pMask start address is: 4 (R1)
; rslt start address is: 8 (R2)
; active_state start address is: 12 (R3)
; time_ms start address is: 20 (R5)
; port start address is: 0 (R0)
0x1C66	0x2D00    CMP	R5, #0
0x1C68	0xD905    BLS	L_Button2
;__Lib_Button.c, 16 :: 		
0x1C6A	0xF7FFFAA9  BL	_Delay_500us+0
;__Lib_Button.c, 17 :: 		
0x1C6E	0xF7FFFAA7  BL	_Delay_500us+0
;__Lib_Button.c, 18 :: 		
0x1C72	0x1E6D    SUBS	R5, R5, #1
;__Lib_Button.c, 19 :: 		
; time_ms end address is: 20 (R5)
0x1C74	0xE7F7    B	L_Button1
L_Button2:
;__Lib_Button.c, 21 :: 		
0x1C76	0x6804    LDR	R4, [R0, #0]
; port end address is: 0 (R0)
0x1C78	0x400C    ANDS	R4, R1
; pMask end address is: 4 (R1)
0x1C7A	0x2C00    CMP	R4, #0
0x1C7C	0xF2400400  MOVW	R4, #0
0x1C80	0xD100    BNE	L__Button8
0x1C82	0x2401    MOVS	R4, #1
L__Button8:
0x1C84	0xB2E4    UXTB	R4, R4
0x1C86	0x405C    EORS	R4, R3
; active_state end address is: 12 (R3)
0x1C88	0xB10C    CBZ	R4, L__Button4
; rslt end address is: 8 (R2)
;__Lib_Button.c, 22 :: 		
; rslt start address is: 0 (R0)
0x1C8A	0x20FF    MOVS	R0, #255
; rslt end address is: 0 (R0)
0x1C8C	0xE000    B	L_Button3
L__Button4:
;__Lib_Button.c, 21 :: 		
0x1C8E	0x4610    MOV	R0, R2
;__Lib_Button.c, 22 :: 		
L_Button3:
;__Lib_Button.c, 23 :: 		
; rslt start address is: 0 (R0)
; rslt end address is: 0 (R0)
0x1C90	0xE000    B	L_Button0
L__Button5:
;__Lib_Button.c, 13 :: 		
0x1C92	0x4610    MOV	R0, R2
;__Lib_Button.c, 23 :: 		
L_Button0:
;__Lib_Button.c, 25 :: 		
; rslt start address is: 0 (R0)
0x1C94	0xB280    UXTH	R0, R0
; rslt end address is: 0 (R0)
;__Lib_Button.c, 26 :: 		
L_end_Button:
0x1C96	0xF8DDE000  LDR	LR, [SP, #0]
0x1C9A	0xB002    ADD	SP, SP, #8
0x1C9C	0x4770    BX	LR
; end of _Button
_Delay_500us:
;__Lib_Delays.c, 33 :: 		void Delay_500us() {
;__Lib_Delays.c, 34 :: 		Delay_us(498);
0x11C0	0xF2417757  MOVW	R7, #5975
0x11C4	0xF2C00700  MOVT	R7, #0
L_Delay_500us10:
0x11C8	0x1E7F    SUBS	R7, R7, #1
0x11CA	0xD1FD    BNE	L_Delay_500us10
0x11CC	0xBF00    NOP
0x11CE	0xBF00    NOP
0x11D0	0xBF00    NOP
0x11D2	0xBF00    NOP
0x11D4	0xBF00    NOP
;__Lib_Delays.c, 35 :: 		}
L_end_Delay_500us:
0x11D6	0x4770    BX	LR
; end of _Delay_500us
_ADC_Set_Input_Channel:
;__Lib_ADC_12_32F10x_10ch.c, 35 :: 		
; input_mask start address is: 0 (R0)
0x1B78	0xB081    SUB	SP, SP, #4
0x1B7A	0xF8CDE000  STR	LR, [SP, #0]
0x1B7E	0xFA1FF980  UXTH	R9, R0
; input_mask end address is: 0 (R0)
; input_mask start address is: 36 (R9)
;__Lib_ADC_12_32F10x_10ch.c, 36 :: 		
0x1B82	0xF3C90100  UBFX	R1, R9, #0, #1
0x1B86	0xB121    CBZ	R1, L_ADC_Set_Input_Channel0
;__Lib_ADC_12_32F10x_10ch.c, 37 :: 		
0x1B88	0xF2400101  MOVW	R1, #1
0x1B8C	0x4827    LDR	R0, [PC, #156]
0x1B8E	0xF7FFFFAF  BL	_GPIO_Analog_Input+0
L_ADC_Set_Input_Channel0:
;__Lib_ADC_12_32F10x_10ch.c, 38 :: 		
0x1B92	0xF3C90140  UBFX	R1, R9, #1, #1
0x1B96	0xB121    CBZ	R1, L_ADC_Set_Input_Channel1
;__Lib_ADC_12_32F10x_10ch.c, 39 :: 		
0x1B98	0xF2400102  MOVW	R1, #2
0x1B9C	0x4823    LDR	R0, [PC, #140]
0x1B9E	0xF7FFFFA7  BL	_GPIO_Analog_Input+0
L_ADC_Set_Input_Channel1:
;__Lib_ADC_12_32F10x_10ch.c, 40 :: 		
0x1BA2	0xF3C90180  UBFX	R1, R9, #2, #1
0x1BA6	0xB121    CBZ	R1, L_ADC_Set_Input_Channel2
;__Lib_ADC_12_32F10x_10ch.c, 41 :: 		
0x1BA8	0xF2400104  MOVW	R1, #4
0x1BAC	0x481F    LDR	R0, [PC, #124]
0x1BAE	0xF7FFFF9F  BL	_GPIO_Analog_Input+0
L_ADC_Set_Input_Channel2:
;__Lib_ADC_12_32F10x_10ch.c, 42 :: 		
0x1BB2	0xF3C901C0  UBFX	R1, R9, #3, #1
0x1BB6	0xB121    CBZ	R1, L_ADC_Set_Input_Channel3
;__Lib_ADC_12_32F10x_10ch.c, 43 :: 		
0x1BB8	0xF2400108  MOVW	R1, #8
0x1BBC	0x481B    LDR	R0, [PC, #108]
0x1BBE	0xF7FFFF97  BL	_GPIO_Analog_Input+0
L_ADC_Set_Input_Channel3:
;__Lib_ADC_12_32F10x_10ch.c, 44 :: 		
0x1BC2	0xF3C91100  UBFX	R1, R9, #4, #1
0x1BC6	0xB121    CBZ	R1, L_ADC_Set_Input_Channel4
;__Lib_ADC_12_32F10x_10ch.c, 45 :: 		
0x1BC8	0xF2400110  MOVW	R1, #16
0x1BCC	0x4817    LDR	R0, [PC, #92]
0x1BCE	0xF7FFFF8F  BL	_GPIO_Analog_Input+0
L_ADC_Set_Input_Channel4:
;__Lib_ADC_12_32F10x_10ch.c, 46 :: 		
0x1BD2	0xF3C91140  UBFX	R1, R9, #5, #1
0x1BD6	0xB121    CBZ	R1, L_ADC_Set_Input_Channel5
;__Lib_ADC_12_32F10x_10ch.c, 47 :: 		
0x1BD8	0xF2400120  MOVW	R1, #32
0x1BDC	0x4813    LDR	R0, [PC, #76]
0x1BDE	0xF7FFFF87  BL	_GPIO_Analog_Input+0
L_ADC_Set_Input_Channel5:
;__Lib_ADC_12_32F10x_10ch.c, 48 :: 		
0x1BE2	0xF3C91180  UBFX	R1, R9, #6, #1
0x1BE6	0xB121    CBZ	R1, L_ADC_Set_Input_Channel6
;__Lib_ADC_12_32F10x_10ch.c, 49 :: 		
0x1BE8	0xF2400140  MOVW	R1, #64
0x1BEC	0x480F    LDR	R0, [PC, #60]
0x1BEE	0xF7FFFF7F  BL	_GPIO_Analog_Input+0
L_ADC_Set_Input_Channel6:
;__Lib_ADC_12_32F10x_10ch.c, 50 :: 		
0x1BF2	0xF3C911C0  UBFX	R1, R9, #7, #1
0x1BF6	0xB121    CBZ	R1, L_ADC_Set_Input_Channel7
;__Lib_ADC_12_32F10x_10ch.c, 51 :: 		
0x1BF8	0xF2400180  MOVW	R1, #128
0x1BFC	0x480B    LDR	R0, [PC, #44]
0x1BFE	0xF7FFFF77  BL	_GPIO_Analog_Input+0
L_ADC_Set_Input_Channel7:
;__Lib_ADC_12_32F10x_10ch.c, 52 :: 		
0x1C02	0xF3C92100  UBFX	R1, R9, #8, #1
0x1C06	0xB121    CBZ	R1, L_ADC_Set_Input_Channel8
;__Lib_ADC_12_32F10x_10ch.c, 53 :: 		
0x1C08	0xF2400101  MOVW	R1, #1
0x1C0C	0x4808    LDR	R0, [PC, #32]
0x1C0E	0xF7FFFF6F  BL	_GPIO_Analog_Input+0
L_ADC_Set_Input_Channel8:
;__Lib_ADC_12_32F10x_10ch.c, 54 :: 		
0x1C12	0xF3C92140  UBFX	R1, R9, #9, #1
; input_mask end address is: 36 (R9)
0x1C16	0xB121    CBZ	R1, L_ADC_Set_Input_Channel9
;__Lib_ADC_12_32F10x_10ch.c, 55 :: 		
0x1C18	0xF2400102  MOVW	R1, #2
0x1C1C	0x4804    LDR	R0, [PC, #16]
0x1C1E	0xF7FFFF67  BL	_GPIO_Analog_Input+0
L_ADC_Set_Input_Channel9:
;__Lib_ADC_12_32F10x_10ch.c, 56 :: 		
L_end_ADC_Set_Input_Channel:
0x1C22	0xF8DDE000  LDR	LR, [SP, #0]
0x1C26	0xB001    ADD	SP, SP, #4
0x1C28	0x4770    BX	LR
0x1C2A	0xBF00    NOP
0x1C2C	0x08004001  	GPIOA_BASE+0
0x1C30	0x0C004001  	GPIOB_BASE+0
; end of _ADC_Set_Input_Channel
_ADC1_Get_Sample:
;__Lib_ADC_12_32F10x_10ch.c, 118 :: 		
; channel start address is: 0 (R0)
0x1CF4	0xB081    SUB	SP, SP, #4
0x1CF6	0xF8CDE000  STR	LR, [SP, #0]
; channel end address is: 0 (R0)
; channel start address is: 0 (R0)
;__Lib_ADC_12_32F10x_10ch.c, 119 :: 		
0x1CFA	0xB281    UXTH	R1, R0
; channel end address is: 0 (R0)
0x1CFC	0x4803    LDR	R0, [PC, #12]
0x1CFE	0xF7FFFA6B  BL	__Lib_ADC_12_32F10x_10ch_ADCx_Get_Sample+0
;__Lib_ADC_12_32F10x_10ch.c, 126 :: 		
L_end_ADC1_Get_Sample:
0x1D02	0xF8DDE000  LDR	LR, [SP, #0]
0x1D06	0xB001    ADD	SP, SP, #4
0x1D08	0x4770    BX	LR
0x1D0A	0xBF00    NOP
0x1D0C	0x24004001  	ADC1_SR+0
; end of _ADC1_Get_Sample
__Lib_ADC_12_32F10x_10ch_ADCx_Get_Sample:
;__Lib_ADC_12_32F10x_10ch.c, 104 :: 		
; channel start address is: 4 (R1)
; base start address is: 0 (R0)
0x11D8	0xB081    SUB	SP, SP, #4
0x11DA	0xF8CDE000  STR	LR, [SP, #0]
; channel end address is: 4 (R1)
; base end address is: 0 (R0)
; base start address is: 0 (R0)
; channel start address is: 4 (R1)
;__Lib_ADC_12_32F10x_10ch.c, 105 :: 		
0x11DE	0xF2000434  ADDW	R4, R0, #52
0x11E2	0x090A    LSRS	R2, R1, #4
0x11E4	0xB292    UXTH	R2, R2
0x11E6	0xB293    UXTH	R3, R2
0x11E8	0x6822    LDR	R2, [R4, #0]
0x11EA	0xF3631204  BFI	R2, R3, #4, #1
0x11EE	0x6022    STR	R2, [R4, #0]
;__Lib_ADC_12_32F10x_10ch.c, 106 :: 		
0x11F0	0xF2000434  ADDW	R4, R0, #52
0x11F4	0x08CA    LSRS	R2, R1, #3
0x11F6	0xB292    UXTH	R2, R2
0x11F8	0xB293    UXTH	R3, R2
0x11FA	0x6822    LDR	R2, [R4, #0]
0x11FC	0xF36302C3  BFI	R2, R3, #3, #1
0x1200	0x6022    STR	R2, [R4, #0]
;__Lib_ADC_12_32F10x_10ch.c, 107 :: 		
0x1202	0xF2000434  ADDW	R4, R0, #52
0x1206	0x088A    LSRS	R2, R1, #2
0x1208	0xB292    UXTH	R2, R2
0x120A	0xB293    UXTH	R3, R2
0x120C	0x6822    LDR	R2, [R4, #0]
0x120E	0xF3630282  BFI	R2, R3, #2, #1
0x1212	0x6022    STR	R2, [R4, #0]
;__Lib_ADC_12_32F10x_10ch.c, 108 :: 		
0x1214	0xF2000434  ADDW	R4, R0, #52
0x1218	0x084A    LSRS	R2, R1, #1
0x121A	0xB292    UXTH	R2, R2
0x121C	0xB293    UXTH	R3, R2
0x121E	0x6822    LDR	R2, [R4, #0]
0x1220	0xF3630241  BFI	R2, R3, #1, #1
0x1224	0x6022    STR	R2, [R4, #0]
;__Lib_ADC_12_32F10x_10ch.c, 109 :: 		
0x1226	0xF2000434  ADDW	R4, R0, #52
0x122A	0xB28B    UXTH	R3, R1
; channel end address is: 4 (R1)
0x122C	0x6822    LDR	R2, [R4, #0]
0x122E	0xF3630200  BFI	R2, R3, #0, #1
0x1232	0x6022    STR	R2, [R4, #0]
;__Lib_ADC_12_32F10x_10ch.c, 110 :: 		
0x1234	0xF2000408  ADDW	R4, R0, #8
0x1238	0x2301    MOVS	R3, #1
0x123A	0x6822    LDR	R2, [R4, #0]
0x123C	0xF3630200  BFI	R2, R3, #0, #1
0x1240	0x6022    STR	R2, [R4, #0]
;__Lib_ADC_12_32F10x_10ch.c, 111 :: 		
0x1242	0xF2000408  ADDW	R4, R0, #8
0x1246	0x2301    MOVS	R3, #1
0x1248	0x6822    LDR	R2, [R4, #0]
0x124A	0xF3635296  BFI	R2, R3, #22, #1
0x124E	0x6022    STR	R2, [R4, #0]
;__Lib_ADC_12_32F10x_10ch.c, 112 :: 		
0x1250	0xF7FFFCE6  BL	_Delay_1us+0
; base end address is: 0 (R0)
;__Lib_ADC_12_32F10x_10ch.c, 113 :: 		
L___Lib_ADC_12_32F10x_10ch_ADCx_Get_Sample14:
; base start address is: 0 (R0)
0x1254	0x6803    LDR	R3, [R0, #0]
0x1256	0xF3C30240  UBFX	R2, R3, #1, #1
0x125A	0xB902    CBNZ	R2, L___Lib_ADC_12_32F10x_10ch_ADCx_Get_Sample15
0x125C	0xE7FA    B	L___Lib_ADC_12_32F10x_10ch_ADCx_Get_Sample14
L___Lib_ADC_12_32F10x_10ch_ADCx_Get_Sample15:
;__Lib_ADC_12_32F10x_10ch.c, 114 :: 		
0x125E	0xF200024C  ADDW	R2, R0, #76
; base end address is: 0 (R0)
0x1262	0x6812    LDR	R2, [R2, #0]
0x1264	0xB290    UXTH	R0, R2
;__Lib_ADC_12_32F10x_10ch.c, 115 :: 		
L_end_ADCx_Get_Sample:
0x1266	0xF8DDE000  LDR	LR, [SP, #0]
0x126A	0xB001    ADD	SP, SP, #4
0x126C	0x4770    BX	LR
; end of __Lib_ADC_12_32F10x_10ch_ADCx_Get_Sample
_Delay_1us:
;__Lib_Delays.c, 13 :: 		void Delay_1us() {
;__Lib_Delays.c, 14 :: 		Delay_us(1);
0x0C20	0xF240070B  MOVW	R7, #11
0x0C24	0xF2C00700  MOVT	R7, #0
L_Delay_1us0:
0x0C28	0x1E7F    SUBS	R7, R7, #1
0x0C2A	0xD1FD    BNE	L_Delay_1us0
0x0C2C	0xBF00    NOP
0x0C2E	0xBF00    NOP
0x0C30	0xBF00    NOP
0x0C32	0xBF00    NOP
0x0C34	0xBF00    NOP
;__Lib_Delays.c, 15 :: 		}
L_end_Delay_1us:
0x0C36	0x4770    BX	LR
; end of _Delay_1us
__UnsignedIntegralToFloat:
;__Lib_MathDouble.c, 262 :: 		
0x1E2C	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 264 :: 		
0x1E2E	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 265 :: 		
0x1E30	0xBF08    IT	EQ
;__Lib_MathDouble.c, 267 :: 		
0x1E32	0xE00F    BEQ	__me_lab_end
;__Lib_MathDouble.c, 269 :: 		
0x1E34	0xB502    PUSH	(R1, R14)
;__Lib_MathDouble.c, 271 :: 		
0x1E36	0xF04F029E  MOV	R2, #158
;__Lib_MathDouble.c, 272 :: 		
0x1E3A	0xD402    BMI	__me_label_cont
;__Lib_MathDouble.c, 274 :: 		
__me_loop:
0x1E3C	0x1E52    SUBS	R2, R2, #1
;__Lib_MathDouble.c, 275 :: 		
0x1E3E	0x0040    LSLS	R0, R0, #1
;__Lib_MathDouble.c, 277 :: 		
0x1E40	0xD5FC    BPL	__me_loop
;__Lib_MathDouble.c, 279 :: 		
__me_label_cont:
0x1E42	0x3080    ADDS	R0, #128
;__Lib_MathDouble.c, 280 :: 		
0x1E44	0xBF2C    ITE	CS
;__Lib_MathDouble.c, 281 :: 		
0x1E46	0x1C52    ADDCS	R2, R2, #1
;__Lib_MathDouble.c, 282 :: 		
0x1E48	0x0040    LSLCC	R0, R0, #1
;__Lib_MathDouble.c, 284 :: 		
0x1E4A	0x0A40    LSRS	R0, R0, #9
;__Lib_MathDouble.c, 285 :: 		
0x1E4C	0xEA4050C2  ORR	R0, R0, R2, LSL #23
;__Lib_MathDouble.c, 287 :: 		
0x1E50	0xE8BD4002  POP	(R1, R14)
;__Lib_MathDouble.c, 288 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 290 :: 		
L_end__UnsignedIntegralToFloat:
0x1E54	0xB001    ADD	SP, SP, #4
0x1E56	0x4770    BX	LR
; end of __UnsignedIntegralToFloat
__Div_FP:
;__Lib_MathDouble.c, 743 :: 		
0x1D88	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 745 :: 		
0x1D8A	0xB5FA    PUSH	(R1, R3, R4, R5, R6, R7, R14)
;__Lib_MathDouble.c, 746 :: 		
0x1D8C	0xEA900602  EORS	R6, R0, R2, LSL #0
;__Lib_MathDouble.c, 747 :: 		
0x1D90	0xBF4C    ITE	MI
;__Lib_MathDouble.c, 748 :: 		
0x1D92	0xF04F4600  MOVMI	R6, #-2147483648
;__Lib_MathDouble.c, 749 :: 		
0x1D96	0xF04F0600  MOVPL	R6, #0
;__Lib_MathDouble.c, 751 :: 		
0x1D9A	0x0201    LSLS	R1, R0, #8
;__Lib_MathDouble.c, 752 :: 		
0x1D9C	0x0043    LSLS	R3, R0, #1
;__Lib_MathDouble.c, 753 :: 		
0x1D9E	0x0E1B    LSRS	R3, R3, #24
;__Lib_MathDouble.c, 754 :: 		
0x1DA0	0xBF12    ITEE	NE
;__Lib_MathDouble.c, 755 :: 		
0x1DA2	0xF0414100  ORRNE	R1, R1, #-2147483648
;__Lib_MathDouble.c, 757 :: 		
0x1DA6	0xF04F0000  MOVEQ	R0, #0
;__Lib_MathDouble.c, 759 :: 		
0x1DAA	0xE03B    BEQ	__me_lab_end
;__Lib_MathDouble.c, 761 :: 		
0x1DAC	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 762 :: 		
0x1DAE	0xD035    BEQ	__me_ovfl
;__Lib_MathDouble.c, 764 :: 		
0x1DB0	0xEA5F2402  LSLS	R4, R2, #8
;__Lib_MathDouble.c, 765 :: 		
0x1DB4	0xEA5F0542  LSLS	R5, R2, #1
;__Lib_MathDouble.c, 766 :: 		
0x1DB8	0xEA5F6515  LSRS	R5, R5, #24
;__Lib_MathDouble.c, 767 :: 		
0x1DBC	0xBF11    ITEEE	NE
;__Lib_MathDouble.c, 769 :: 		
0x1DBE	0xF0444400  ORRNE	R4, R4, #-2147483648
;__Lib_MathDouble.c, 770 :: 		
0x1DC2	0xF04F40FF  MOVEQ	R0, #2139095040
;__Lib_MathDouble.c, 771 :: 		
0x1DC6	0x4330    ORREQ	R0, R6
;__Lib_MathDouble.c, 773 :: 		
0x1DC8	0xE02C    BEQ	__me_lab_end
;__Lib_MathDouble.c, 775 :: 		
0x1DCA	0x2DFF    CMP	R5, #255
;__Lib_MathDouble.c, 776 :: 		
0x1DCC	0xD026    BEQ	__me_ovfl
;__Lib_MathDouble.c, 778 :: 		
0x1DCE	0x1B5B    SUBS	R3, R3, R5
;__Lib_MathDouble.c, 781 :: 		
0x1DD0	0x2000    MOVS	R0, #0
;__Lib_MathDouble.c, 782 :: 		
0x1DD2	0x2720    MOVS	R7, #32
;__Lib_MathDouble.c, 783 :: 		
0x1DD4	0x0864    LSRS	R4, R4, #1
;__Lib_MathDouble.c, 784 :: 		
0x1DD6	0x0849    LSRS	R1, R1, #1
;__Lib_MathDouble.c, 786 :: 		
__me_fdiv_:
;__Lib_MathDouble.c, 788 :: 		
0x1DD8	0x42A1    CMP	R1, R4
;__Lib_MathDouble.c, 790 :: 		
0x1DDA	0xEB400000  ADC	R0, R0, R0, LSL #0
;__Lib_MathDouble.c, 791 :: 		
0x1DDE	0xBF28    IT	CS
;__Lib_MathDouble.c, 792 :: 		
0x1DE0	0x1B09    SUBCS	R1, R1, R4
;__Lib_MathDouble.c, 793 :: 		
0x1DE2	0x1E7F    SUBS	R7, R7, #1
;__Lib_MathDouble.c, 794 :: 		
0x1DE4	0xD004    BEQ	__me_flb1_
;__Lib_MathDouble.c, 795 :: 		
0x1DE6	0x2900    CMP	R1, #0
;__Lib_MathDouble.c, 796 :: 		
0x1DE8	0xBF18    IT	NE
;__Lib_MathDouble.c, 797 :: 		
0x1DEA	0x0049    LSLNE	R1, R1, #1
;__Lib_MathDouble.c, 798 :: 		
0x1DEC	0xD1F4    BNE	__me_fdiv_
;__Lib_MathDouble.c, 800 :: 		
0x1DEE	0x40B8    LSLS	R0, R7
;__Lib_MathDouble.c, 802 :: 		
__me_flb1_:
0x1DF0	0xF0104F00  TST	R0, #-2147483648
;__Lib_MathDouble.c, 803 :: 		
0x1DF4	0xBF04    ITT	EQ
;__Lib_MathDouble.c, 804 :: 		
0x1DF6	0x0040    LSLEQ	R0, R0, #1
;__Lib_MathDouble.c, 805 :: 		
0x1DF8	0xF1B30301  SUBSEQ	R3, R3, #1
;__Lib_MathDouble.c, 807 :: 		
0x1DFC	0x3080    ADDS	R0, #128
;__Lib_MathDouble.c, 808 :: 		
0x1DFE	0xBF2C    ITE	CS
;__Lib_MathDouble.c, 809 :: 		
0x1E00	0x1C5B    ADDCS	R3, R3, #1
;__Lib_MathDouble.c, 810 :: 		
0x1E02	0x0040    LSLCC	R0, R0, #1
;__Lib_MathDouble.c, 812 :: 		
__me_flb2_:
0x1E04	0x337F    ADDS	R3, #127
;__Lib_MathDouble.c, 813 :: 		
0x1E06	0xBFDC    ITT	LE
;__Lib_MathDouble.c, 814 :: 		
0x1E08	0xF04F0000  MOVLE	R0, #0
;__Lib_MathDouble.c, 816 :: 		
0x1E0C	0xE00A    BLE	__me_lab_end
;__Lib_MathDouble.c, 818 :: 		
0x1E0E	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 819 :: 		
0x1E10	0xD204    BCS	__me_ovfl
;__Lib_MathDouble.c, 821 :: 		
0x1E12	0x0A40    LSRS	R0, R0, #9
;__Lib_MathDouble.c, 822 :: 		
0x1E14	0xEA4050C3  ORR	R0, R0, R3, LSL #23
;__Lib_MathDouble.c, 823 :: 		
0x1E18	0x4330    ORRS	R0, R6
;__Lib_MathDouble.c, 826 :: 		
0x1E1A	0xE003    B	__me_lab_end
;__Lib_MathDouble.c, 828 :: 		
__me_ovfl:
0x1E1C	0x27FF    MOVS	R7, #255
;__Lib_MathDouble.c, 829 :: 		
0x1E1E	0x05FF    LSLS	R7, R7, #23
;__Lib_MathDouble.c, 830 :: 		
0x1E20	0xEA560007  ORRS	R0, R6, R7, LSL #0
;__Lib_MathDouble.c, 831 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 832 :: 		
0x1E24	0xE8BD40FA  POP	(R1, R3, R4, R5, R6, R7, R14)
;__Lib_MathDouble.c, 834 :: 		
L_end__Div_FP:
0x1E28	0xB001    ADD	SP, SP, #4
0x1E2A	0x4770    BX	LR
; end of __Div_FP
__Mul_FP:
;__Lib_MathDouble.c, 666 :: 		
0x1988	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 668 :: 		
0x198A	0xB5FA    PUSH	(R1, R3, R4, R5, R6, R7, R14)
;__Lib_MathDouble.c, 670 :: 		
0x198C	0xEA900602  EORS	R6, R0, R2, LSL #0
;__Lib_MathDouble.c, 671 :: 		
0x1990	0xBF4C    ITE	MI
;__Lib_MathDouble.c, 672 :: 		
0x1992	0xF04F4600  MOVMI	R6, #-2147483648
;__Lib_MathDouble.c, 673 :: 		
0x1996	0xF04F0600  MOVPL	R6, #0
;__Lib_MathDouble.c, 675 :: 		
0x199A	0xEA4F2100  LSL	R1, R0, #8
;__Lib_MathDouble.c, 676 :: 		
0x199E	0xEA4F0340  LSL	R3, R0, #1
;__Lib_MathDouble.c, 677 :: 		
0x19A2	0x0E1B    LSRS	R3, R3, #24
;__Lib_MathDouble.c, 678 :: 		
0x19A4	0xBF12    ITEE	NE
;__Lib_MathDouble.c, 679 :: 		
0x19A6	0xF0414100  ORRNE	R1, R1, #-2147483648
;__Lib_MathDouble.c, 681 :: 		
0x19AA	0xF04F0000  MOVEQ	R0, #0
;__Lib_MathDouble.c, 683 :: 		
0x19AE	0xE02C    BEQ	__me_lab_end
;__Lib_MathDouble.c, 685 :: 		
0x19B0	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 686 :: 		
0x19B2	0xD026    BEQ	__me_ovfl
;__Lib_MathDouble.c, 688 :: 		
0x19B4	0xEA4F2402  LSL	R4, R2, #8
;__Lib_MathDouble.c, 689 :: 		
0x19B8	0xEA4F0542  LSL	R5, R2, #1
;__Lib_MathDouble.c, 690 :: 		
0x19BC	0x0E2D    LSRS	R5, R5, #24
;__Lib_MathDouble.c, 691 :: 		
0x19BE	0xBF12    ITEE	NE
;__Lib_MathDouble.c, 692 :: 		
0x19C0	0xF0444400  ORRNE	R4, R4, #-2147483648
;__Lib_MathDouble.c, 694 :: 		
0x19C4	0xF04F0000  MOVEQ	R0, #0
;__Lib_MathDouble.c, 696 :: 		
0x19C8	0xE01F    BEQ	__me_lab_end
;__Lib_MathDouble.c, 698 :: 		
0x19CA	0x2DFF    CMP	R5, #255
;__Lib_MathDouble.c, 699 :: 		
0x19CC	0xD019    BEQ	__me_ovfl
;__Lib_MathDouble.c, 701 :: 		
0x19CE	0x195B    ADDS	R3, R3, R5
;__Lib_MathDouble.c, 703 :: 		
0x19D0	0xFBA15404  UMULL	R5, R4, R1, R4
;__Lib_MathDouble.c, 705 :: 		
0x19D4	0x2C00    CMP	R4, #0
;__Lib_MathDouble.c, 706 :: 		
0x19D6	0xBF5C    ITT	PL
;__Lib_MathDouble.c, 707 :: 		
0x19D8	0x0064    LSLPL	R4, R4, #1
;__Lib_MathDouble.c, 708 :: 		
0x19DA	0x1E5B    SUBPL	R3, R3, #1
;__Lib_MathDouble.c, 710 :: 		
0x19DC	0x3480    ADDS	R4, #128
;__Lib_MathDouble.c, 711 :: 		
0x19DE	0xBF24    ITT	CS
;__Lib_MathDouble.c, 712 :: 		
0x19E0	0x1C5B    ADDCS	R3, R3, #1
;__Lib_MathDouble.c, 713 :: 		
0x19E2	0x0864    LSRCS	R4, R4, #1
;__Lib_MathDouble.c, 715 :: 		
0x19E4	0x3B7E    SUBS	R3, #126
;__Lib_MathDouble.c, 716 :: 		
0x19E6	0xBFDC    ITT	LE
;__Lib_MathDouble.c, 717 :: 		
0x19E8	0xF04F0000  MOVLE	R0, #0
;__Lib_MathDouble.c, 719 :: 		
0x19EC	0xE00D    BLE	__me_lab_end
;__Lib_MathDouble.c, 721 :: 		
0x19EE	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 722 :: 		
0x19F0	0xD207    BCS	__me_ovfl
;__Lib_MathDouble.c, 724 :: 		
0x19F2	0xEA4F2014  LSR	R0, R4, #8
;__Lib_MathDouble.c, 725 :: 		
0x19F6	0xF4300000  BICS	R0, R0, #8388608
;__Lib_MathDouble.c, 726 :: 		
0x19FA	0xEA4050C3  ORR	R0, R0, R3, LSL #23
;__Lib_MathDouble.c, 727 :: 		
0x19FE	0x4330    ORRS	R0, R6
;__Lib_MathDouble.c, 730 :: 		
0x1A00	0xE003    B	__me_lab_end
;__Lib_MathDouble.c, 732 :: 		
__me_ovfl:
0x1A02	0x27FF    MOVS	R7, #255
;__Lib_MathDouble.c, 733 :: 		
0x1A04	0x05FF    LSLS	R7, R7, #23
;__Lib_MathDouble.c, 734 :: 		
0x1A06	0xEA460007  ORR	R0, R6, R7, LSL #0
;__Lib_MathDouble.c, 735 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 736 :: 		
0x1A0A	0xE8BD40FA  POP	(R1, R3, R4, R5, R6, R7, R14)
;__Lib_MathDouble.c, 738 :: 		
L_end__Mul_FP:
0x1A0E	0xB001    ADD	SP, SP, #4
0x1A10	0x4770    BX	LR
; end of __Mul_FP
__FloatToSignedIntegral:
;__Lib_MathDouble.c, 4 :: 		
0x153C	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 6 :: 		
0x153E	0xB506    PUSH	(R1, R2, R14)
;__Lib_MathDouble.c, 8 :: 		
0x1540	0xEA4F0240  LSL	R2, R0, #1
;__Lib_MathDouble.c, 9 :: 		
0x1544	0xEA4F6212  LSR	R2, R2, #24
;__Lib_MathDouble.c, 11 :: 		
0x1548	0x3A7F    SUBS	R2, #127
;__Lib_MathDouble.c, 12 :: 		
0x154A	0xBF44    ITT	MI
;__Lib_MathDouble.c, 13 :: 		
0x154C	0xF04F0000  MOVMI	R0, #0
;__Lib_MathDouble.c, 15 :: 		
0x1550	0xE011    BMI	__me_lab_end
;__Lib_MathDouble.c, 17 :: 		
0x1552	0xF1D2021F  RSBS	R2, R2, #31
;__Lib_MathDouble.c, 18 :: 		
0x1556	0xD909    BLS	__me_ovfl
;__Lib_MathDouble.c, 20 :: 		
0x1558	0xEA4F2100  LSL	R1, R0, #8
;__Lib_MathDouble.c, 21 :: 		
0x155C	0xF0414100  ORR	R1, R1, #-2147483648
;__Lib_MathDouble.c, 23 :: 		
0x1560	0x40D1    LSRS	R1, R2
;__Lib_MathDouble.c, 25 :: 		
0x1562	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 26 :: 		
0x1564	0xBF4C    ITE	MI
;__Lib_MathDouble.c, 27 :: 		
0x1566	0x4248    RSBMI	R0, R1, #0
;__Lib_MathDouble.c, 28 :: 		
0x1568	0x4608    MOVPL	R0, R1
;__Lib_MathDouble.c, 31 :: 		
0x156A	0xE004    B	__me_lab_end
;__Lib_MathDouble.c, 33 :: 		
__me_ovfl:
0x156C	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 34 :: 		
0x156E	0xF04F4000  MOV	R0, #-2147483648
;__Lib_MathDouble.c, 35 :: 		
0x1572	0xBF58    IT	PL
;__Lib_MathDouble.c, 36 :: 		
0x1574	0x1E40    SUBPL	R0, R0, #1
;__Lib_MathDouble.c, 37 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 38 :: 		
0x1576	0xE8BD4006  POP	(R1, R2, R14)
;__Lib_MathDouble.c, 40 :: 		
L_end__FloatToSignedIntegral:
0x157A	0xB001    ADD	SP, SP, #4
0x157C	0x4770    BX	LR
; end of __FloatToSignedIntegral
__Sub_FP:
;__Lib_MathDouble.c, 539 :: 		
0x1438	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 541 :: 		
0x143A	0xF0824200  EOR	R2, R2, #-2147483648
;__Lib_MathDouble.c, 542 :: 		
0x143E	0xE92D41FA  PUSH	(R1, R3, R4, R5, R6, R7, R8, R14)
;__Lib_MathDouble.c, 544 :: 		
0x1442	0xEA4F2402  LSL	R4, R2, #8
;__Lib_MathDouble.c, 545 :: 		
0x1446	0xEA4F0542  LSL	R5, R2, #1
;__Lib_MathDouble.c, 546 :: 		
0x144A	0x0E2D    LSRS	R5, R5, #24
;__Lib_MathDouble.c, 547 :: 		
0x144C	0xD104    BNE	__me_lab1
;__Lib_MathDouble.c, 549 :: 		
0x144E	0x2C00    CMP	R4, #0
;__Lib_MathDouble.c, 550 :: 		
0x1450	0xBF18    IT	NE
;__Lib_MathDouble.c, 551 :: 		
0x1452	0xF04F0000  MOVNE	R0, #0
;__Lib_MathDouble.c, 553 :: 		
0x1456	0xE06C    B	__me_lab_end
;__Lib_MathDouble.c, 555 :: 		
__me_lab1:
0x1458	0xF0444400  ORR	R4, R4, #-2147483648
;__Lib_MathDouble.c, 557 :: 		
0x145C	0x2DFF    CMP	R5, #255
;__Lib_MathDouble.c, 559 :: 		
0x145E	0xD05F    BEQ	__me_ovfl1
;__Lib_MathDouble.c, 561 :: 		
0x1460	0xEA4F0494  LSR	R4, R4, #2
;__Lib_MathDouble.c, 562 :: 		
0x1464	0x2A00    CMP	R2, #0
;__Lib_MathDouble.c, 563 :: 		
0x1466	0xBF48    IT	MI
;__Lib_MathDouble.c, 564 :: 		
0x1468	0x4264    RSBMI	R4, R4, #0
;__Lib_MathDouble.c, 566 :: 		
0x146A	0xEA4F2100  LSL	R1, R0, #8
;__Lib_MathDouble.c, 567 :: 		
0x146E	0xEA4F0340  LSL	R3, R0, #1
;__Lib_MathDouble.c, 568 :: 		
0x1472	0x0E1B    LSRS	R3, R3, #24
;__Lib_MathDouble.c, 569 :: 		
0x1474	0xD105    BNE	__me_lab2
;__Lib_MathDouble.c, 571 :: 		
0x1476	0x2900    CMP	R1, #0
;__Lib_MathDouble.c, 572 :: 		
0x1478	0xBF14    ITE	NE
;__Lib_MathDouble.c, 573 :: 		
0x147A	0xF04F0000  MOVNE	R0, #0
;__Lib_MathDouble.c, 574 :: 		
0x147E	0x4610    MOVEQ	R0, R2
;__Lib_MathDouble.c, 576 :: 		
0x1480	0xE057    B	__me_lab_end
;__Lib_MathDouble.c, 578 :: 		
__me_lab2:
0x1482	0xF0414100  ORR	R1, R1, #-2147483648
;__Lib_MathDouble.c, 580 :: 		
0x1486	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 581 :: 		
0x1488	0xD04B    BEQ	__me_ovfl0
;__Lib_MathDouble.c, 583 :: 		
0x148A	0xEA4F0191  LSR	R1, R1, #2
;__Lib_MathDouble.c, 584 :: 		
0x148E	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 585 :: 		
0x1490	0xBF48    IT	MI
;__Lib_MathDouble.c, 586 :: 		
0x1492	0x4249    RSBMI	R1, R1, #0
;__Lib_MathDouble.c, 588 :: 		
0x1494	0x1B5E    SUBS	R6, R3, R5
;__Lib_MathDouble.c, 589 :: 		
0x1496	0xBF41    ITTTT	MI
;__Lib_MathDouble.c, 590 :: 		
0x1498	0x460F    MOVMI	R7, R1
;__Lib_MathDouble.c, 591 :: 		
0x149A	0x4621    MOVMI	R1, R4
;__Lib_MathDouble.c, 592 :: 		
0x149C	0x463C    MOVMI	R4, R7
;__Lib_MathDouble.c, 593 :: 		
0x149E	0x4276    RSBMI	R6, R6, #0
;__Lib_MathDouble.c, 594 :: 		
0x14A0	0xBF48    IT	MI
;__Lib_MathDouble.c, 595 :: 		
0x14A2	0x462B    MOVMI	R3, R5
;__Lib_MathDouble.c, 597 :: 		
0x14A4	0x2E19    CMP	R6, #25
;__Lib_MathDouble.c, 598 :: 		
0x14A6	0xBF47    ITTEE	MI
;__Lib_MathDouble.c, 599 :: 		
0x14A8	0xFA44F706  ASRMI	R7, R4, R6
;__Lib_MathDouble.c, 600 :: 		
0x14AC	0x19C9    ADDMI	R1, R1, R7
;__Lib_MathDouble.c, 601 :: 		
0x14AE	0xF04F0800  MOVPL	R8, #0
;__Lib_MathDouble.c, 602 :: 		
0x14B2	0xE003    BPL	__me_skip_sticky
;__Lib_MathDouble.c, 603 :: 		
0x14B4	0xF1C6071C  RSB	R7, R6, #28
;__Lib_MathDouble.c, 604 :: 		
0x14B8	0xFA04F807  LSL	R8, R4, R7
;__Lib_MathDouble.c, 606 :: 		
__me_skip_sticky:
;__Lib_MathDouble.c, 607 :: 		
0x14BC	0x2900    CMP	R1, #0
;__Lib_MathDouble.c, 608 :: 		
0x14BE	0xBF04    ITT	EQ
;__Lib_MathDouble.c, 609 :: 		
0x14C0	0xF04F0000  MOVEQ	R0, #0
;__Lib_MathDouble.c, 611 :: 		
0x14C4	0xE035    BEQ	__me_lab_end
;__Lib_MathDouble.c, 612 :: 		
0x14C6	0xBF46    ITTE	MI
;__Lib_MathDouble.c, 613 :: 		
0x14C8	0x4249    RSBMI	R1, R1, #0
;__Lib_MathDouble.c, 614 :: 		
0x14CA	0xF04F0701  MOVMI	R7, #1
;__Lib_MathDouble.c, 615 :: 		
0x14CE	0xF04F0700  MOVPL	R7, #0
;__Lib_MathDouble.c, 617 :: 		
__me_loop:
0x14D2	0xF1A30301  SUB	R3, R3, #1
;__Lib_MathDouble.c, 618 :: 		
0x14D6	0x0049    LSLS	R1, R1, #1
;__Lib_MathDouble.c, 619 :: 		
0x14D8	0xD5FB    BPL	__me_loop
;__Lib_MathDouble.c, 621 :: 		
0x14DA	0xF0110480  ANDS	R4, R1, #128
;__Lib_MathDouble.c, 622 :: 		
0x14DE	0xD00D    BEQ	__me_no_round
;__Lib_MathDouble.c, 623 :: 		
0x14E0	0xF0010520  AND	R5, R1, #32
;__Lib_MathDouble.c, 624 :: 		
0x14E4	0xEA480805  ORR	R8, R8, R5, LSL #0
;__Lib_MathDouble.c, 625 :: 		
0x14E8	0x3180    ADDS	R1, #128
;__Lib_MathDouble.c, 626 :: 		
0x14EA	0xBF28    IT	CS
;__Lib_MathDouble.c, 627 :: 		
0x14EC	0x1C5B    ADDCS	R3, R3, #1
;__Lib_MathDouble.c, 628 :: 		
0x14EE	0xF0010440  AND	R4, R1, #64
;__Lib_MathDouble.c, 629 :: 		
0x14F2	0xEA580804  ORRS	R8, R8, R4, LSL #0
;__Lib_MathDouble.c, 630 :: 		
0x14F6	0xBF08    IT	EQ
;__Lib_MathDouble.c, 631 :: 		
0x14F8	0xF4217180  BICEQ	R1, R1, #256
;__Lib_MathDouble.c, 633 :: 		
__me_no_round:
;__Lib_MathDouble.c, 634 :: 		
0x14FC	0x1C9B    ADDS	R3, R3, #2
;__Lib_MathDouble.c, 635 :: 		
0x14FE	0xBFDC    ITT	LE
;__Lib_MathDouble.c, 636 :: 		
0x1500	0xF04F0000  MOVLE	R0, #0
;__Lib_MathDouble.c, 638 :: 		
0x1504	0xE015    BLE	__me_lab_end
;__Lib_MathDouble.c, 639 :: 		
0x1506	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 640 :: 		
0x1508	0xD20D    BCS	__me_ovfl
;__Lib_MathDouble.c, 642 :: 		
0x150A	0xF02101FF  BIC	R1, R1, #255
;__Lib_MathDouble.c, 643 :: 		
0x150E	0xEA4F0141  LSL	R1, R1, #1
;__Lib_MathDouble.c, 645 :: 		
0x1512	0xEA4F2051  LSR	R0, R1, #9
;__Lib_MathDouble.c, 646 :: 		
0x1516	0xEA4050C3  ORR	R0, R0, R3, LSL #23
;__Lib_MathDouble.c, 647 :: 		
0x151A	0xEA4070C7  ORR	R0, R0, R7, LSL #31
;__Lib_MathDouble.c, 650 :: 		
0x151E	0xE008    B	__me_lab_end
;__Lib_MathDouble.c, 652 :: 		
__me_ovfl1:
0x1520	0x4610    MOV	R0, R2
;__Lib_MathDouble.c, 653 :: 		
__me_ovfl0:
0x1522	0xEA4F77D0  LSR	R7, R0, #31
;__Lib_MathDouble.c, 654 :: 		
__me_ovfl:
0x1526	0xEA4F77C7  LSL	R7, R7, #31
;__Lib_MathDouble.c, 655 :: 		
0x152A	0x20FF    MOVS	R0, #255
;__Lib_MathDouble.c, 656 :: 		
0x152C	0xEA4F50C0  LSL	R0, R0, #23
;__Lib_MathDouble.c, 657 :: 		
0x1530	0x4338    ORRS	R0, R7
;__Lib_MathDouble.c, 658 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 659 :: 		
0x1532	0xE8BD41FA  POP	(R1, R3, R4, R5, R6, R7, R8, R14)
;__Lib_MathDouble.c, 661 :: 		
L_end__Sub_FP:
0x1536	0xB001    ADD	SP, SP, #4
0x1538	0x4770    BX	LR
; end of __Sub_FP
__Compare_FP:
;__Lib_MathDouble.c, 839 :: 		
0x1580	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 841 :: 		
0x1582	0xB510    PUSH	(R4, R14)
;__Lib_MathDouble.c, 843 :: 		
0x1584	0x4290    CMP	R0, R2
;__Lib_MathDouble.c, 844 :: 		
0x1586	0xBF08    IT	EQ
;__Lib_MathDouble.c, 846 :: 		
0x1588	0xE02A    BEQ	__me_lab_end
;__Lib_MathDouble.c, 848 :: 		
0x158A	0xEA400402  ORR	R4, R0, R2, LSL #0
;__Lib_MathDouble.c, 849 :: 		
0x158E	0xEA4F0444  LSL	R4, R4, #1
;__Lib_MathDouble.c, 850 :: 		
0x1592	0x2C00    CMP	R4, #0
;__Lib_MathDouble.c, 851 :: 		
0x1594	0xBF08    IT	EQ
;__Lib_MathDouble.c, 853 :: 		
0x1596	0xE023    BEQ	__me_lab_end
;__Lib_MathDouble.c, 855 :: 		
0x1598	0x0044    LSLS	R4, R0, #1
;__Lib_MathDouble.c, 856 :: 		
0x159A	0xD104    BNE	__me_ct2_
;__Lib_MathDouble.c, 858 :: 		
0x159C	0x4294    CMP	R4, R2
;__Lib_MathDouble.c, 859 :: 		
0x159E	0xD401    BMI	__me_labop2_pos
;__Lib_MathDouble.c, 860 :: 		
0x15A0	0x1CA4    ADDS	R4, R4, #2
;__Lib_MathDouble.c, 861 :: 		
0x15A2	0x2C01    CMP	R4, #1
;__Lib_MathDouble.c, 862 :: 		
__me_labop2_pos:
;__Lib_MathDouble.c, 864 :: 		
0x15A4	0xE01C    B	__me_lab_end
;__Lib_MathDouble.c, 866 :: 		
__me_ct2_:
0x15A6	0xEA4F0440  LSL	R4, R0, #1
;__Lib_MathDouble.c, 867 :: 		
0x15AA	0xEA4F6414  LSR	R4, R4, #24
;__Lib_MathDouble.c, 868 :: 		
0x15AE	0x2CFF    CMP	R4, #255
;__Lib_MathDouble.c, 869 :: 		
0x15B0	0xD10A    BNE	__me_ct1_
;__Lib_MathDouble.c, 870 :: 		
0x15B2	0xEA4F0442  LSL	R4, R2, #1
;__Lib_MathDouble.c, 871 :: 		
0x15B6	0xEA4F6414  LSR	R4, R4, #24
;__Lib_MathDouble.c, 872 :: 		
0x15BA	0x2CFF    CMP	R4, #255
;__Lib_MathDouble.c, 873 :: 		
0x15BC	0xD104    BNE	__me_ct1_
;__Lib_MathDouble.c, 875 :: 		
0x15BE	0xEA4F74D2  LSR	R4, R2, #31
;__Lib_MathDouble.c, 876 :: 		
0x15C2	0xEBB434D0  SUBS	R4, R4, R0, LSR #31
;__Lib_MathDouble.c, 878 :: 		
0x15C6	0xE00B    B	__me_lab_end
;__Lib_MathDouble.c, 880 :: 		
__me_ct1_:
0x15C8	0x2A00    CMP	R2, #0
;__Lib_MathDouble.c, 881 :: 		
0x15CA	0xD406    BMI	__me_op2_m
;__Lib_MathDouble.c, 883 :: 		
0x15CC	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 884 :: 		
0x15CE	0xDC02    BGT	__me_labop1_pos
;__Lib_MathDouble.c, 885 :: 		
0x15D0	0x2400    MOVS	R4, #0
;__Lib_MathDouble.c, 886 :: 		
0x15D2	0x2C01    CMP	R4, #1
;__Lib_MathDouble.c, 888 :: 		
0x15D4	0xE004    B	__me_lab_end
;__Lib_MathDouble.c, 889 :: 		
__me_labop1_pos:
;__Lib_MathDouble.c, 890 :: 		
0x15D6	0x4290    CMP	R0, R2
;__Lib_MathDouble.c, 892 :: 		
0x15D8	0xE002    B	__me_lab_end
;__Lib_MathDouble.c, 893 :: 		
__me_op2_m:
0x15DA	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 894 :: 		
0x15DC	0xBF48    IT	MI
;__Lib_MathDouble.c, 895 :: 		
0x15DE	0x4282    CMPMI	R2, R0
;__Lib_MathDouble.c, 896 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 897 :: 		
0x15E0	0xE8BD4010  POP	(R4, R14)
;__Lib_MathDouble.c, 899 :: 		
L_end__Compare_FP:
0x15E4	0xB001    ADD	SP, SP, #4
0x15E6	0x4770    BX	LR
; end of __Compare_FP
__Add_FP:
;__Lib_MathDouble.c, 413 :: 		
0x15E8	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 415 :: 		
0x15EA	0xE92D41FA  PUSH	(R1, R3, R4, R5, R6, R7, R8, R14)
;__Lib_MathDouble.c, 417 :: 		
0x15EE	0xEA4F2402  LSL	R4, R2, #8
;__Lib_MathDouble.c, 418 :: 		
0x15F2	0xEA4F0542  LSL	R5, R2, #1
;__Lib_MathDouble.c, 419 :: 		
0x15F6	0x0E2D    LSRS	R5, R5, #24
;__Lib_MathDouble.c, 420 :: 		
0x15F8	0xD104    BNE	__me_lab1
;__Lib_MathDouble.c, 422 :: 		
0x15FA	0x2C00    CMP	R4, #0
;__Lib_MathDouble.c, 423 :: 		
0x15FC	0xBF18    IT	NE
;__Lib_MathDouble.c, 424 :: 		
0x15FE	0xF04F0000  MOVNE	R0, #0
;__Lib_MathDouble.c, 426 :: 		
0x1602	0xE06C    B	__me_lab_end
;__Lib_MathDouble.c, 428 :: 		
__me_lab1:
0x1604	0xF0444400  ORR	R4, R4, #-2147483648
;__Lib_MathDouble.c, 430 :: 		
0x1608	0x2DFF    CMP	R5, #255
;__Lib_MathDouble.c, 432 :: 		
0x160A	0xD05F    BEQ	__me_ovfl1
;__Lib_MathDouble.c, 434 :: 		
0x160C	0xEA4F0494  LSR	R4, R4, #2
;__Lib_MathDouble.c, 435 :: 		
0x1610	0x2A00    CMP	R2, #0
;__Lib_MathDouble.c, 436 :: 		
0x1612	0xBF48    IT	MI
;__Lib_MathDouble.c, 437 :: 		
0x1614	0x4264    RSBMI	R4, R4, #0
;__Lib_MathDouble.c, 439 :: 		
0x1616	0xEA4F2100  LSL	R1, R0, #8
;__Lib_MathDouble.c, 440 :: 		
0x161A	0xEA4F0340  LSL	R3, R0, #1
;__Lib_MathDouble.c, 441 :: 		
0x161E	0x0E1B    LSRS	R3, R3, #24
;__Lib_MathDouble.c, 442 :: 		
0x1620	0xD105    BNE	__me_lab2
;__Lib_MathDouble.c, 444 :: 		
0x1622	0x2900    CMP	R1, #0
;__Lib_MathDouble.c, 445 :: 		
0x1624	0xBF14    ITE	NE
;__Lib_MathDouble.c, 446 :: 		
0x1626	0xF04F0000  MOVNE	R0, #0
;__Lib_MathDouble.c, 447 :: 		
0x162A	0x4610    MOVEQ	R0, R2
;__Lib_MathDouble.c, 449 :: 		
0x162C	0xE057    B	__me_lab_end
;__Lib_MathDouble.c, 451 :: 		
__me_lab2:
0x162E	0xF0414100  ORR	R1, R1, #-2147483648
;__Lib_MathDouble.c, 453 :: 		
0x1632	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 454 :: 		
0x1634	0xD04B    BEQ	__me_ovfl0
;__Lib_MathDouble.c, 456 :: 		
0x1636	0xEA4F0191  LSR	R1, R1, #2
;__Lib_MathDouble.c, 457 :: 		
0x163A	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 458 :: 		
0x163C	0xBF48    IT	MI
;__Lib_MathDouble.c, 459 :: 		
0x163E	0x4249    RSBMI	R1, R1, #0
;__Lib_MathDouble.c, 461 :: 		
0x1640	0x1B5E    SUBS	R6, R3, R5
;__Lib_MathDouble.c, 462 :: 		
0x1642	0xBF41    ITTTT	MI
;__Lib_MathDouble.c, 463 :: 		
0x1644	0x460F    MOVMI	R7, R1
;__Lib_MathDouble.c, 464 :: 		
0x1646	0x4621    MOVMI	R1, R4
;__Lib_MathDouble.c, 465 :: 		
0x1648	0x463C    MOVMI	R4, R7
;__Lib_MathDouble.c, 466 :: 		
0x164A	0x4276    RSBMI	R6, R6, #0
;__Lib_MathDouble.c, 467 :: 		
0x164C	0xBF48    IT	MI
;__Lib_MathDouble.c, 468 :: 		
0x164E	0x462B    MOVMI	R3, R5
;__Lib_MathDouble.c, 470 :: 		
0x1650	0x2E19    CMP	R6, #25
;__Lib_MathDouble.c, 471 :: 		
0x1652	0xBF47    ITTEE	MI
;__Lib_MathDouble.c, 472 :: 		
0x1654	0xFA44F706  ASRMI	R7, R4, R6
;__Lib_MathDouble.c, 473 :: 		
0x1658	0x19C9    ADDMI	R1, R1, R7
;__Lib_MathDouble.c, 474 :: 		
0x165A	0xF04F0800  MOVPL	R8, #0
;__Lib_MathDouble.c, 475 :: 		
0x165E	0xE003    BPL	__me_skip_sticky
;__Lib_MathDouble.c, 476 :: 		
0x1660	0xF1C6071C  RSB	R7, R6, #28
;__Lib_MathDouble.c, 477 :: 		
0x1664	0xFA04F807  LSL	R8, R4, R7
;__Lib_MathDouble.c, 479 :: 		
__me_skip_sticky:
;__Lib_MathDouble.c, 480 :: 		
0x1668	0x2900    CMP	R1, #0
;__Lib_MathDouble.c, 481 :: 		
0x166A	0xBF04    ITT	EQ
;__Lib_MathDouble.c, 482 :: 		
0x166C	0xF04F0000  MOVEQ	R0, #0
;__Lib_MathDouble.c, 484 :: 		
0x1670	0xE035    BEQ	__me_lab_end
;__Lib_MathDouble.c, 485 :: 		
0x1672	0xBF46    ITTE	MI
;__Lib_MathDouble.c, 486 :: 		
0x1674	0x4249    RSBMI	R1, R1, #0
;__Lib_MathDouble.c, 487 :: 		
0x1676	0xF04F0701  MOVMI	R7, #1
;__Lib_MathDouble.c, 488 :: 		
0x167A	0xF04F0700  MOVPL	R7, #0
;__Lib_MathDouble.c, 490 :: 		
__me_loop:
0x167E	0xF1A30301  SUB	R3, R3, #1
;__Lib_MathDouble.c, 491 :: 		
0x1682	0x0049    LSLS	R1, R1, #1
;__Lib_MathDouble.c, 492 :: 		
0x1684	0xD5FB    BPL	__me_loop
;__Lib_MathDouble.c, 494 :: 		
0x1686	0xF0110480  ANDS	R4, R1, #128
;__Lib_MathDouble.c, 495 :: 		
0x168A	0xD00D    BEQ	__me_no_round
;__Lib_MathDouble.c, 496 :: 		
0x168C	0xF0010520  AND	R5, R1, #32
;__Lib_MathDouble.c, 497 :: 		
0x1690	0xEA480805  ORR	R8, R8, R5, LSL #0
;__Lib_MathDouble.c, 498 :: 		
0x1694	0x3180    ADDS	R1, #128
;__Lib_MathDouble.c, 499 :: 		
0x1696	0xBF28    IT	CS
;__Lib_MathDouble.c, 500 :: 		
0x1698	0x1C5B    ADDCS	R3, R3, #1
;__Lib_MathDouble.c, 501 :: 		
0x169A	0xF0010440  AND	R4, R1, #64
;__Lib_MathDouble.c, 502 :: 		
0x169E	0xEA580804  ORRS	R8, R8, R4, LSL #0
;__Lib_MathDouble.c, 503 :: 		
0x16A2	0xBF08    IT	EQ
;__Lib_MathDouble.c, 504 :: 		
0x16A4	0xF4217180  BICEQ	R1, R1, #256
;__Lib_MathDouble.c, 506 :: 		
__me_no_round:
;__Lib_MathDouble.c, 507 :: 		
0x16A8	0x1C9B    ADDS	R3, R3, #2
;__Lib_MathDouble.c, 508 :: 		
0x16AA	0xBFDC    ITT	LE
;__Lib_MathDouble.c, 509 :: 		
0x16AC	0xF04F0000  MOVLE	R0, #0
;__Lib_MathDouble.c, 511 :: 		
0x16B0	0xE015    BLE	__me_lab_end
;__Lib_MathDouble.c, 512 :: 		
0x16B2	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 513 :: 		
0x16B4	0xD20D    BCS	__me_ovfl
;__Lib_MathDouble.c, 515 :: 		
0x16B6	0xF02101FF  BIC	R1, R1, #255
;__Lib_MathDouble.c, 516 :: 		
0x16BA	0xEA4F0141  LSL	R1, R1, #1
;__Lib_MathDouble.c, 518 :: 		
0x16BE	0xEA4F2051  LSR	R0, R1, #9
;__Lib_MathDouble.c, 519 :: 		
0x16C2	0xEA4050C3  ORR	R0, R0, R3, LSL #23
;__Lib_MathDouble.c, 520 :: 		
0x16C6	0xEA4070C7  ORR	R0, R0, R7, LSL #31
;__Lib_MathDouble.c, 523 :: 		
0x16CA	0xE008    B	__me_lab_end
;__Lib_MathDouble.c, 525 :: 		
__me_ovfl1:
0x16CC	0x4610    MOV	R0, R2
;__Lib_MathDouble.c, 526 :: 		
__me_ovfl0:
0x16CE	0xEA4F77D0  LSR	R7, R0, #31
;__Lib_MathDouble.c, 527 :: 		
__me_ovfl:
0x16D2	0xEA4F77C7  LSL	R7, R7, #31
;__Lib_MathDouble.c, 528 :: 		
0x16D6	0x20FF    MOVS	R0, #255
;__Lib_MathDouble.c, 529 :: 		
0x16D8	0xEA4F50C0  LSL	R0, R0, #23
;__Lib_MathDouble.c, 530 :: 		
0x16DC	0x4338    ORRS	R0, R7
;__Lib_MathDouble.c, 531 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 532 :: 		
0x16DE	0xE8BD41FA  POP	(R1, R3, R4, R5, R6, R7, R8, R14)
;__Lib_MathDouble.c, 534 :: 		
L_end__Add_FP:
0x16E2	0xB001    ADD	SP, SP, #4
0x16E4	0x4770    BX	LR
; end of __Add_FP
_uart1SendStatus:
;uart1Send.c, 4 :: 		void uart1SendStatus(unsigned int gear_status, unsigned int dutyyy){
; dutyyy start address is: 4 (R1)
; gear_status start address is: 0 (R0)
0x16E8	0xB081    SUB	SP, SP, #4
0x16EA	0xF8CDE000  STR	LR, [SP, #0]
0x16EE	0xB284    UXTH	R4, R0
0x16F0	0xB28D    UXTH	R5, R1
; dutyyy end address is: 4 (R1)
; gear_status end address is: 0 (R0)
; gear_status start address is: 16 (R4)
; dutyyy start address is: 20 (R5)
;uart1Send.c, 6 :: 		UART1_Write((char)0x21);
0x16F2	0x2021    MOVS	R0, #33
0x16F4	0xF7FFFC78  BL	_UART1_Write+0
;uart1Send.c, 7 :: 		UART1_Write((char)0x50);
0x16F8	0x2050    MOVS	R0, #80
0x16FA	0xF7FFFC75  BL	_UART1_Write+0
;uart1Send.c, 8 :: 		UART1_Write((char)gear_status);
0x16FE	0xB2E0    UXTB	R0, R4
; gear_status end address is: 16 (R4)
0x1700	0xF7FFFC72  BL	_UART1_Write+0
;uart1Send.c, 9 :: 		UART1_Write((char)dutyyy);
0x1704	0xB2E8    UXTB	R0, R5
; dutyyy end address is: 20 (R5)
0x1706	0xF7FFFC6F  BL	_UART1_Write+0
;uart1Send.c, 10 :: 		UART1_Write((char)0x30);
0x170A	0x2030    MOVS	R0, #48
0x170C	0xF7FFFC6C  BL	_UART1_Write+0
;uart1Send.c, 11 :: 		UART1_Write((char)0x3B);
0x1710	0x203B    MOVS	R0, #59
0x1712	0xF7FFFC69  BL	_UART1_Write+0
;uart1Send.c, 12 :: 		}
L_end_uart1SendStatus:
0x1716	0xF8DDE000  LDR	LR, [SP, #0]
0x171A	0xB001    ADD	SP, SP, #4
0x171C	0x4770    BX	LR
; end of _uart1SendStatus
_UART1_Write:
;__Lib_UART_123.c, 41 :: 		
; _data start address is: 0 (R0)
0x0FE8	0xB081    SUB	SP, SP, #4
0x0FEA	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123.c, 42 :: 		
0x0FEE	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x0FF0	0x4803    LDR	R0, [PC, #12]
0x0FF2	0xF7FFFF4F  BL	__Lib_UART_123_UARTx_Write+0
;__Lib_UART_123.c, 43 :: 		
L_end_UART1_Write:
0x0FF6	0xF8DDE000  LDR	LR, [SP, #0]
0x0FFA	0xB001    ADD	SP, SP, #4
0x0FFC	0x4770    BX	LR
0x0FFE	0xBF00    NOP
0x1000	0x38004001  	USART1_SR+0
; end of _UART1_Write
__Lib_UART_123_UARTx_Write:
;__Lib_UART_123.c, 35 :: 		
; _data start address is: 4 (R1)
; UART_Base start address is: 0 (R0)
0x0E94	0xB081    SUB	SP, SP, #4
; _data end address is: 4 (R1)
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 0 (R0)
; _data start address is: 4 (R1)
0x0E96	0xF8AD1000  STRH	R1, [SP, #0]
; UART_Base end address is: 0 (R0)
; _data end address is: 4 (R1)
0x0E9A	0x4601    MOV	R1, R0
0x0E9C	0xF8BD0000  LDRH	R0, [SP, #0]
;__Lib_UART_123.c, 36 :: 		
L___Lib_UART_123_UARTx_Write0:
; _data start address is: 0 (R0)
; UART_Base start address is: 4 (R1)
0x0EA0	0x680B    LDR	R3, [R1, #0]
0x0EA2	0xF3C312C0  UBFX	R2, R3, #7, #1
0x0EA6	0xB902    CBNZ	R2, L___Lib_UART_123_UARTx_Write1
;__Lib_UART_123.c, 37 :: 		
0x0EA8	0xE7FA    B	L___Lib_UART_123_UARTx_Write0
L___Lib_UART_123_UARTx_Write1:
;__Lib_UART_123.c, 38 :: 		
0x0EAA	0x1D0A    ADDS	R2, R1, #4
; UART_Base end address is: 4 (R1)
0x0EAC	0x6010    STR	R0, [R2, #0]
; _data end address is: 0 (R0)
;__Lib_UART_123.c, 39 :: 		
L_end_UARTx_Write:
0x0EAE	0xB001    ADD	SP, SP, #4
0x0EB0	0x4770    BX	LR
; end of __Lib_UART_123_UARTx_Write
_uart1SendCallibration:
;uart1Send.c, 15 :: 		void uart1SendCallibration(){
0x1830	0xB081    SUB	SP, SP, #4
0x1832	0xF8CDE000  STR	LR, [SP, #0]
;uart1Send.c, 16 :: 		UART1_Write((char)0x21);
0x1836	0x2021    MOVS	R0, #33
0x1838	0xF7FFFBD6  BL	_UART1_Write+0
;uart1Send.c, 17 :: 		UART1_Write((char)0x51);
0x183C	0x2051    MOVS	R0, #81
0x183E	0xF7FFFBD3  BL	_UART1_Write+0
;uart1Send.c, 18 :: 		UART1_Write((char)(calAdcAvg >> 16));
0x1842	0x4827    LDR	R0, [PC, #156]
0x1844	0x6800    LDR	R0, [R0, #0]
0x1846	0x1400    ASRS	R0, R0, #16
0x1848	0xB2C0    UXTB	R0, R0
0x184A	0xF7FFFBCD  BL	_UART1_Write+0
;uart1Send.c, 19 :: 		UART1_Write((char)(calAdcAvg >> 8));
0x184E	0x4824    LDR	R0, [PC, #144]
0x1850	0x6800    LDR	R0, [R0, #0]
0x1852	0x1200    ASRS	R0, R0, #8
0x1854	0xB2C0    UXTB	R0, R0
0x1856	0xF7FFFBC7  BL	_UART1_Write+0
;uart1Send.c, 20 :: 		UART1_Write((char)(calAdcAvg));
0x185A	0x4821    LDR	R0, [PC, #132]
0x185C	0x6800    LDR	R0, [R0, #0]
0x185E	0xF7FFFBC3  BL	_UART1_Write+0
;uart1Send.c, 21 :: 		UART1_Write((char)(calDutyF >> 16));
0x1862	0x4820    LDR	R0, [PC, #128]
0x1864	0x6800    LDR	R0, [R0, #0]
0x1866	0x1400    ASRS	R0, R0, #16
0x1868	0xB2C0    UXTB	R0, R0
0x186A	0xF7FFFBBD  BL	_UART1_Write+0
;uart1Send.c, 22 :: 		UART1_Write((char)(calDutyF >> 8));
0x186E	0x481D    LDR	R0, [PC, #116]
0x1870	0x6800    LDR	R0, [R0, #0]
0x1872	0x1200    ASRS	R0, R0, #8
0x1874	0xB2C0    UXTB	R0, R0
0x1876	0xF7FFFBB7  BL	_UART1_Write+0
;uart1Send.c, 23 :: 		UART1_Write((char)(calDutyF));
0x187A	0x481A    LDR	R0, [PC, #104]
0x187C	0x6800    LDR	R0, [R0, #0]
0x187E	0xF7FFFBB3  BL	_UART1_Write+0
;uart1Send.c, 24 :: 		UART1_Write((char)calDuty);
0x1882	0x4819    LDR	R0, [PC, #100]
0x1884	0xF9B00000  LDRSH	R0, [R0, #0]
0x1888	0xF7FFFBAE  BL	_UART1_Write+0
;uart1Send.c, 26 :: 		UART1_Write((char)(leftLimit >> 8));
0x188C	0x4817    LDR	R0, [PC, #92]
0x188E	0x8800    LDRH	R0, [R0, #0]
0x1890	0x0A00    LSRS	R0, R0, #8
0x1892	0xB2C0    UXTB	R0, R0
0x1894	0xF7FFFBA8  BL	_UART1_Write+0
;uart1Send.c, 27 :: 		UART1_Write((char)leftLimit);
0x1898	0x4814    LDR	R0, [PC, #80]
0x189A	0x8800    LDRH	R0, [R0, #0]
0x189C	0xF7FFFBA4  BL	_UART1_Write+0
;uart1Send.c, 29 :: 		UART1_Write((char)(rightLimit >> 8));
0x18A0	0x4813    LDR	R0, [PC, #76]
0x18A2	0x8800    LDRH	R0, [R0, #0]
0x18A4	0x0A00    LSRS	R0, R0, #8
0x18A6	0xB2C0    UXTB	R0, R0
0x18A8	0xF7FFFB9E  BL	_UART1_Write+0
;uart1Send.c, 30 :: 		UART1_Write((char)rightLimit);
0x18AC	0x4810    LDR	R0, [PC, #64]
0x18AE	0x8800    LDRH	R0, [R0, #0]
0x18B0	0xF7FFFB9A  BL	_UART1_Write+0
;uart1Send.c, 32 :: 		UART1_Write((char)dir);
0x18B4	0x480F    LDR	R0, [PC, #60]
0x18B6	0x7800    LDRB	R0, [R0, #0]
0x18B8	0xF7FFFB96  BL	_UART1_Write+0
;uart1Send.c, 34 :: 		UART1_Write((char)(sideDifference >> 8));
0x18BC	0x480E    LDR	R0, [PC, #56]
0x18BE	0x8800    LDRH	R0, [R0, #0]
0x18C0	0x0A00    LSRS	R0, R0, #8
0x18C2	0xB2C0    UXTB	R0, R0
0x18C4	0xF7FFFB90  BL	_UART1_Write+0
;uart1Send.c, 35 :: 		UART1_Write((char)sideDifference);
0x18C8	0x480B    LDR	R0, [PC, #44]
0x18CA	0x8800    LDRH	R0, [R0, #0]
0x18CC	0xF7FFFB8C  BL	_UART1_Write+0
;uart1Send.c, 37 :: 		UART1_Write((char)0x3B);
0x18D0	0x203B    MOVS	R0, #59
0x18D2	0xF7FFFB89  BL	_UART1_Write+0
;uart1Send.c, 38 :: 		}
L_end_uart1SendCallibration:
0x18D6	0xF8DDE000  LDR	LR, [SP, #0]
0x18DA	0xB001    ADD	SP, SP, #4
0x18DC	0x4770    BX	LR
0x18DE	0xBF00    NOP
0x18E0	0x00142000  	_calAdcAvg+0
0x18E4	0x001C2000  	_calDutyF+0
0x18E8	0x00222000  	_calDuty+0
0x18EC	0x00002000  	_leftLimit+0
0x18F0	0x00022000  	_rightLimit+0
0x18F4	0x002B2000  	_dir+0
0x18F8	0x00042000  	_sideDifference+0
; end of _uart1SendCallibration
_resetTouch:
;nestHelm.c, 42 :: 		void resetTouch(){
;nestHelm.c, 43 :: 		WTPSC = 1;
0x1900	0x2101    MOVS	R1, #1
0x1902	0xB249    SXTB	R1, R1
0x1904	0x480A    LDR	R0, [PC, #40]
0x1906	0x6001    STR	R1, [R0, #0]
;nestHelm.c, 44 :: 		LED11 = 1;
0x1908	0x480A    LDR	R0, [PC, #40]
0x190A	0x6001    STR	R1, [R0, #0]
;nestHelm.c, 45 :: 		Delay_ms(100);
0x190C	0xF644777F  MOVW	R7, #20351
0x1910	0xF2C00712  MOVT	R7, #18
0x1914	0xBF00    NOP
0x1916	0xBF00    NOP
L_resetTouch0:
0x1918	0x1E7F    SUBS	R7, R7, #1
0x191A	0xD1FD    BNE	L_resetTouch0
0x191C	0xBF00    NOP
0x191E	0xBF00    NOP
0x1920	0xBF00    NOP
;nestHelm.c, 46 :: 		WTPSC = 0;
0x1922	0x2100    MOVS	R1, #0
0x1924	0xB249    SXTB	R1, R1
0x1926	0x4802    LDR	R0, [PC, #8]
0x1928	0x6001    STR	R1, [R0, #0]
;nestHelm.c, 47 :: 		LED11 = 0;
0x192A	0x4802    LDR	R0, [PC, #8]
0x192C	0x6001    STR	R1, [R0, #0]
;nestHelm.c, 48 :: 		}
L_end_resetTouch:
0x192E	0x4770    BX	LR
0x1930	0x01944221  	GPIOA_ODR+0
0x1934	0x01B44222  	GPIOC_ODR+0
; end of _resetTouch
__Lib_System_101_102_103_InitialSetUpRCCRCC2:
;__Lib_System_101_102_103.c, 381 :: 		
0x2800	0xB082    SUB	SP, SP, #8
0x2802	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_System_101_102_103.c, 384 :: 		
; ulRCC_CR start address is: 8 (R2)
0x2806	0x4A33    LDR	R2, [PC, #204]
;__Lib_System_101_102_103.c, 385 :: 		
; ulRCC_CFGR start address is: 12 (R3)
0x2808	0x4B33    LDR	R3, [PC, #204]
;__Lib_System_101_102_103.c, 386 :: 		
; Fosc_kHz start address is: 4 (R1)
0x280A	0x4934    LDR	R1, [PC, #208]
;__Lib_System_101_102_103.c, 393 :: 		
0x280C	0xF64B3080  MOVW	R0, #48000
0x2810	0x4281    CMP	R1, R0
0x2812	0xD906    BLS	L___Lib_System_101_102_103_InitialSetUpRCCRCC234
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_101_102_103.c, 394 :: 		
0x2814	0x4832    LDR	R0, [PC, #200]
0x2816	0x6800    LDR	R0, [R0, #0]
0x2818	0xF0400102  ORR	R1, R0, #2
0x281C	0x4830    LDR	R0, [PC, #192]
0x281E	0x6001    STR	R1, [R0, #0]
0x2820	0xE011    B	L___Lib_System_101_102_103_InitialSetUpRCCRCC235
L___Lib_System_101_102_103_InitialSetUpRCCRCC234:
;__Lib_System_101_102_103.c, 395 :: 		
; Fosc_kHz start address is: 4 (R1)
0x2822	0xF64550C0  MOVW	R0, #24000
0x2826	0x4281    CMP	R1, R0
0x2828	0xD906    BLS	L___Lib_System_101_102_103_InitialSetUpRCCRCC236
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_101_102_103.c, 396 :: 		
0x282A	0x482D    LDR	R0, [PC, #180]
0x282C	0x6800    LDR	R0, [R0, #0]
0x282E	0xF0400101  ORR	R1, R0, #1
0x2832	0x482B    LDR	R0, [PC, #172]
0x2834	0x6001    STR	R1, [R0, #0]
0x2836	0xE006    B	L___Lib_System_101_102_103_InitialSetUpRCCRCC237
L___Lib_System_101_102_103_InitialSetUpRCCRCC236:
;__Lib_System_101_102_103.c, 398 :: 		
0x2838	0x4829    LDR	R0, [PC, #164]
0x283A	0x6801    LDR	R1, [R0, #0]
0x283C	0xF06F0007  MVN	R0, #7
0x2840	0x4001    ANDS	R1, R0
0x2842	0x4827    LDR	R0, [PC, #156]
0x2844	0x6001    STR	R1, [R0, #0]
L___Lib_System_101_102_103_InitialSetUpRCCRCC237:
L___Lib_System_101_102_103_InitialSetUpRCCRCC235:
;__Lib_System_101_102_103.c, 400 :: 		
0x2846	0xF7FFF877  BL	__Lib_System_101_102_103_SystemClockSetDefault+0
;__Lib_System_101_102_103.c, 402 :: 		
0x284A	0x4826    LDR	R0, [PC, #152]
0x284C	0x6003    STR	R3, [R0, #0]
;__Lib_System_101_102_103.c, 403 :: 		
0x284E	0x4826    LDR	R0, [PC, #152]
0x2850	0xEA020100  AND	R1, R2, R0, LSL #0
0x2854	0x4825    LDR	R0, [PC, #148]
0x2856	0x6001    STR	R1, [R0, #0]
;__Lib_System_101_102_103.c, 405 :: 		
0x2858	0xF0020001  AND	R0, R2, #1
0x285C	0xB140    CBZ	R0, L___Lib_System_101_102_103_InitialSetUpRCCRCC249
; ulRCC_CFGR end address is: 12 (R3)
; ulRCC_CR end address is: 8 (R2)
0x285E	0x4619    MOV	R1, R3
;__Lib_System_101_102_103.c, 406 :: 		
L___Lib_System_101_102_103_InitialSetUpRCCRCC239:
; ulRCC_CFGR start address is: 4 (R1)
; ulRCC_CR start address is: 8 (R2)
0x2860	0x4822    LDR	R0, [PC, #136]
0x2862	0x6800    LDR	R0, [R0, #0]
0x2864	0xF0000002  AND	R0, R0, #2
0x2868	0x2800    CMP	R0, #0
0x286A	0xD100    BNE	L___Lib_System_101_102_103_InitialSetUpRCCRCC240
;__Lib_System_101_102_103.c, 407 :: 		
0x286C	0xE7F8    B	L___Lib_System_101_102_103_InitialSetUpRCCRCC239
L___Lib_System_101_102_103_InitialSetUpRCCRCC240:
;__Lib_System_101_102_103.c, 408 :: 		
; ulRCC_CFGR end address is: 4 (R1)
0x286E	0xE000    B	L___Lib_System_101_102_103_InitialSetUpRCCRCC238
; ulRCC_CR end address is: 8 (R2)
L___Lib_System_101_102_103_InitialSetUpRCCRCC249:
;__Lib_System_101_102_103.c, 405 :: 		
0x2870	0x4619    MOV	R1, R3
;__Lib_System_101_102_103.c, 408 :: 		
L___Lib_System_101_102_103_InitialSetUpRCCRCC238:
;__Lib_System_101_102_103.c, 410 :: 		
; ulRCC_CFGR start address is: 4 (R1)
; ulRCC_CR start address is: 8 (R2)
0x2872	0xF4023080  AND	R0, R2, #65536
0x2876	0xB148    CBZ	R0, L___Lib_System_101_102_103_InitialSetUpRCCRCC250
; ulRCC_CR end address is: 8 (R2)
; ulRCC_CFGR end address is: 4 (R1)
;__Lib_System_101_102_103.c, 411 :: 		
L___Lib_System_101_102_103_InitialSetUpRCCRCC242:
; ulRCC_CR start address is: 8 (R2)
; ulRCC_CFGR start address is: 4 (R1)
0x2878	0x481C    LDR	R0, [PC, #112]
0x287A	0x6800    LDR	R0, [R0, #0]
0x287C	0xF4003000  AND	R0, R0, #131072
0x2880	0xB900    CBNZ	R0, L___Lib_System_101_102_103_InitialSetUpRCCRCC243
;__Lib_System_101_102_103.c, 412 :: 		
0x2882	0xE7F9    B	L___Lib_System_101_102_103_InitialSetUpRCCRCC242
L___Lib_System_101_102_103_InitialSetUpRCCRCC243:
;__Lib_System_101_102_103.c, 413 :: 		
0x2884	0x9201    STR	R2, [SP, #4]
; ulRCC_CFGR end address is: 4 (R1)
0x2886	0x460A    MOV	R2, R1
0x2888	0x9901    LDR	R1, [SP, #4]
0x288A	0xE002    B	L___Lib_System_101_102_103_InitialSetUpRCCRCC241
; ulRCC_CR end address is: 8 (R2)
L___Lib_System_101_102_103_InitialSetUpRCCRCC250:
;__Lib_System_101_102_103.c, 410 :: 		
0x288C	0x9101    STR	R1, [SP, #4]
0x288E	0x4611    MOV	R1, R2
0x2890	0x9A01    LDR	R2, [SP, #4]
;__Lib_System_101_102_103.c, 413 :: 		
L___Lib_System_101_102_103_InitialSetUpRCCRCC241:
;__Lib_System_101_102_103.c, 415 :: 		
; ulRCC_CR start address is: 4 (R1)
; ulRCC_CFGR start address is: 8 (R2)
0x2892	0xF0017080  AND	R0, R1, #16777216
; ulRCC_CR end address is: 4 (R1)
0x2896	0xB170    CBZ	R0, L___Lib_System_101_102_103_InitialSetUpRCCRCC251
;__Lib_System_101_102_103.c, 416 :: 		
0x2898	0x4814    LDR	R0, [PC, #80]
0x289A	0x6800    LDR	R0, [R0, #0]
0x289C	0xF0407180  ORR	R1, R0, #16777216
0x28A0	0x4812    LDR	R0, [PC, #72]
0x28A2	0x6001    STR	R1, [R0, #0]
; ulRCC_CFGR end address is: 8 (R2)
0x28A4	0x4611    MOV	R1, R2
;__Lib_System_101_102_103.c, 417 :: 		
L___Lib_System_101_102_103_InitialSetUpRCCRCC245:
; ulRCC_CFGR start address is: 4 (R1)
0x28A6	0x4811    LDR	R0, [PC, #68]
0x28A8	0x6800    LDR	R0, [R0, #0]
0x28AA	0xF0007000  AND	R0, R0, #33554432
0x28AE	0xB900    CBNZ	R0, L___Lib_System_101_102_103_InitialSetUpRCCRCC246
;__Lib_System_101_102_103.c, 418 :: 		
0x28B0	0xE7F9    B	L___Lib_System_101_102_103_InitialSetUpRCCRCC245
L___Lib_System_101_102_103_InitialSetUpRCCRCC246:
;__Lib_System_101_102_103.c, 419 :: 		
0x28B2	0x460A    MOV	R2, R1
0x28B4	0xE7FF    B	L___Lib_System_101_102_103_InitialSetUpRCCRCC244
; ulRCC_CFGR end address is: 4 (R1)
L___Lib_System_101_102_103_InitialSetUpRCCRCC251:
;__Lib_System_101_102_103.c, 415 :: 		
;__Lib_System_101_102_103.c, 419 :: 		
L___Lib_System_101_102_103_InitialSetUpRCCRCC244:
;__Lib_System_101_102_103.c, 422 :: 		
; ulRCC_CFGR start address is: 8 (R2)
; ulRCC_CFGR end address is: 8 (R2)
L___Lib_System_101_102_103_InitialSetUpRCCRCC247:
; ulRCC_CFGR start address is: 8 (R2)
0x28B6	0x480B    LDR	R0, [PC, #44]
0x28B8	0x6800    LDR	R0, [R0, #0]
0x28BA	0xF000010C  AND	R1, R0, #12
0x28BE	0x0090    LSLS	R0, R2, #2
0x28C0	0xF000000C  AND	R0, R0, #12
0x28C4	0x4281    CMP	R1, R0
0x28C6	0xD000    BEQ	L___Lib_System_101_102_103_InitialSetUpRCCRCC248
;__Lib_System_101_102_103.c, 423 :: 		
; ulRCC_CFGR end address is: 8 (R2)
0x28C8	0xE7F5    B	L___Lib_System_101_102_103_InitialSetUpRCCRCC247
L___Lib_System_101_102_103_InitialSetUpRCCRCC248:
;__Lib_System_101_102_103.c, 425 :: 		
L_end_InitialSetUpRCCRCC2:
0x28CA	0xF8DDE000  LDR	LR, [SP, #0]
0x28CE	0xB002    ADD	SP, SP, #8
0x28D0	0x4770    BX	LR
0x28D2	0xBF00    NOP
0x28D4	0x00800109  	#17367168
0x28D8	0x8402001D  	#1934338
0x28DC	0x19400001  	#72000
0x28E0	0x20004002  	FLASH_ACR+0
0x28E4	0x10044002  	RCC_CFGR+0
0x28E8	0xFFFF000F  	#1048575
0x28EC	0x10004002  	RCC_CR+0
; end of __Lib_System_101_102_103_InitialSetUpRCCRCC2
__Lib_System_101_102_103_SystemClockSetDefault:
;__Lib_System_101_102_103.c, 360 :: 		
0x1938	0xB081    SUB	SP, SP, #4
;__Lib_System_101_102_103.c, 363 :: 		
0x193A	0x480F    LDR	R0, [PC, #60]
0x193C	0x6800    LDR	R0, [R0, #0]
0x193E	0xF0400101  ORR	R1, R0, #1
0x1942	0x480D    LDR	R0, [PC, #52]
0x1944	0x6001    STR	R1, [R0, #0]
;__Lib_System_101_102_103.c, 366 :: 		
0x1946	0x490D    LDR	R1, [PC, #52]
0x1948	0x480D    LDR	R0, [PC, #52]
0x194A	0x6001    STR	R1, [R0, #0]
;__Lib_System_101_102_103.c, 369 :: 		
0x194C	0x480A    LDR	R0, [PC, #40]
0x194E	0x6801    LDR	R1, [R0, #0]
0x1950	0x480C    LDR	R0, [PC, #48]
0x1952	0x4001    ANDS	R1, R0
0x1954	0x4808    LDR	R0, [PC, #32]
0x1956	0x6001    STR	R1, [R0, #0]
;__Lib_System_101_102_103.c, 372 :: 		
0x1958	0x4807    LDR	R0, [PC, #28]
0x195A	0x6801    LDR	R1, [R0, #0]
0x195C	0xF46F2080  MVN	R0, #262144
0x1960	0x4001    ANDS	R1, R0
0x1962	0x4805    LDR	R0, [PC, #20]
0x1964	0x6001    STR	R1, [R0, #0]
;__Lib_System_101_102_103.c, 375 :: 		
0x1966	0x4806    LDR	R0, [PC, #24]
0x1968	0x6801    LDR	R1, [R0, #0]
0x196A	0xF46F00FE  MVN	R0, #8323072
0x196E	0x4001    ANDS	R1, R0
0x1970	0x4803    LDR	R0, [PC, #12]
0x1972	0x6001    STR	R1, [R0, #0]
;__Lib_System_101_102_103.c, 379 :: 		
L_end_SystemClockSetDefault:
0x1974	0xB001    ADD	SP, SP, #4
0x1976	0x4770    BX	LR
0x1978	0x10004002  	RCC_CR+0
0x197C	0x0000F8FF  	#-117506048
0x1980	0x10044002  	RCC_CFGR+0
0x1984	0xFFFFFEF6  	#-17367041
; end of __Lib_System_101_102_103_SystemClockSetDefault
__Lib_System_101_102_103_InitialSetUpFosc:
;__Lib_System_101_102_103.c, 427 :: 		
0x1E58	0xB081    SUB	SP, SP, #4
;__Lib_System_101_102_103.c, 428 :: 		
0x1E5A	0x4902    LDR	R1, [PC, #8]
0x1E5C	0x4802    LDR	R0, [PC, #8]
0x1E5E	0x6001    STR	R1, [R0, #0]
;__Lib_System_101_102_103.c, 429 :: 		
L_end_InitialSetUpFosc:
0x1E60	0xB001    ADD	SP, SP, #4
0x1E62	0x4770    BX	LR
0x1E64	0x19400001  	#72000
0x1E68	0x03B82000  	___System_CLOCK_IN_KHZ+0
; end of __Lib_System_101_102_103_InitialSetUpFosc
___GenExcept:
;__Lib_System_101_102_103.c, 311 :: 		
0x2DC8	0xB081    SUB	SP, SP, #4
;__Lib_System_101_102_103.c, 312 :: 		
L___GenExcept30:
0x2DCA	0xE7FE    B	L___GenExcept30
;__Lib_System_101_102_103.c, 313 :: 		
L_end___GenExcept:
0x2DCC	0xB001    ADD	SP, SP, #4
0x2DCE	0x4770    BX	LR
; end of ___GenExcept
0x2EF8	0xB500    PUSH	(R14)
0x2EFA	0xF8DFB024  LDR	R11, [PC, #36]
0x2EFE	0xF8DFA024  LDR	R10, [PC, #36]
0x2F02	0xF8DFC024  LDR	R12, [PC, #36]
0x2F06	0xF7FEFDCB  BL	6816
0x2F0A	0xF8DFB020  LDR	R11, [PC, #32]
0x2F0E	0xF8DFA020  LDR	R10, [PC, #32]
0x2F12	0xF8DFC020  LDR	R12, [PC, #32]
0x2F16	0xF7FEFDC3  BL	6816
0x2F1A	0xBD00    POP	(R15)
0x2F1C	0x4770    BX	LR
0x2F1E	0xBF00    NOP
0x2F20	0x00002000  	#536870912
0x2F24	0x002B2000  	#536870955
0x2F28	0x2EA80000  	#11944
0x2F2C	0x002C2000  	#536870956
0x2F30	0x003E2000  	#536870974
0x2F34	0x2ED40000  	#11988
0x2F94	0xB500    PUSH	(R14)
0x2F96	0xF8DFB010  LDR	R11, [PC, #16]
0x2F9A	0xF8DFA010  LDR	R10, [PC, #16]
0x2F9E	0xF7FEFD89  BL	6836
0x2FA2	0xBD00    POP	(R15)
0x2FA4	0x4770    BX	LR
0x2FA6	0xBF00    NOP
0x2FA8	0x00002000  	#536870912
0x2FAC	0x03F02000  	#536871920
_Timer2_interrupt:
;timer2.c, 4 :: 		void Timer2_interrupt() iv IVT_INT_TIM2 {
;timer2.c, 5 :: 		TIM2_SR.UIF = 0;
0x2D78	0x2100    MOVS	R1, #0
0x2D7A	0xB249    SXTB	R1, R1
0x2D7C	0x480D    LDR	R0, [PC, #52]
0x2D7E	0x6001    STR	R1, [R0, #0]
;timer2.c, 8 :: 		countedTimer = 1;
0x2D80	0x2101    MOVS	R1, #1
0x2D82	0xB249    SXTB	R1, R1
0x2D84	0x480C    LDR	R0, [PC, #48]
0x2D86	0x6001    STR	R1, [R0, #0]
;timer2.c, 10 :: 		if(bitStart3SecondsCount){
0x2D88	0x490C    LDR	R1, [PC, #48]
0x2D8A	0x6808    LDR	R0, [R1, #0]
0x2D8C	0xB188    CBZ	R0, L_Timer2_interrupt0
;timer2.c, 11 :: 		delay3secndsCount++;
0x2D8E	0x490C    LDR	R1, [PC, #48]
0x2D90	0xF9B10000  LDRSH	R0, [R1, #0]
0x2D94	0x1C40    ADDS	R0, R0, #1
0x2D96	0xB200    SXTH	R0, R0
0x2D98	0x8008    STRH	R0, [R1, #0]
;timer2.c, 12 :: 		if(delay3secndsCount >= 60){
0x2D9A	0x283C    CMP	R0, #60
0x2D9C	0xDB09    BLT	L_Timer2_interrupt1
;timer2.c, 13 :: 		bitDelay3Seconds = 0;
0x2D9E	0x2100    MOVS	R1, #0
0x2DA0	0xB249    SXTB	R1, R1
0x2DA2	0x4808    LDR	R0, [PC, #32]
0x2DA4	0x6001    STR	R1, [R0, #0]
;timer2.c, 14 :: 		bitStart3SecondsCount = 0;
0x2DA6	0x4805    LDR	R0, [PC, #20]
0x2DA8	0x6001    STR	R1, [R0, #0]
;timer2.c, 15 :: 		delay3secndsCount = 0;
0x2DAA	0x2100    MOVS	R1, #0
0x2DAC	0xB209    SXTH	R1, R1
0x2DAE	0x4804    LDR	R0, [PC, #16]
0x2DB0	0x8001    STRH	R1, [R0, #0]
;timer2.c, 16 :: 		}
L_Timer2_interrupt1:
;timer2.c, 17 :: 		}
L_Timer2_interrupt0:
;timer2.c, 20 :: 		}
L_end_Timer2_interrupt:
0x2DB2	0x4770    BX	LR
0x2DB4	0x02004200  	TIM2_SR+0
0x2DB8	0x27D42200  	_countedTimer+0
0x2DBC	0x27D02200  	_bitStart3SecondsCount+0
0x2DC0	0x01402000  	_delay3secndsCount+0
0x2DC4	0x27CC2200  	_bitDelay3Seconds+0
; end of _Timer2_interrupt
_interruptJoystick:
;interruptUart1.c, 5 :: 		void interruptJoystick() iv IVT_INT_USART1 ics ICS_AUTO {
0x28F0	0xE92D07F0  PUSH	(R4, R5, R6, R7, R8, R9, R10)
0x28F4	0xB081    SUB	SP, SP, #4
0x28F6	0xF8CDE000  STR	LR, [SP, #0]
;interruptUart1.c, 6 :: 		receive1 = UART1_Read();
0x28FA	0xF7FEFF8D  BL	_UART1_Read+0
0x28FE	0x497B    LDR	R1, [PC, #492]
0x2900	0x7008    STRB	R0, [R1, #0]
;interruptUart1.c, 10 :: 		if((receive1 == 0x21)&&(!startReceivingData1)){
0x2902	0xB2C0    UXTB	R0, R0
0x2904	0x2821    CMP	R0, #33
0x2906	0xD11C    BNE	L__interruptJoystick74
0x2908	0x4979    LDR	R1, [PC, #484]
0x290A	0x6808    LDR	R0, [R1, #0]
0x290C	0xB9C8    CBNZ	R0, L__interruptJoystick73
L__interruptJoystick72:
;interruptUart1.c, 11 :: 		uart_count1=0;
0x290E	0x2100    MOVS	R1, #0
0x2910	0x4878    LDR	R0, [PC, #480]
0x2912	0x8001    STRH	R1, [R0, #0]
;interruptUart1.c, 12 :: 		startReceivingData1 = 1;
0x2914	0x2101    MOVS	R1, #1
0x2916	0xB249    SXTB	R1, R1
0x2918	0x4875    LDR	R0, [PC, #468]
0x291A	0x6001    STR	R1, [R0, #0]
;interruptUart1.c, 13 :: 		for(i=0; i<10; i++){
0x291C	0x2100    MOVS	R1, #0
0x291E	0x4876    LDR	R0, [PC, #472]
0x2920	0x8001    STRH	R1, [R0, #0]
L_interruptJoystick3:
0x2922	0x4875    LDR	R0, [PC, #468]
0x2924	0x8800    LDRH	R0, [R0, #0]
0x2926	0x280A    CMP	R0, #10
0x2928	0xD20A    BCS	L_interruptJoystick4
;interruptUart1.c, 14 :: 		uart_receive1[i] = 0;
0x292A	0x4A73    LDR	R2, [PC, #460]
0x292C	0x8811    LDRH	R1, [R2, #0]
0x292E	0x4873    LDR	R0, [PC, #460]
0x2930	0x1841    ADDS	R1, R0, R1
0x2932	0x2000    MOVS	R0, #0
0x2934	0x7008    STRB	R0, [R1, #0]
;interruptUart1.c, 13 :: 		for(i=0; i<10; i++){
0x2936	0x4610    MOV	R0, R2
0x2938	0x8800    LDRH	R0, [R0, #0]
0x293A	0x1C40    ADDS	R0, R0, #1
0x293C	0x8010    STRH	R0, [R2, #0]
;interruptUart1.c, 15 :: 		}
0x293E	0xE7F0    B	L_interruptJoystick3
L_interruptJoystick4:
;interruptUart1.c, 16 :: 		}
0x2940	0xE192    B	L_interruptJoystick6
;interruptUart1.c, 10 :: 		if((receive1 == 0x21)&&(!startReceivingData1)){
L__interruptJoystick74:
L__interruptJoystick73:
;interruptUart1.c, 18 :: 		else if((receive1 == 0x3B)&&(startReceivingData1)&&(uart_count1 + 1 == uartLength1)){
0x2942	0x486A    LDR	R0, [PC, #424]
0x2944	0x7800    LDRB	R0, [R0, #0]
0x2946	0x283B    CMP	R0, #59
0x2948	0xF040818E  BNE	L__interruptJoystick95
0x294C	0x4968    LDR	R1, [PC, #416]
0x294E	0x6808    LDR	R0, [R1, #0]
0x2950	0x2800    CMP	R0, #0
0x2952	0xF0008189  BEQ	L__interruptJoystick94
0x2956	0x4867    LDR	R0, [PC, #412]
0x2958	0x8800    LDRH	R0, [R0, #0]
0x295A	0x1C41    ADDS	R1, R0, #1
0x295C	0xB289    UXTH	R1, R1
0x295E	0x4868    LDR	R0, [PC, #416]
0x2960	0x8800    LDRH	R0, [R0, #0]
0x2962	0x4281    CMP	R1, R0
0x2964	0xF0408180  BNE	L__interruptJoystick93
L__interruptJoystick71:
;interruptUart1.c, 19 :: 		uart_receive1[uart_count1] = receive1;
0x2968	0x4A62    LDR	R2, [PC, #392]
0x296A	0x8811    LDRH	R1, [R2, #0]
0x296C	0x4863    LDR	R0, [PC, #396]
0x296E	0x1841    ADDS	R1, R0, R1
0x2970	0x485E    LDR	R0, [PC, #376]
0x2972	0x7800    LDRB	R0, [R0, #0]
0x2974	0x7008    STRB	R0, [R1, #0]
;interruptUart1.c, 20 :: 		uart_count1 = 0;
0x2976	0x2000    MOVS	R0, #0
0x2978	0x8010    STRH	R0, [R2, #0]
;interruptUart1.c, 21 :: 		startReceivingData1 = 0;
0x297A	0x2100    MOVS	R1, #0
0x297C	0xB249    SXTB	R1, R1
0x297E	0x485C    LDR	R0, [PC, #368]
0x2980	0x6001    STR	R1, [R0, #0]
;interruptUart1.c, 22 :: 		uartLength1 = 0;
0x2982	0x2100    MOVS	R1, #0
0x2984	0x485E    LDR	R0, [PC, #376]
0x2986	0x8001    STRH	R1, [R0, #0]
;interruptUart1.c, 28 :: 		if((uart_receive1[0]==0x21)&&(uart_receive1[1]==0x40)&&(uart_receive1[5] = 0x3B)){
0x2988	0x485C    LDR	R0, [PC, #368]
0x298A	0x7800    LDRB	R0, [R0, #0]
0x298C	0x2821    CMP	R0, #33
0x298E	0xF0408098  BNE	L__interruptJoystick77
0x2992	0x485C    LDR	R0, [PC, #368]
0x2994	0x7800    LDRB	R0, [R0, #0]
0x2996	0x2840    CMP	R0, #64
0x2998	0xF0408093  BNE	L__interruptJoystick76
0x299C	0x213B    MOVS	R1, #59
0x299E	0x485A    LDR	R0, [PC, #360]
0x29A0	0x7001    STRB	R1, [R0, #0]
L__interruptJoystick70:
;interruptUart1.c, 30 :: 		bitRespond = 1;
0x29A2	0x2101    MOVS	R1, #1
0x29A4	0xB249    SXTB	R1, R1
0x29A6	0x4859    LDR	R0, [PC, #356]
0x29A8	0x6001    STR	R1, [R0, #0]
;interruptUart1.c, 32 :: 		if(uart_receive1[4]&=0x01){
0x29AA	0x4959    LDR	R1, [PC, #356]
0x29AC	0x7808    LDRB	R0, [R1, #0]
0x29AE	0xF0000001  AND	R0, R0, #1
0x29B2	0xB2C0    UXTB	R0, R0
0x29B4	0x7008    STRB	R0, [R1, #0]
0x29B6	0x2800    CMP	R0, #0
0x29B8	0xF000807E  BEQ	L_interruptJoystick13
;interruptUart1.c, 33 :: 		bitControlTaken = 1;
0x29BC	0x2101    MOVS	R1, #1
0x29BE	0xB249    SXTB	R1, R1
0x29C0	0x4854    LDR	R0, [PC, #336]
0x29C2	0x6001    STR	R1, [R0, #0]
;interruptUart1.c, 34 :: 		gear_status = (unsigned int)uart_receive1[2];
0x29C4	0x4854    LDR	R0, [PC, #336]
0x29C6	0x7801    LDRB	R1, [R0, #0]
0x29C8	0x4854    LDR	R0, [PC, #336]
0x29CA	0x8001    STRH	R1, [R0, #0]
;interruptUart1.c, 35 :: 		dir_status = (unsigned int)uart_receive1[3];
0x29CC	0x4854    LDR	R0, [PC, #336]
0x29CE	0x7801    LDRB	R1, [R0, #0]
0x29D0	0x4854    LDR	R0, [PC, #336]
0x29D2	0x8001    STRH	R1, [R0, #0]
;interruptUart1.c, 36 :: 		switch(gear_status){
0x29D4	0xE059    B	L_interruptJoystick14
;interruptUart1.c, 37 :: 		case 0x01:
L_interruptJoystick16:
;interruptUart1.c, 38 :: 		ONE_LIGHT = 1;
0x29D6	0x2101    MOVS	R1, #1
0x29D8	0xB249    SXTB	R1, R1
0x29DA	0x4853    LDR	R0, [PC, #332]
0x29DC	0x6001    STR	R1, [R0, #0]
;interruptUart1.c, 39 :: 		TWO_LIGHT = THREE_LIGHT = N_LIGHT = R_LIGHT = 0;
0x29DE	0x2100    MOVS	R1, #0
0x29E0	0xB249    SXTB	R1, R1
0x29E2	0x4852    LDR	R0, [PC, #328]
0x29E4	0x6001    STR	R1, [R0, #0]
0x29E6	0x6801    LDR	R1, [R0, #0]
0x29E8	0x4851    LDR	R0, [PC, #324]
0x29EA	0x6001    STR	R1, [R0, #0]
0x29EC	0x6801    LDR	R1, [R0, #0]
0x29EE	0x4851    LDR	R0, [PC, #324]
0x29F0	0x6001    STR	R1, [R0, #0]
0x29F2	0x6801    LDR	R1, [R0, #0]
0x29F4	0x4850    LDR	R0, [PC, #320]
0x29F6	0x6001    STR	R1, [R0, #0]
;interruptUart1.c, 40 :: 		break;
0x29F8	0xE05D    B	L_interruptJoystick15
;interruptUart1.c, 41 :: 		case 0x02:
L_interruptJoystick17:
;interruptUart1.c, 42 :: 		TWO_LIGHT = 1;
0x29FA	0x2101    MOVS	R1, #1
0x29FC	0xB249    SXTB	R1, R1
0x29FE	0x484E    LDR	R0, [PC, #312]
0x2A00	0x6001    STR	R1, [R0, #0]
;interruptUart1.c, 43 :: 		ONE_LIGHT = THREE_LIGHT = N_LIGHT = R_LIGHT = 0;
0x2A02	0x2100    MOVS	R1, #0
0x2A04	0xB249    SXTB	R1, R1
0x2A06	0x4849    LDR	R0, [PC, #292]
0x2A08	0x6001    STR	R1, [R0, #0]
0x2A0A	0x6801    LDR	R1, [R0, #0]
0x2A0C	0x4848    LDR	R0, [PC, #288]
0x2A0E	0x6001    STR	R1, [R0, #0]
0x2A10	0x6801    LDR	R1, [R0, #0]
0x2A12	0x4848    LDR	R0, [PC, #288]
0x2A14	0x6001    STR	R1, [R0, #0]
0x2A16	0x6801    LDR	R1, [R0, #0]
0x2A18	0x4843    LDR	R0, [PC, #268]
0x2A1A	0x6001    STR	R1, [R0, #0]
;interruptUart1.c, 44 :: 		break;
0x2A1C	0xE04B    B	L_interruptJoystick15
;interruptUart1.c, 45 :: 		case 0x03:
L_interruptJoystick18:
;interruptUart1.c, 46 :: 		THREE_LIGHT = 1;
0x2A1E	0x2101    MOVS	R1, #1
0x2A20	0xB249    SXTB	R1, R1
0x2A22	0x4844    LDR	R0, [PC, #272]
0x2A24	0x6001    STR	R1, [R0, #0]
;interruptUart1.c, 47 :: 		TWO_LIGHT = ONE_LIGHT = N_LIGHT = R_LIGHT = 0;
0x2A26	0x2100    MOVS	R1, #0
0x2A28	0xB249    SXTB	R1, R1
0x2A2A	0x4840    LDR	R0, [PC, #256]
0x2A2C	0x6001    STR	R1, [R0, #0]
0x2A2E	0x6801    LDR	R1, [R0, #0]
0x2A30	0x483F    LDR	R0, [PC, #252]
0x2A32	0x6001    STR	R1, [R0, #0]
0x2A34	0x6801    LDR	R1, [R0, #0]
0x2A36	0x483C    LDR	R0, [PC, #240]
0x2A38	0x6001    STR	R1, [R0, #0]
0x2A3A	0x6801    LDR	R1, [R0, #0]
0x2A3C	0x483E    LDR	R0, [PC, #248]
0x2A3E	0x6001    STR	R1, [R0, #0]
;interruptUart1.c, 48 :: 		break;
0x2A40	0xE039    B	L_interruptJoystick15
;interruptUart1.c, 49 :: 		case 0x04:
L_interruptJoystick19:
;interruptUart1.c, 50 :: 		N_LIGHT = 1;
0x2A42	0x2101    MOVS	R1, #1
0x2A44	0xB249    SXTB	R1, R1
0x2A46	0x483A    LDR	R0, [PC, #232]
0x2A48	0x6001    STR	R1, [R0, #0]
;interruptUart1.c, 51 :: 		TWO_LIGHT = THREE_LIGHT = ONE_LIGHT = R_LIGHT = 0;
0x2A4A	0x2100    MOVS	R1, #0
0x2A4C	0xB249    SXTB	R1, R1
0x2A4E	0x4837    LDR	R0, [PC, #220]
0x2A50	0x6001    STR	R1, [R0, #0]
0x2A52	0x6801    LDR	R1, [R0, #0]
0x2A54	0x4834    LDR	R0, [PC, #208]
0x2A56	0x6001    STR	R1, [R0, #0]
0x2A58	0x6801    LDR	R1, [R0, #0]
0x2A5A	0x4836    LDR	R0, [PC, #216]
0x2A5C	0x6001    STR	R1, [R0, #0]
0x2A5E	0x6801    LDR	R1, [R0, #0]
0x2A60	0x4835    LDR	R0, [PC, #212]
0x2A62	0x6001    STR	R1, [R0, #0]
;interruptUart1.c, 52 :: 		break;
0x2A64	0xE027    B	L_interruptJoystick15
;interruptUart1.c, 53 :: 		case 0x05:
L_interruptJoystick20:
;interruptUart1.c, 54 :: 		R_LIGHT = 1;
0x2A66	0x2101    MOVS	R1, #1
0x2A68	0xB249    SXTB	R1, R1
0x2A6A	0x4830    LDR	R0, [PC, #192]
0x2A6C	0x6001    STR	R1, [R0, #0]
;interruptUart1.c, 55 :: 		TWO_LIGHT = THREE_LIGHT = N_LIGHT = ONE_LIGHT = 0;
0x2A6E	0x2100    MOVS	R1, #0
0x2A70	0xB249    SXTB	R1, R1
0x2A72	0x482D    LDR	R0, [PC, #180]
0x2A74	0x6001    STR	R1, [R0, #0]
0x2A76	0x6801    LDR	R1, [R0, #0]
0x2A78	0x482D    LDR	R0, [PC, #180]
0x2A7A	0x6001    STR	R1, [R0, #0]
0x2A7C	0x6801    LDR	R1, [R0, #0]
0x2A7E	0x482D    LDR	R0, [PC, #180]
0x2A80	0x6001    STR	R1, [R0, #0]
0x2A82	0x6801    LDR	R1, [R0, #0]
0x2A84	0x482C    LDR	R0, [PC, #176]
0x2A86	0x6001    STR	R1, [R0, #0]
;interruptUart1.c, 56 :: 		break;
0x2A88	0xE015    B	L_interruptJoystick15
;interruptUart1.c, 57 :: 		}
L_interruptJoystick14:
0x2A8A	0x4824    LDR	R0, [PC, #144]
0x2A8C	0x8800    LDRH	R0, [R0, #0]
0x2A8E	0x2801    CMP	R0, #1
0x2A90	0xF43FAFA1  BEQ	L_interruptJoystick16
0x2A94	0x4821    LDR	R0, [PC, #132]
0x2A96	0x8800    LDRH	R0, [R0, #0]
0x2A98	0x2802    CMP	R0, #2
0x2A9A	0xF43FAFAE  BEQ	L_interruptJoystick17
0x2A9E	0x481F    LDR	R0, [PC, #124]
0x2AA0	0x8800    LDRH	R0, [R0, #0]
0x2AA2	0x2803    CMP	R0, #3
0x2AA4	0xD0BB    BEQ	L_interruptJoystick18
0x2AA6	0x481D    LDR	R0, [PC, #116]
0x2AA8	0x8800    LDRH	R0, [R0, #0]
0x2AAA	0x2804    CMP	R0, #4
0x2AAC	0xD0C9    BEQ	L_interruptJoystick19
0x2AAE	0x481B    LDR	R0, [PC, #108]
0x2AB0	0x8800    LDRH	R0, [R0, #0]
0x2AB2	0x2805    CMP	R0, #5
0x2AB4	0xD0D7    BEQ	L_interruptJoystick20
L_interruptJoystick15:
;interruptUart1.c, 58 :: 		}
0x2AB6	0xE003    B	L_interruptJoystick21
L_interruptJoystick13:
;interruptUart1.c, 60 :: 		bitControlTaken = 0;
0x2AB8	0x2100    MOVS	R1, #0
0x2ABA	0xB249    SXTB	R1, R1
0x2ABC	0x4815    LDR	R0, [PC, #84]
0x2ABE	0x6001    STR	R1, [R0, #0]
;interruptUart1.c, 61 :: 		}
L_interruptJoystick21:
;interruptUart1.c, 64 :: 		}
0x2AC0	0xE0C0    B	L_interruptJoystick22
;interruptUart1.c, 28 :: 		if((uart_receive1[0]==0x21)&&(uart_receive1[1]==0x40)&&(uart_receive1[5] = 0x3B)){
L__interruptJoystick77:
L__interruptJoystick76:
;interruptUart1.c, 66 :: 		else if((uart_receive1[0]==0x21)&&(uart_receive1[1]==0x41)&&(uart_receive1[5] = 0x3B)){
0x2AC2	0x480E    LDR	R0, [PC, #56]
0x2AC4	0x7800    LDRB	R0, [R0, #0]
0x2AC6	0x2821    CMP	R0, #33
0x2AC8	0xD10B    BNE	L__interruptJoystick80
0x2ACA	0x480E    LDR	R0, [PC, #56]
0x2ACC	0x7800    LDRB	R0, [R0, #0]
0x2ACE	0x2841    CMP	R0, #65
0x2AD0	0xD107    BNE	L__interruptJoystick79
0x2AD2	0x213B    MOVS	R1, #59
0x2AD4	0x480C    LDR	R0, [PC, #48]
0x2AD6	0x7001    STRB	R1, [R0, #0]
L__interruptJoystick69:
;interruptUart1.c, 68 :: 		bitCalSend = 1;
0x2AD8	0x2101    MOVS	R1, #1
0x2ADA	0xB249    SXTB	R1, R1
0x2ADC	0x4817    LDR	R0, [PC, #92]
0x2ADE	0x6001    STR	R1, [R0, #0]
;interruptUart1.c, 70 :: 		}
0x2AE0	0xE0B0    B	L_interruptJoystick26
;interruptUart1.c, 66 :: 		else if((uart_receive1[0]==0x21)&&(uart_receive1[1]==0x41)&&(uart_receive1[5] = 0x3B)){
L__interruptJoystick80:
L__interruptJoystick79:
;interruptUart1.c, 72 :: 		else if((uart_receive1[0]==0x21)&&(uart_receive1[1]==0x42)&&(uart_receive1[5] = 0x3B)){
0x2AE2	0x4806    LDR	R0, [PC, #24]
0x2AE4	0x7800    LDRB	R0, [R0, #0]
0x2AE6	0x2821    CMP	R0, #33
0x2AE8	0xF000B82A  B	#84
0x2AEC	0x002A2000  	_receive1+0
0x2AF0	0x27C42200  	_startReceivingData1+0
0x2AF4	0x00382000  	_uart_count1+0
0x2AF8	0x00082000  	_i+0
0x2AFC	0x03E42000  	_uart_receive1+0
0x2B00	0x003A2000  	_uartLength1+0
0x2B04	0x03E52000  	_uart_receive1+1
0x2B08	0x03E92000  	_uart_receive1+5
0x2B0C	0x27D82200  	_bitRespond+0
0x2B10	0x03E82000  	_uart_receive1+4
0x2B14	0x27DC2200  	_bitControlTaken+0
0x2B18	0x03E62000  	_uart_receive1+2
0x2B1C	0x00062000  	_gear_status+0
0x2B20	0x03E72000  	_uart_receive1+3
0x2B24	0x003C2000  	_dir_status+0
0x2B28	0x81B44221  	ONE_LIGHT+0
0x2B2C	0x81BC4221  	R_LIGHT+0
0x2B30	0x81B84221  	N_LIGHT+0
0x2B34	0x81AC4221  	THREE_LIGHT+0
0x2B38	0x81B04221  	TWO_LIGHT+0
0x2B3C	0x27E02200  	_bitCalSend+0
0x2B40	0xD12D    BNE	L__interruptJoystick83
0x2B42	0x487E    LDR	R0, [PC, #504]
0x2B44	0x7800    LDRB	R0, [R0, #0]
0x2B46	0x2842    CMP	R0, #66
0x2B48	0xD129    BNE	L__interruptJoystick82
0x2B4A	0x213B    MOVS	R1, #59
0x2B4C	0x487C    LDR	R0, [PC, #496]
0x2B4E	0x7001    STRB	R1, [R0, #0]
L__interruptJoystick68:
;interruptUart1.c, 74 :: 		leftLimit = (uart_receive1[2] << 8) + uart_receive1[3];
0x2B50	0x487C    LDR	R0, [PC, #496]
0x2B52	0x7800    LDRB	R0, [R0, #0]
0x2B54	0x0201    LSLS	R1, R0, #8
0x2B56	0xB289    UXTH	R1, R1
0x2B58	0x487B    LDR	R0, [PC, #492]
0x2B5A	0x7800    LDRB	R0, [R0, #0]
0x2B5C	0x1809    ADDS	R1, R1, R0
0x2B5E	0x487B    LDR	R0, [PC, #492]
0x2B60	0x8001    STRH	R1, [R0, #0]
;interruptUart1.c, 75 :: 		eepromSaveLeft();
0x2B62	0xF7FEFDDD  BL	_eepromSaveLeft+0
;interruptUart1.c, 77 :: 		if(leftLimit >= rightLimit){
0x2B66	0x487A    LDR	R0, [PC, #488]
0x2B68	0x8801    LDRH	R1, [R0, #0]
0x2B6A	0x4878    LDR	R0, [PC, #480]
0x2B6C	0x8800    LDRH	R0, [R0, #0]
0x2B6E	0x4288    CMP	R0, R1
0x2B70	0xD307    BCC	L_interruptJoystick30
;interruptUart1.c, 78 :: 		sideDifference = leftLimit - rightLimit;
0x2B72	0x4877    LDR	R0, [PC, #476]
0x2B74	0x8801    LDRH	R1, [R0, #0]
0x2B76	0x4875    LDR	R0, [PC, #468]
0x2B78	0x8800    LDRH	R0, [R0, #0]
0x2B7A	0x1A41    SUB	R1, R0, R1
0x2B7C	0x4875    LDR	R0, [PC, #468]
0x2B7E	0x8001    STRH	R1, [R0, #0]
;interruptUart1.c, 79 :: 		}
0x2B80	0xE006    B	L_interruptJoystick31
L_interruptJoystick30:
;interruptUart1.c, 81 :: 		sideDifference = rightLimit - leftLimit;
0x2B82	0x4872    LDR	R0, [PC, #456]
0x2B84	0x8801    LDRH	R1, [R0, #0]
0x2B86	0x4872    LDR	R0, [PC, #456]
0x2B88	0x8800    LDRH	R0, [R0, #0]
0x2B8A	0x1A41    SUB	R1, R0, R1
0x2B8C	0x4871    LDR	R0, [PC, #452]
0x2B8E	0x8001    STRH	R1, [R0, #0]
;interruptUart1.c, 82 :: 		}
L_interruptJoystick31:
;interruptUart1.c, 84 :: 		if(sideDifference == 0){
0x2B90	0x4870    LDR	R0, [PC, #448]
0x2B92	0x8800    LDRH	R0, [R0, #0]
0x2B94	0xB910    CBNZ	R0, L_interruptJoystick32
;interruptUart1.c, 85 :: 		sideDifference = 1;
0x2B96	0x2101    MOVS	R1, #1
0x2B98	0x486E    LDR	R0, [PC, #440]
0x2B9A	0x8001    STRH	R1, [R0, #0]
;interruptUart1.c, 86 :: 		}
L_interruptJoystick32:
;interruptUart1.c, 88 :: 		}
0x2B9C	0xE052    B	L_interruptJoystick33
;interruptUart1.c, 72 :: 		else if((uart_receive1[0]==0x21)&&(uart_receive1[1]==0x42)&&(uart_receive1[5] = 0x3B)){
L__interruptJoystick83:
L__interruptJoystick82:
;interruptUart1.c, 90 :: 		else if((uart_receive1[0]==0x21)&&(uart_receive1[1]==0x43)&&(uart_receive1[5] = 0x3B)){
0x2B9E	0x486E    LDR	R0, [PC, #440]
0x2BA0	0x7800    LDRB	R0, [R0, #0]
0x2BA2	0x2821    CMP	R0, #33
0x2BA4	0xD12D    BNE	L__interruptJoystick86
0x2BA6	0x4865    LDR	R0, [PC, #404]
0x2BA8	0x7800    LDRB	R0, [R0, #0]
0x2BAA	0x2843    CMP	R0, #67
0x2BAC	0xD129    BNE	L__interruptJoystick85
0x2BAE	0x213B    MOVS	R1, #59
0x2BB0	0x4863    LDR	R0, [PC, #396]
0x2BB2	0x7001    STRB	R1, [R0, #0]
L__interruptJoystick67:
;interruptUart1.c, 92 :: 		rightLimit = (uart_receive1[2] << 8) + uart_receive1[3];
0x2BB4	0x4863    LDR	R0, [PC, #396]
0x2BB6	0x7800    LDRB	R0, [R0, #0]
0x2BB8	0x0201    LSLS	R1, R0, #8
0x2BBA	0xB289    UXTH	R1, R1
0x2BBC	0x4862    LDR	R0, [PC, #392]
0x2BBE	0x7800    LDRB	R0, [R0, #0]
0x2BC0	0x1809    ADDS	R1, R1, R0
0x2BC2	0x4863    LDR	R0, [PC, #396]
0x2BC4	0x8001    STRH	R1, [R0, #0]
;interruptUart1.c, 93 :: 		eepromSaveRight();
0x2BC6	0xF7FEFDDB  BL	_eepromSaveRight+0
;interruptUart1.c, 95 :: 		if(leftLimit >= rightLimit){
0x2BCA	0x4861    LDR	R0, [PC, #388]
0x2BCC	0x8801    LDRH	R1, [R0, #0]
0x2BCE	0x485F    LDR	R0, [PC, #380]
0x2BD0	0x8800    LDRH	R0, [R0, #0]
0x2BD2	0x4288    CMP	R0, R1
0x2BD4	0xD307    BCC	L_interruptJoystick37
;interruptUart1.c, 96 :: 		sideDifference = leftLimit - rightLimit;
0x2BD6	0x485E    LDR	R0, [PC, #376]
0x2BD8	0x8801    LDRH	R1, [R0, #0]
0x2BDA	0x485C    LDR	R0, [PC, #368]
0x2BDC	0x8800    LDRH	R0, [R0, #0]
0x2BDE	0x1A41    SUB	R1, R0, R1
0x2BE0	0x485C    LDR	R0, [PC, #368]
0x2BE2	0x8001    STRH	R1, [R0, #0]
;interruptUart1.c, 97 :: 		}
0x2BE4	0xE006    B	L_interruptJoystick38
L_interruptJoystick37:
;interruptUart1.c, 99 :: 		sideDifference = rightLimit - leftLimit;
0x2BE6	0x4859    LDR	R0, [PC, #356]
0x2BE8	0x8801    LDRH	R1, [R0, #0]
0x2BEA	0x4859    LDR	R0, [PC, #356]
0x2BEC	0x8800    LDRH	R0, [R0, #0]
0x2BEE	0x1A41    SUB	R1, R0, R1
0x2BF0	0x4858    LDR	R0, [PC, #352]
0x2BF2	0x8001    STRH	R1, [R0, #0]
;interruptUart1.c, 100 :: 		}
L_interruptJoystick38:
;interruptUart1.c, 102 :: 		if(sideDifference == 0){
0x2BF4	0x4857    LDR	R0, [PC, #348]
0x2BF6	0x8800    LDRH	R0, [R0, #0]
0x2BF8	0xB910    CBNZ	R0, L_interruptJoystick39
;interruptUart1.c, 103 :: 		sideDifference = 1;
0x2BFA	0x2101    MOVS	R1, #1
0x2BFC	0x4855    LDR	R0, [PC, #340]
0x2BFE	0x8001    STRH	R1, [R0, #0]
;interruptUart1.c, 104 :: 		}
L_interruptJoystick39:
;interruptUart1.c, 106 :: 		}
0x2C00	0xE020    B	L_interruptJoystick40
;interruptUart1.c, 90 :: 		else if((uart_receive1[0]==0x21)&&(uart_receive1[1]==0x43)&&(uart_receive1[5] = 0x3B)){
L__interruptJoystick86:
L__interruptJoystick85:
;interruptUart1.c, 108 :: 		else if((uart_receive1[0]==0x21)&&(uart_receive1[1]==0x44)&&(uart_receive1[5] = 0x3B)){
0x2C02	0x4855    LDR	R0, [PC, #340]
0x2C04	0x7800    LDRB	R0, [R0, #0]
0x2C06	0x2821    CMP	R0, #33
0x2C08	0xD10D    BNE	L__interruptJoystick89
0x2C0A	0x484C    LDR	R0, [PC, #304]
0x2C0C	0x7800    LDRB	R0, [R0, #0]
0x2C0E	0x2844    CMP	R0, #68
0x2C10	0xD109    BNE	L__interruptJoystick88
0x2C12	0x213B    MOVS	R1, #59
0x2C14	0x484A    LDR	R0, [PC, #296]
0x2C16	0x7001    STRB	R1, [R0, #0]
L__interruptJoystick66:
;interruptUart1.c, 110 :: 		dir = uart_receive1[2];
0x2C18	0x484A    LDR	R0, [PC, #296]
0x2C1A	0x7801    LDRB	R1, [R0, #0]
0x2C1C	0x484F    LDR	R0, [PC, #316]
0x2C1E	0x7001    STRB	R1, [R0, #0]
;interruptUart1.c, 111 :: 		eepromDir();
0x2C20	0xF7FEFDDE  BL	_eepromDir+0
;interruptUart1.c, 113 :: 		}
0x2C24	0xE00E    B	L_interruptJoystick44
;interruptUart1.c, 108 :: 		else if((uart_receive1[0]==0x21)&&(uart_receive1[1]==0x44)&&(uart_receive1[5] = 0x3B)){
L__interruptJoystick89:
L__interruptJoystick88:
;interruptUart1.c, 116 :: 		else if((uart_receive1[0]==0x21)&&(uart_receive1[1]==0x45)&&(uart_receive1[5] = 0x3B)){
0x2C26	0x484C    LDR	R0, [PC, #304]
0x2C28	0x7800    LDRB	R0, [R0, #0]
0x2C2A	0x2821    CMP	R0, #33
0x2C2C	0xD10A    BNE	L__interruptJoystick92
0x2C2E	0x4843    LDR	R0, [PC, #268]
0x2C30	0x7800    LDRB	R0, [R0, #0]
0x2C32	0x2845    CMP	R0, #69
0x2C34	0xD106    BNE	L__interruptJoystick91
0x2C36	0x213B    MOVS	R1, #59
0x2C38	0x4841    LDR	R0, [PC, #260]
0x2C3A	0x7001    STRB	R1, [R0, #0]
L__interruptJoystick65:
;interruptUart1.c, 118 :: 		bitResetTouchSensor = 1;
0x2C3C	0x2101    MOVS	R1, #1
0x2C3E	0xB249    SXTB	R1, R1
0x2C40	0x4847    LDR	R0, [PC, #284]
0x2C42	0x6001    STR	R1, [R0, #0]
;interruptUart1.c, 116 :: 		else if((uart_receive1[0]==0x21)&&(uart_receive1[1]==0x45)&&(uart_receive1[5] = 0x3B)){
L__interruptJoystick92:
L__interruptJoystick91:
;interruptUart1.c, 119 :: 		}
L_interruptJoystick44:
L_interruptJoystick40:
L_interruptJoystick33:
L_interruptJoystick26:
L_interruptJoystick22:
;interruptUart1.c, 121 :: 		for(i=0; i<10; i++){
0x2C44	0x2100    MOVS	R1, #0
0x2C46	0x4847    LDR	R0, [PC, #284]
0x2C48	0x8001    STRH	R1, [R0, #0]
L_interruptJoystick48:
0x2C4A	0x4846    LDR	R0, [PC, #280]
0x2C4C	0x8800    LDRH	R0, [R0, #0]
0x2C4E	0x280A    CMP	R0, #10
0x2C50	0xD20A    BCS	L_interruptJoystick49
;interruptUart1.c, 122 :: 		uart_receive1[i] = 0;
0x2C52	0x4A44    LDR	R2, [PC, #272]
0x2C54	0x8811    LDRH	R1, [R2, #0]
0x2C56	0x4840    LDR	R0, [PC, #256]
0x2C58	0x1841    ADDS	R1, R0, R1
0x2C5A	0x2000    MOVS	R0, #0
0x2C5C	0x7008    STRB	R0, [R1, #0]
;interruptUart1.c, 121 :: 		for(i=0; i<10; i++){
0x2C5E	0x4610    MOV	R0, R2
0x2C60	0x8800    LDRH	R0, [R0, #0]
0x2C62	0x1C40    ADDS	R0, R0, #1
0x2C64	0x8010    STRH	R0, [R2, #0]
;interruptUart1.c, 123 :: 		}
0x2C66	0xE7F0    B	L_interruptJoystick48
L_interruptJoystick49:
;interruptUart1.c, 18 :: 		else if((receive1 == 0x3B)&&(startReceivingData1)&&(uart_count1 + 1 == uartLength1)){
L__interruptJoystick95:
L__interruptJoystick94:
L__interruptJoystick93:
;interruptUart1.c, 125 :: 		}
L_interruptJoystick6:
;interruptUart1.c, 128 :: 		if(startReceivingData1 == 1){
0x2C68	0x493F    LDR	R1, [PC, #252]
0x2C6A	0x6808    LDR	R0, [R1, #0]
0x2C6C	0x2800    CMP	R0, #0
0x2C6E	0xF000805F  BEQ	L_interruptJoystick51
;interruptUart1.c, 129 :: 		uart_receive1[uart_count1] = receive1;
0x2C72	0x4A3E    LDR	R2, [PC, #248]
0x2C74	0x8811    LDRH	R1, [R2, #0]
0x2C76	0x4838    LDR	R0, [PC, #224]
0x2C78	0x1841    ADDS	R1, R0, R1
0x2C7A	0x483D    LDR	R0, [PC, #244]
0x2C7C	0x7800    LDRB	R0, [R0, #0]
0x2C7E	0x7008    STRB	R0, [R1, #0]
;interruptUart1.c, 130 :: 		uart_count1++;
0x2C80	0x4610    MOV	R0, R2
0x2C82	0x8800    LDRH	R0, [R0, #0]
0x2C84	0x1C40    ADDS	R0, R0, #1
0x2C86	0xB280    UXTH	R0, R0
0x2C88	0x8010    STRH	R0, [R2, #0]
;interruptUart1.c, 132 :: 		if(uart_count1 == 2)
0x2C8A	0x2802    CMP	R0, #2
0x2C8C	0xD130    BNE	L_interruptJoystick52
;interruptUart1.c, 134 :: 		switch (uart_receive1[1])
0x2C8E	0xE017    B	L_interruptJoystick53
;interruptUart1.c, 136 :: 		case 0x40:
L_interruptJoystick55:
;interruptUart1.c, 137 :: 		uartLength1 = 6;
0x2C90	0x2106    MOVS	R1, #6
0x2C92	0x4838    LDR	R0, [PC, #224]
0x2C94	0x8001    STRH	R1, [R0, #0]
;interruptUart1.c, 138 :: 		break;
0x2C96	0xE02B    B	L_interruptJoystick54
;interruptUart1.c, 139 :: 		case 0x41:
L_interruptJoystick56:
;interruptUart1.c, 140 :: 		uartLength1 = 6;
0x2C98	0x2106    MOVS	R1, #6
0x2C9A	0x4836    LDR	R0, [PC, #216]
0x2C9C	0x8001    STRH	R1, [R0, #0]
;interruptUart1.c, 141 :: 		break;
0x2C9E	0xE027    B	L_interruptJoystick54
;interruptUart1.c, 142 :: 		case 0x42:
L_interruptJoystick57:
;interruptUart1.c, 143 :: 		uartLength1 = 6;
0x2CA0	0x2106    MOVS	R1, #6
0x2CA2	0x4834    LDR	R0, [PC, #208]
0x2CA4	0x8001    STRH	R1, [R0, #0]
;interruptUart1.c, 144 :: 		break;
0x2CA6	0xE023    B	L_interruptJoystick54
;interruptUart1.c, 145 :: 		case 0x43:
L_interruptJoystick58:
;interruptUart1.c, 146 :: 		uartLength1 = 6;
0x2CA8	0x2106    MOVS	R1, #6
0x2CAA	0x4832    LDR	R0, [PC, #200]
0x2CAC	0x8001    STRH	R1, [R0, #0]
;interruptUart1.c, 147 :: 		break;
0x2CAE	0xE01F    B	L_interruptJoystick54
;interruptUart1.c, 148 :: 		case 0x44:
L_interruptJoystick59:
;interruptUart1.c, 149 :: 		uartLength1 = 6;
0x2CB0	0x2106    MOVS	R1, #6
0x2CB2	0x4830    LDR	R0, [PC, #192]
0x2CB4	0x8001    STRH	R1, [R0, #0]
;interruptUart1.c, 150 :: 		break;
0x2CB6	0xE01B    B	L_interruptJoystick54
;interruptUart1.c, 151 :: 		case 0x45:
L_interruptJoystick60:
;interruptUart1.c, 152 :: 		uartLength1 = 6;
0x2CB8	0x2106    MOVS	R1, #6
0x2CBA	0x482E    LDR	R0, [PC, #184]
0x2CBC	0x8001    STRH	R1, [R0, #0]
;interruptUart1.c, 153 :: 		break;
0x2CBE	0xE017    B	L_interruptJoystick54
;interruptUart1.c, 155 :: 		}
L_interruptJoystick53:
0x2CC0	0x481E    LDR	R0, [PC, #120]
0x2CC2	0x7800    LDRB	R0, [R0, #0]
0x2CC4	0x2840    CMP	R0, #64
0x2CC6	0xD0E3    BEQ	L_interruptJoystick55
0x2CC8	0x481C    LDR	R0, [PC, #112]
0x2CCA	0x7800    LDRB	R0, [R0, #0]
0x2CCC	0x2841    CMP	R0, #65
0x2CCE	0xD0E3    BEQ	L_interruptJoystick56
0x2CD0	0x481A    LDR	R0, [PC, #104]
0x2CD2	0x7800    LDRB	R0, [R0, #0]
0x2CD4	0x2842    CMP	R0, #66
0x2CD6	0xD0E3    BEQ	L_interruptJoystick57
0x2CD8	0x4818    LDR	R0, [PC, #96]
0x2CDA	0x7800    LDRB	R0, [R0, #0]
0x2CDC	0x2843    CMP	R0, #67
0x2CDE	0xD0E3    BEQ	L_interruptJoystick58
0x2CE0	0x4816    LDR	R0, [PC, #88]
0x2CE2	0x7800    LDRB	R0, [R0, #0]
0x2CE4	0x2844    CMP	R0, #68
0x2CE6	0xD0E3    BEQ	L_interruptJoystick59
0x2CE8	0x4814    LDR	R0, [PC, #80]
0x2CEA	0x7800    LDRB	R0, [R0, #0]
0x2CEC	0x2845    CMP	R0, #69
0x2CEE	0xD0E3    BEQ	L_interruptJoystick60
L_interruptJoystick54:
;interruptUart1.c, 156 :: 		}
L_interruptJoystick52:
;interruptUart1.c, 158 :: 		if(uart_count1 > 9){
0x2CF0	0x481E    LDR	R0, [PC, #120]
0x2CF2	0x8800    LDRH	R0, [R0, #0]
0x2CF4	0x2809    CMP	R0, #9
0x2CF6	0xD91B    BLS	L_interruptJoystick61
;interruptUart1.c, 159 :: 		uart_count1 = 0;
0x2CF8	0x2100    MOVS	R1, #0
0x2CFA	0x481C    LDR	R0, [PC, #112]
0x2CFC	0x8001    STRH	R1, [R0, #0]
;interruptUart1.c, 160 :: 		uartLength1 = 0;
0x2CFE	0x2100    MOVS	R1, #0
0x2D00	0x481C    LDR	R0, [PC, #112]
0x2D02	0x8001    STRH	R1, [R0, #0]
;interruptUart1.c, 161 :: 		startReceivingData1 = 0;
0x2D04	0x2100    MOVS	R1, #0
0x2D06	0xB249    SXTB	R1, R1
0x2D08	0x4817    LDR	R0, [PC, #92]
0x2D0A	0x6001    STR	R1, [R0, #0]
;interruptUart1.c, 162 :: 		for(i=0; i<10; i++){
0x2D0C	0x2100    MOVS	R1, #0
0x2D0E	0x4815    LDR	R0, [PC, #84]
0x2D10	0x8001    STRH	R1, [R0, #0]
L_interruptJoystick62:
0x2D12	0x4814    LDR	R0, [PC, #80]
0x2D14	0x8800    LDRH	R0, [R0, #0]
0x2D16	0x280A    CMP	R0, #10
0x2D18	0xD20A    BCS	L_interruptJoystick63
;interruptUart1.c, 163 :: 		uart_receive1[i] = 0;
0x2D1A	0x4A12    LDR	R2, [PC, #72]
0x2D1C	0x8811    LDRH	R1, [R2, #0]
0x2D1E	0x480E    LDR	R0, [PC, #56]
0x2D20	0x1841    ADDS	R1, R0, R1
0x2D22	0x2000    MOVS	R0, #0
0x2D24	0x7008    STRB	R0, [R1, #0]
;interruptUart1.c, 162 :: 		for(i=0; i<10; i++){
0x2D26	0x4610    MOV	R0, R2
0x2D28	0x8800    LDRH	R0, [R0, #0]
0x2D2A	0x1C40    ADDS	R0, R0, #1
0x2D2C	0x8010    STRH	R0, [R2, #0]
;interruptUart1.c, 164 :: 		}
0x2D2E	0xE7F0    B	L_interruptJoystick62
L_interruptJoystick63:
;interruptUart1.c, 165 :: 		}
L_interruptJoystick61:
;interruptUart1.c, 166 :: 		}
L_interruptJoystick51:
;interruptUart1.c, 168 :: 		}
L_end_interruptJoystick:
0x2D30	0xF8DDE000  LDR	LR, [SP, #0]
0x2D34	0xB001    ADD	SP, SP, #4
0x2D36	0xE8BD07F0  POP	(R4, R5, R6, R7, R8, R9, R10)
0x2D3A	0x4770    BX	LR
0x2D3C	0x03E52000  	_uart_receive1+1
0x2D40	0x03E92000  	_uart_receive1+5
0x2D44	0x03E62000  	_uart_receive1+2
0x2D48	0x03E72000  	_uart_receive1+3
0x2D4C	0x00002000  	_leftLimit+0
0x2D50	0x00022000  	_rightLimit+0
0x2D54	0x00042000  	_sideDifference+0
0x2D58	0x03E42000  	_uart_receive1+0
0x2D5C	0x002B2000  	_dir+0
0x2D60	0x27C02200  	_bitResetTouchSensor+0
0x2D64	0x00082000  	_i+0
0x2D68	0x27C42200  	_startReceivingData1+0
0x2D6C	0x00382000  	_uart_count1+0
0x2D70	0x002A2000  	_receive1+0
0x2D74	0x003A2000  	_uartLength1+0
; end of _interruptJoystick
_UART1_Read:
;__Lib_UART_123.c, 88 :: 		
0x1818	0xB081    SUB	SP, SP, #4
0x181A	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123.c, 89 :: 		
0x181E	0x4803    LDR	R0, [PC, #12]
0x1820	0xF7FFFDE0  BL	__Lib_UART_123_UARTx_Read+0
;__Lib_UART_123.c, 90 :: 		
L_end_UART1_Read:
0x1824	0xF8DDE000  LDR	LR, [SP, #0]
0x1828	0xB001    ADD	SP, SP, #4
0x182A	0x4770    BX	LR
0x182C	0x38004001  	USART1_SR+0
; end of _UART1_Read
__Lib_UART_123_UARTx_Read:
;__Lib_UART_123.c, 80 :: 		
; UART_Base start address is: 0 (R0)
0x13E4	0xB081    SUB	SP, SP, #4
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 0 (R0)
; UART_Base end address is: 0 (R0)
;__Lib_UART_123.c, 82 :: 		
L___Lib_UART_123_UARTx_Read4:
; UART_Base start address is: 0 (R0)
0x13E6	0x6802    LDR	R2, [R0, #0]
0x13E8	0xF3C21140  UBFX	R1, R2, #5, #1
0x13EC	0xB901    CBNZ	R1, L___Lib_UART_123_UARTx_Read5
0x13EE	0xE7FA    B	L___Lib_UART_123_UARTx_Read4
L___Lib_UART_123_UARTx_Read5:
;__Lib_UART_123.c, 85 :: 		
0x13F0	0x1D01    ADDS	R1, R0, #4
; UART_Base end address is: 0 (R0)
0x13F2	0x6809    LDR	R1, [R1, #0]
0x13F4	0xB288    UXTH	R0, R1
;__Lib_UART_123.c, 86 :: 		
L_end_UARTx_Read:
0x13F6	0xB001    ADD	SP, SP, #4
0x13F8	0x4770    BX	LR
; end of __Lib_UART_123_UARTx_Read
_eepromSaveLeft:
;eeprom.c, 59 :: 		void eepromSaveLeft(){
0x1720	0xB081    SUB	SP, SP, #4
0x1722	0xF8CDE000  STR	LR, [SP, #0]
;eeprom.c, 60 :: 		EEPROM_24C02_WrSingle(1, Lo(leftLimit));
0x1726	0x4814    LDR	R0, [PC, #80]
0x1728	0x8800    LDRH	R0, [R0, #0]
0x172A	0xF00000FF  AND	R0, R0, #255
0x172E	0xB2C1    UXTB	R1, R0
0x1730	0x2001    MOVS	R0, #1
0x1732	0xF7FFFE3F  BL	_EEPROM_24C02_WrSingle+0
;eeprom.c, 61 :: 		Delay_ms(15);
0x1736	0xF64B771F  MOVW	R7, #48927
0x173A	0xF2C00702  MOVT	R7, #2
0x173E	0xBF00    NOP
0x1740	0xBF00    NOP
L_eepromSaveLeft10:
0x1742	0x1E7F    SUBS	R7, R7, #1
0x1744	0xD1FD    BNE	L_eepromSaveLeft10
0x1746	0xBF00    NOP
0x1748	0xBF00    NOP
0x174A	0xBF00    NOP
;eeprom.c, 62 :: 		EEPROM_24C02_WrSingle(2, Hi(leftLimit));
0x174C	0x480A    LDR	R0, [PC, #40]
0x174E	0x8800    LDRH	R0, [R0, #0]
0x1750	0x0A00    LSRS	R0, R0, #8
0x1752	0xB2C1    UXTB	R1, R0
0x1754	0x2002    MOVS	R0, #2
0x1756	0xF7FFFE2D  BL	_EEPROM_24C02_WrSingle+0
;eeprom.c, 63 :: 		Delay_ms(15);
0x175A	0xF64B771F  MOVW	R7, #48927
0x175E	0xF2C00702  MOVT	R7, #2
L_eepromSaveLeft12:
0x1762	0x1E7F    SUBS	R7, R7, #1
0x1764	0xD1FD    BNE	L_eepromSaveLeft12
0x1766	0xBF00    NOP
0x1768	0xBF00    NOP
0x176A	0xBF00    NOP
0x176C	0xBF00    NOP
0x176E	0xBF00    NOP
;eeprom.c, 64 :: 		}
L_end_eepromSaveLeft:
0x1770	0xF8DDE000  LDR	LR, [SP, #0]
0x1774	0xB001    ADD	SP, SP, #4
0x1776	0x4770    BX	LR
0x1778	0x00002000  	_leftLimit+0
; end of _eepromSaveLeft
_EEPROM_24C02_WrSingle:
;eeprom.c, 12 :: 		void EEPROM_24C02_WrSingle(unsigned short wAddr, unsigned short wData) {
; wData start address is: 4 (R1)
; wAddr start address is: 0 (R0)
0x13B4	0xB081    SUB	SP, SP, #4
0x13B6	0xF8CDE000  STR	LR, [SP, #0]
; wData end address is: 4 (R1)
; wAddr end address is: 0 (R0)
; wAddr start address is: 0 (R0)
; wData start address is: 4 (R1)
;eeprom.c, 13 :: 		data_[0] = wAddr;
0x13BA	0x4A08    LDR	R2, [PC, #32]
0x13BC	0x7010    STRB	R0, [R2, #0]
; wAddr end address is: 0 (R0)
;eeprom.c, 14 :: 		data_[1] = wData;
0x13BE	0x4A08    LDR	R2, [PC, #32]
0x13C0	0x7011    STRB	R1, [R2, #0]
; wData end address is: 4 (R1)
;eeprom.c, 15 :: 		I2C1_Start();
0x13C2	0xF7FFFD5B  BL	_I2C1_Start+0
;eeprom.c, 17 :: 		I2C1_Write(0x50,data_,2,END_MODE_STOP);
0x13C6	0xF2400301  MOVW	R3, #1
0x13CA	0x2202    MOVS	R2, #2
0x13CC	0x4903    LDR	R1, [PC, #12]
0x13CE	0x2050    MOVS	R0, #80
0x13D0	0xF7FFFC14  BL	_I2C1_Write+0
;eeprom.c, 18 :: 		}//~
L_end_EEPROM_24C02_WrSingle:
0x13D4	0xF8DDE000  LDR	LR, [SP, #0]
0x13D8	0xB001    ADD	SP, SP, #4
0x13DA	0x4770    BX	LR
0x13DC	0x003E2000  	_data_+0
0x13E0	0x003F2000  	_data_+1
; end of _EEPROM_24C02_WrSingle
_eepromSaveRight:
;eeprom.c, 66 :: 		void eepromSaveRight(){
0x1780	0xB081    SUB	SP, SP, #4
0x1782	0xF8CDE000  STR	LR, [SP, #0]
;eeprom.c, 67 :: 		EEPROM_24C02_WrSingle(3, Lo(rightLimit));
0x1786	0x4814    LDR	R0, [PC, #80]
0x1788	0x8800    LDRH	R0, [R0, #0]
0x178A	0xF00000FF  AND	R0, R0, #255
0x178E	0xB2C1    UXTB	R1, R0
0x1790	0x2003    MOVS	R0, #3
0x1792	0xF7FFFE0F  BL	_EEPROM_24C02_WrSingle+0
;eeprom.c, 68 :: 		Delay_ms(15);
0x1796	0xF64B771F  MOVW	R7, #48927
0x179A	0xF2C00702  MOVT	R7, #2
0x179E	0xBF00    NOP
0x17A0	0xBF00    NOP
L_eepromSaveRight14:
0x17A2	0x1E7F    SUBS	R7, R7, #1
0x17A4	0xD1FD    BNE	L_eepromSaveRight14
0x17A6	0xBF00    NOP
0x17A8	0xBF00    NOP
0x17AA	0xBF00    NOP
;eeprom.c, 69 :: 		EEPROM_24C02_WrSingle(4, Hi(rightLimit));
0x17AC	0x480A    LDR	R0, [PC, #40]
0x17AE	0x8800    LDRH	R0, [R0, #0]
0x17B0	0x0A00    LSRS	R0, R0, #8
0x17B2	0xB2C1    UXTB	R1, R0
0x17B4	0x2004    MOVS	R0, #4
0x17B6	0xF7FFFDFD  BL	_EEPROM_24C02_WrSingle+0
;eeprom.c, 70 :: 		Delay_ms(15);
0x17BA	0xF64B771F  MOVW	R7, #48927
0x17BE	0xF2C00702  MOVT	R7, #2
L_eepromSaveRight16:
0x17C2	0x1E7F    SUBS	R7, R7, #1
0x17C4	0xD1FD    BNE	L_eepromSaveRight16
0x17C6	0xBF00    NOP
0x17C8	0xBF00    NOP
0x17CA	0xBF00    NOP
0x17CC	0xBF00    NOP
0x17CE	0xBF00    NOP
;eeprom.c, 71 :: 		}
L_end_eepromSaveRight:
0x17D0	0xF8DDE000  LDR	LR, [SP, #0]
0x17D4	0xB001    ADD	SP, SP, #4
0x17D6	0x4770    BX	LR
0x17D8	0x00022000  	_rightLimit+0
; end of _eepromSaveRight
_eepromDir:
;eeprom.c, 73 :: 		void eepromDir(){
0x17E0	0xB081    SUB	SP, SP, #4
0x17E2	0xF8CDE000  STR	LR, [SP, #0]
;eeprom.c, 74 :: 		EEPROM_24C02_WrSingle(5, Lo(dir));
0x17E6	0x480B    LDR	R0, [PC, #44]
0x17E8	0x7800    LDRB	R0, [R0, #0]
0x17EA	0xF00000FF  AND	R0, R0, #255
0x17EE	0xB2C1    UXTB	R1, R0
0x17F0	0x2005    MOVS	R0, #5
0x17F2	0xF7FFFDDF  BL	_EEPROM_24C02_WrSingle+0
;eeprom.c, 75 :: 		Delay_ms(15);
0x17F6	0xF64B771F  MOVW	R7, #48927
0x17FA	0xF2C00702  MOVT	R7, #2
0x17FE	0xBF00    NOP
0x1800	0xBF00    NOP
L_eepromDir18:
0x1802	0x1E7F    SUBS	R7, R7, #1
0x1804	0xD1FD    BNE	L_eepromDir18
0x1806	0xBF00    NOP
0x1808	0xBF00    NOP
0x180A	0xBF00    NOP
;eeprom.c, 76 :: 		}
L_end_eepromDir:
0x180C	0xF8DDE000  LDR	LR, [SP, #0]
0x1810	0xB001    ADD	SP, SP, #4
0x1812	0x4770    BX	LR
0x1814	0x002B2000  	_dir+0
; end of _eepromDir
;__Lib_System_101_102_103.c,432 :: __Lib_System_101_102_103_ADCPrescTable [4]
0x177C	0x08060402 ;__Lib_System_101_102_103_ADCPrescTable+0
; end of __Lib_System_101_102_103_ADCPrescTable
;__Lib_GPIO_32F10x_Defs.c,712 :: __GPIO_MODULE_USART1_PA9_10 [108]
0x2DD0	0x00000009 ;__GPIO_MODULE_USART1_PA9_10+0
0x2DD4	0x0000000A ;__GPIO_MODULE_USART1_PA9_10+4
0x2DD8	0xFFFFFFFF ;__GPIO_MODULE_USART1_PA9_10+8
0x2DDC	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+12
0x2DE0	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+16
0x2DE4	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+20
0x2DE8	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+24
0x2DEC	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+28
0x2DF0	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+32
0x2DF4	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+36
0x2DF8	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+40
0x2DFC	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+44
0x2E00	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+48
0x2E04	0x00000818 ;__GPIO_MODULE_USART1_PA9_10+52
0x2E08	0x00000018 ;__GPIO_MODULE_USART1_PA9_10+56
0x2E0C	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+60
0x2E10	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+64
0x2E14	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+68
0x2E18	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+72
0x2E1C	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+76
0x2E20	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+80
0x2E24	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+84
0x2E28	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+88
0x2E2C	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+92
0x2E30	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+96
0x2E34	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+100
0x2E38	0x00000004 ;__GPIO_MODULE_USART1_PA9_10+104
; end of __GPIO_MODULE_USART1_PA9_10
;__Lib_GPIO_32F10x_Defs.c,696 :: __GPIO_MODULE_I2C1_PB67 [108]
0x2E3C	0x00000016 ;__GPIO_MODULE_I2C1_PB67+0
0x2E40	0x00000017 ;__GPIO_MODULE_I2C1_PB67+4
0x2E44	0xFFFFFFFF ;__GPIO_MODULE_I2C1_PB67+8
0x2E48	0x00000000 ;__GPIO_MODULE_I2C1_PB67+12
0x2E4C	0x00000000 ;__GPIO_MODULE_I2C1_PB67+16
0x2E50	0x00000000 ;__GPIO_MODULE_I2C1_PB67+20
0x2E54	0x00000000 ;__GPIO_MODULE_I2C1_PB67+24
0x2E58	0x00000000 ;__GPIO_MODULE_I2C1_PB67+28
0x2E5C	0x00000000 ;__GPIO_MODULE_I2C1_PB67+32
0x2E60	0x00000000 ;__GPIO_MODULE_I2C1_PB67+36
0x2E64	0x00000000 ;__GPIO_MODULE_I2C1_PB67+40
0x2E68	0x00000000 ;__GPIO_MODULE_I2C1_PB67+44
0x2E6C	0x00000000 ;__GPIO_MODULE_I2C1_PB67+48
0x2E70	0x00000828 ;__GPIO_MODULE_I2C1_PB67+52
0x2E74	0x00000828 ;__GPIO_MODULE_I2C1_PB67+56
0x2E78	0x00000000 ;__GPIO_MODULE_I2C1_PB67+60
0x2E7C	0x00000000 ;__GPIO_MODULE_I2C1_PB67+64
0x2E80	0x00000000 ;__GPIO_MODULE_I2C1_PB67+68
0x2E84	0x00000000 ;__GPIO_MODULE_I2C1_PB67+72
0x2E88	0x00000000 ;__GPIO_MODULE_I2C1_PB67+76
0x2E8C	0x00000000 ;__GPIO_MODULE_I2C1_PB67+80
0x2E90	0x00000000 ;__GPIO_MODULE_I2C1_PB67+84
0x2E94	0x00000000 ;__GPIO_MODULE_I2C1_PB67+88
0x2E98	0x00000000 ;__GPIO_MODULE_I2C1_PB67+92
0x2E9C	0x00000000 ;__GPIO_MODULE_I2C1_PB67+96
0x2EA0	0x00000000 ;__GPIO_MODULE_I2C1_PB67+100
0x2EA4	0x00000002 ;__GPIO_MODULE_I2C1_PB67+104
; end of __GPIO_MODULE_I2C1_PB67
;nestHelm.c,0 :: ?ICS_leftLimit [2]
0x2EA8	0x0000 ;?ICS_leftLimit+0
; end of ?ICS_leftLimit
;nestHelm.c,0 :: ?ICS_rightLimit [2]
0x2EAA	0x0000 ;?ICS_rightLimit+0
; end of ?ICS_rightLimit
;nestHelm.c,0 :: ?ICS_sideDifference [2]
0x2EAC	0x0000 ;?ICS_sideDifference+0
; end of ?ICS_sideDifference
;nestHelm.c,0 :: ?ICS_gear_status [2]
0x2EAE	0x0004 ;?ICS_gear_status+0
; end of ?ICS_gear_status
;nestHelm.c,0 :: ?ICS_i [2]
0x2EB0	0x0000 ;?ICS_i+0
; end of ?ICS_i
;nestHelm.c,0 :: ?ICS_j [2]
0x2EB2	0x0000 ;?ICS_j+0
; end of ?ICS_j
;nestHelm.c,0 :: ?ICS_adc_read1 [4]
0x2EB4	0x00000000 ;?ICS_adc_read1+0
; end of ?ICS_adc_read1
;nestHelm.c,0 :: ?ICS_adcSum [4]
0x2EB8	0x00000000 ;?ICS_adcSum+0
; end of ?ICS_adcSum
;nestHelm.c,0 :: ?ICS_calAdcAvg [4]
0x2EBC	0x00000000 ;?ICS_calAdcAvg+0
; end of ?ICS_calAdcAvg
;nestHelm.c,0 :: ?ICS_fDuty [4]
0x2EC0	0x43160000 ;?ICS_fDuty+0
; end of ?ICS_fDuty
;nestHelm.c,0 :: ?ICS_calDutyF [4]
0x2EC4	0x00000000 ;?ICS_calDutyF+0
; end of ?ICS_calDutyF
;nestHelm.c,0 :: ?ICS_dutyy [2]
0x2EC8	0x0096 ;?ICS_dutyy+0
; end of ?ICS_dutyy
;nestHelm.c,0 :: ?ICS_calDuty [2]
0x2ECA	0x0000 ;?ICS_calDuty+0
; end of ?ICS_calDuty
;nestHelm.c,0 :: ?ICS_dutyOld [2]
0x2ECC	0x0096 ;?ICS_dutyOld+0
; end of ?ICS_dutyOld
;nestHelm.c,0 :: ?ICS_dutyCounter [2]
0x2ECE	0x0000 ;?ICS_dutyCounter+0
; end of ?ICS_dutyCounter
;nestHelm.c,0 :: ?ICS_dutyyy [2]
0x2ED0	0x0096 ;?ICS_dutyyy+0
; end of ?ICS_dutyyy
;nestHelm.c,0 :: ?ICS_receive1 [1]
0x2ED2	0x00 ;?ICS_receive1+0
; end of ?ICS_receive1
;__Lib_I2C_12.c,0 :: ?ICS__Lib_I2C_12__I2C1_TIMEOUT [4]
0x2ED4	0x00000000 ;?ICS__Lib_I2C_12__I2C1_TIMEOUT+0
; end of ?ICS__Lib_I2C_12__I2C1_TIMEOUT
;__Lib_I2C_12.c,0 :: ?ICS__Lib_I2C_12__I2C2_TIMEOUT [4]
0x2ED8	0x00000000 ;?ICS__Lib_I2C_12__I2C2_TIMEOUT+0
; end of ?ICS__Lib_I2C_12__I2C2_TIMEOUT
;__Lib_I2C_12.c,0 :: ?ICS__Lib_I2C_12__I2Cx_TIMEOUT [4]
0x2EDC	0x00000000 ;?ICS__Lib_I2C_12__I2Cx_TIMEOUT+0
; end of ?ICS__Lib_I2C_12__I2Cx_TIMEOUT
;nestHelm.c,0 :: ?ICS_uart_count1 [2]
0x2EE0	0x0000 ;?ICS_uart_count1+0
; end of ?ICS_uart_count1
;nestHelm.c,0 :: ?ICS_uartLength1 [2]
0x2EE2	0x0000 ;?ICS_uartLength1+0
; end of ?ICS_uartLength1
;nestHelm.c,0 :: ?ICS_dir_status [2]
0x2EE4	0x0096 ;?ICS_dir_status+0
; end of ?ICS_dir_status
;__Lib_System_101_102_103.c,431 :: __Lib_System_101_102_103_APBAHBPrescTable [16]
0x2EE6	0x00000000 ;__Lib_System_101_102_103_APBAHBPrescTable+0
0x2EEA	0x04030201 ;__Lib_System_101_102_103_APBAHBPrescTable+4
0x2EEE	0x04030201 ;__Lib_System_101_102_103_APBAHBPrescTable+8
0x2EF2	0x09080706 ;__Lib_System_101_102_103_APBAHBPrescTable+12
; end of __Lib_System_101_102_103_APBAHBPrescTable
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0130      [24]    _I2Cx_Is_Idle
0x0148     [140]    _GPIO_Clk_Enable
0x01D4      [26]    _I2Cx_Get_Status
0x01F0     [144]    __Lib_I2C_12_I2Cx_Wait_For_Idle
0x0280     [500]    _GPIO_Config
0x0474      [36]    _ChekXForEvent
0x0498    [1116]    _I2Cx_Read
0x08F4     [408]    _I2Cx_Write
0x0A8C     [204]    _I2Cx_Start
0x0B58     [152]    __Lib_GPIO_32F10x_GPIO_Configure_Pin
0x0BF0      [12]    _Get_Fosc_kHz
0x0BFC      [36]    _I2C1_Write
0x0C20      [24]    _Delay_1us
0x0C38     [412]    _I2Cx_Init_Advanced
0x0DD4     [168]    _RCC_GetClocksFrequency
0x0E7C      [24]    _I2C1_Start
0x0E94      [30]    __Lib_UART_123_UARTx_Write
0x0EB4      [36]    _I2C1_Read
0x0ED8     [272]    _GPIO_Alternate_Function_Enable
0x0FE8      [28]    _UART1_Write
0x1004     [444]    __Lib_UART_123_UARTx_Init_Advanced
0x11C0      [24]    _Delay_500us
0x11D8     [150]    __Lib_ADC_12_32F10x_10ch_ADCx_Get_Sample
0x1270      [28]    _I2C1_Init_Advanced
0x128C     [296]    __Lib_ADC_12_32F10x_10ch_ADCx_Init
0x13B4      [48]    _EEPROM_24C02_WrSingle
0x13E4      [22]    __Lib_UART_123_UARTx_Read
0x13FC      [60]    _EEPROM_24C02_RdSingle
0x1438     [258]    __Sub_FP
0x153C      [66]    __FloatToSignedIntegral
0x1580     [104]    __Compare_FP
0x15E8     [254]    __Add_FP
0x16E8      [54]    _uart1SendStatus
0x1720      [92]    _eepromSaveLeft
0x1780      [92]    _eepromSaveRight
0x17E0      [56]    _eepromDir
0x1818      [24]    _UART1_Read
0x1830     [204]    _uart1SendCallibration
0x1900      [56]    _resetTouch
0x1938      [80]    __Lib_System_101_102_103_SystemClockSetDefault
0x1988     [138]    __Mul_FP
0x1A14      [40]    _UART1_Init_Advanced
0x1A3C     [100]    _citajeprom
0x1AA0      [20]    ___CC2DW
0x1AB4      [58]    ___FillZeros
0x1AF0      [24]    _GPIO_Analog_Input
0x1B08      [28]    _GPIO_Digital_Output
0x1B24      [32]    _EEPROM_24C02_Init
0x1B44      [52]    _ADC1_Init
0x1B78     [188]    _ADC_Set_Input_Channel
0x1C34     [106]    _Button
0x1CA0      [84]    _InitTimer2
0x1CF4      [28]    _ADC1_Get_Sample
0x1D10     [120]    _NVIC_IntEnable
0x1D88     [164]    __Div_FP
0x1E2C      [44]    __UnsignedIntegralToFloat
0x1E58      [20]    __Lib_System_101_102_103_InitialSetUpFosc
0x1E70    [2448]    _main
0x2800     [240]    __Lib_System_101_102_103_InitialSetUpRCCRCC2
0x28F0    [1160]    _interruptJoystick
0x2D78      [80]    _Timer2_interrupt
0x2DC8       [8]    ___GenExcept
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x20000000       [2]    _leftLimit
0x20000002       [2]    _rightLimit
0x20000004       [2]    _sideDifference
0x20000006       [2]    _gear_status
0x20000008       [2]    _i
0x2000000A       [2]    _j
0x2000000C       [4]    _adc_read1
0x20000010       [4]    _adcSum
0x20000014       [4]    _calAdcAvg
0x20000018       [4]    _fDuty
0x2000001C       [4]    _calDutyF
0x20000020       [2]    _dutyy
0x20000022       [2]    _calDuty
0x20000024       [2]    _dutyOld
0x20000026       [2]    _dutyCounter
0x20000028       [2]    _dutyyy
0x2000002A       [1]    _receive1
0x2000002B       [1]    _dir
0x2000002C       [4]    __Lib_I2C_12__I2C1_TIMEOUT
0x20000030       [4]    __Lib_I2C_12__I2C2_TIMEOUT
0x20000034       [4]    __Lib_I2C_12__I2Cx_TIMEOUT
0x20000038       [2]    _uart_count1
0x2000003A       [2]    _uartLength1
0x2000003C       [2]    _dir_status
0x2000003E     [256]    _data_
0x2000013E       [0]    _countedTimer
0x2000013E       [0]    _control_taken
0x2000013E       [0]    _bitResetTouchSensor
0x2000013E       [0]    _bitControlTaken
0x2000013E       [0]    _bitRespond
0x2000013E       [0]    _bitStart3SecondsCount
0x2000013E       [0]    _startReceivingData1
0x2000013E       [0]    _bitDelay3Seconds
0x2000013F       [0]    _bitCalSend
0x20000140       [2]    _delay3secndsCount
0x20000142     [600]    _adc_array
0x2000039A       [2]    _tmp
0x2000039C       [4]    _adc_avg1
0x200003A0       [4]    _fHalfSideDif
0x200003A4       [4]    _fAdcAvg
0x200003A8       [4]    _fHalfDuty
0x200003AC       [4]    _fHalfDutyAfterFun
0x200003B0       [4]    _dutyF
0x200003B4       [4]    _ADC_Get_Sample_Ptr
0x200003B8       [4]    ___System_CLOCK_IN_KHZ
0x200003BC       [4]    _I2Cx_Timeout_Ptr
0x200003C0       [4]    _I2C1_Timeout_Ptr
0x200003C4       [4]    _I2C2_Timeout_Ptr
0x200003C8       [4]    _I2C_Start_Ptr
0x200003CC       [4]    _I2C_Read_Ptr
0x200003D0       [4]    _I2C_Write_Ptr
0x200003D4       [4]    _UART_Wr_Ptr
0x200003D8       [4]    _UART_Rd_Ptr
0x200003DC       [4]    _UART_Rdy_Ptr
0x200003E0       [4]    _UART_Tx_Idle_Ptr
0x200003E4      [10]    _uart_receive1
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x177C       [4]    __Lib_System_101_102_103_ADCPrescTable
0x2DD0     [108]    __GPIO_MODULE_USART1_PA9_10
0x2E3C     [108]    __GPIO_MODULE_I2C1_PB67
0x2EA8       [2]    ?ICS_leftLimit
0x2EAA       [2]    ?ICS_rightLimit
0x2EAC       [2]    ?ICS_sideDifference
0x2EAE       [2]    ?ICS_gear_status
0x2EB0       [2]    ?ICS_i
0x2EB2       [2]    ?ICS_j
0x2EB4       [4]    ?ICS_adc_read1
0x2EB8       [4]    ?ICS_adcSum
0x2EBC       [4]    ?ICS_calAdcAvg
0x2EC0       [4]    ?ICS_fDuty
0x2EC4       [4]    ?ICS_calDutyF
0x2EC8       [2]    ?ICS_dutyy
0x2ECA       [2]    ?ICS_calDuty
0x2ECC       [2]    ?ICS_dutyOld
0x2ECE       [2]    ?ICS_dutyCounter
0x2ED0       [2]    ?ICS_dutyyy
0x2ED2       [1]    ?ICS_receive1
0x2ED4       [4]    ?ICS__Lib_I2C_12__I2C1_TIMEOUT
0x2ED8       [4]    ?ICS__Lib_I2C_12__I2C2_TIMEOUT
0x2EDC       [4]    ?ICS__Lib_I2C_12__I2Cx_TIMEOUT
0x2EE0       [2]    ?ICS_uart_count1
0x2EE2       [2]    ?ICS_uartLength1
0x2EE4       [2]    ?ICS_dir_status
0x2EE6      [16]    __Lib_System_101_102_103_APBAHBPrescTable
