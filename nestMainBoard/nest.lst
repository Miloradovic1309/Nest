;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 9.8.2021. 08:45:42
;----------------------------------------------

;Address Opcode 	ASM
____SysVT:
0x0000	0xFFFC2001  	537001980
0x0004	0x33410000  	13121
0x0008	0x3F690000  	16233
0x000C	0x3F690000  	16233
0x0010	0x3F690000  	16233
0x0014	0x3F690000  	16233
0x0018	0x3F690000  	16233
0x001C	0x3F690000  	16233
0x0020	0x3F690000  	16233
0x0024	0x3F690000  	16233
0x0028	0x3F690000  	16233
0x002C	0x3F690000  	16233
0x0030	0x3F690000  	16233
0x0034	0x3F690000  	16233
0x0038	0x3F690000  	16233
0x003C	0x3F690000  	16233
0x0040	0x3F690000  	16233
0x0044	0x3F690000  	16233
0x0048	0x3F690000  	16233
0x004C	0x3F690000  	16233
0x0050	0x3F690000  	16233
0x0054	0x3F690000  	16233
0x0058	0x3F690000  	16233
0x005C	0x3F690000  	16233
0x0060	0x3F690000  	16233
0x0064	0x3F690000  	16233
0x0068	0x3F690000  	16233
0x006C	0x3F690000  	16233
0x0070	0x3F690000  	16233
0x0074	0x3F690000  	16233
0x0078	0x3F690000  	16233
0x007C	0x3F690000  	16233
0x0080	0x3F690000  	16233
0x0084	0x3F690000  	16233
0x0088	0x3F690000  	16233
0x008C	0x3F690000  	16233
0x0090	0x3F690000  	16233
0x0094	0x3F690000  	16233
0x0098	0x3F690000  	16233
0x009C	0x3F690000  	16233
0x00A0	0x3F690000  	16233
0x00A4	0x3F690000  	16233
0x00A8	0x3F690000  	16233
0x00AC	0x3F690000  	16233
0x00B0	0x32410000  	12865
0x00B4	0x3F690000  	16233
0x00B8	0x4CE50000  	19685
0x00BC	0x3F690000  	16233
0x00C0	0x3F690000  	16233
0x00C4	0x3F690000  	16233
0x00C8	0x3F690000  	16233
0x00CC	0x3F690000  	16233
0x00D0	0x3F690000  	16233
0x00D4	0x3A9D0000  	15005
0x00D8	0x33250000  	13093
0x00DC	0x43210000  	17185
0x00E0	0x3F690000  	16233
0x00E4	0x3F690000  	16233
0x00E8	0x3F690000  	16233
0x00EC	0x3F690000  	16233
0x00F0	0x3F690000  	16233
0x00F4	0x3F690000  	16233
0x00F8	0x3F690000  	16233
0x00FC	0x3F690000  	16233
0x0100	0x3F690000  	16233
0x0104	0x3F690000  	16233
0x0108	0x3F690000  	16233
0x010C	0x3F690000  	16233
0x0110	0x45450000  	17733
0x0114	0x3F690000  	16233
0x0118	0x3F690000  	16233
0x011C	0x3F690000  	16233
0x0120	0x3F690000  	16233
0x0124	0x3F690000  	16233
0x0128	0x3F690000  	16233
0x012C	0x3F690000  	16233
0x0130	0x3F690000  	16233
0x0134	0x3F690000  	16233
0x0138	0x3F690000  	16233
0x013C	0x3F690000  	16233
0x0140	0x3F690000  	16233
0x0144	0x3F690000  	16233
0x0148	0x3F690000  	16233
0x014C	0x3F690000  	16233
0x0150	0x3F690000  	16233
0x0154	0x3F690000  	16233
0x0158	0x3F690000  	16233
0x015C	0x3AB90000  	15033
0x0160	0x3F690000  	16233
0x0164	0x3F690000  	16233
0x0168	0x3F690000  	16233
0x016C	0x3F690000  	16233
0x0170	0x3F690000  	16233
0x0174	0x3F690000  	16233
0x0178	0x3F690000  	16233
0x017C	0x3F690000  	16233
0x0180	0x3F690000  	16233
0x0184	0x3F690000  	16233
; end of ____SysVT
_main:
;nest.c, 32 :: 		void main() {
0x3340	0xF000FE28  BL	16276
0x3344	0xF000FFD6  BL	17140
0x3348	0xF001FF5C  BL	20996
0x334C	0xF000FE10  BL	16240
0x3350	0xF001FF0A  BL	20840
;nest.c, 35 :: 		FLASH_OPTKEYR = 0x08192A3B;
0x3354	0x4997    LDR	R1, [PC, #604]
0x3356	0x4898    LDR	R0, [PC, #608]
0x3358	0x6001    STR	R1, [R0, #0]
;nest.c, 36 :: 		FLASH_OPTKEYR = 0x4C5D6E7F;
0x335A	0x4998    LDR	R1, [PC, #608]
0x335C	0x4896    LDR	R0, [PC, #600]
0x335E	0x6001    STR	R1, [R0, #0]
;nest.c, 38 :: 		BOR_LEV0_bit = 0;
0x3360	0x2100    MOVS	R1, #0
0x3362	0xB249    SXTB	R1, R1
0x3364	0x4896    LDR	R0, [PC, #600]
0x3366	0x6001    STR	R1, [R0, #0]
;nest.c, 39 :: 		BOR_LEV1_bit = 1;
0x3368	0x2101    MOVS	R1, #1
0x336A	0xB249    SXTB	R1, R1
0x336C	0x4895    LDR	R0, [PC, #596]
0x336E	0x6001    STR	R1, [R0, #0]
;nest.c, 41 :: 		FLASH_OPTCR |= 0x01;
0x3370	0x4895    LDR	R0, [PC, #596]
0x3372	0x6800    LDR	R0, [R0, #0]
0x3374	0xF0400101  ORR	R1, R0, #1
0x3378	0x4893    LDR	R0, [PC, #588]
0x337A	0x6001    STR	R1, [R0, #0]
;nest.c, 42 :: 		FLASH_OPTCR |= 0x02;
0x337C	0x4892    LDR	R0, [PC, #584]
0x337E	0x6800    LDR	R0, [R0, #0]
0x3380	0xF0400102  ORR	R1, R0, #2
0x3384	0x4890    LDR	R0, [PC, #576]
0x3386	0x6001    STR	R1, [R0, #0]
;nest.c, 46 :: 		UART6_Init_Advanced(115200, _UART_8_BIT_DATA, _UART_NOPARITY, _UART_ONE_STOPBIT, &_GPIO_MODULE_USART6_PC67);
0x3388	0x4890    LDR	R0, [PC, #576]
0x338A	0xB401    PUSH	(R0)
0x338C	0xF2400300  MOVW	R3, #0
0x3390	0xF2400200  MOVW	R2, #0
0x3394	0xF2400100  MOVW	R1, #0
0x3398	0xF44F30E1  MOV	R0, #115200
0x339C	0xF7FFF9A6  BL	_UART6_Init_Advanced+0
0x33A0	0xB001    ADD	SP, SP, #4
;nest.c, 47 :: 		USART6_CR1bits.RXNEIE = 1;       // enable uart rx interrupt
0x33A2	0x2101    MOVS	R1, #1
0x33A4	0xB249    SXTB	R1, R1
0x33A6	0x488A    LDR	R0, [PC, #552]
0x33A8	0x6001    STR	R1, [R0, #0]
;nest.c, 48 :: 		NVIC_IntEnable(IVT_INT_USART6);  // enable interrupt vector
0x33AA	0xF2400057  MOVW	R0, #87
0x33AE	0xF7FFF9B1  BL	_NVIC_IntEnable+0
;nest.c, 52 :: 		UART4_Init_Advanced(115200, _UART_8_BIT_DATA, _UART_NOPARITY, _UART_ONE_STOPBIT, &_GPIO_MODULE_UART4_PA01 );
0x33B2	0x4888    LDR	R0, [PC, #544]
0x33B4	0xB401    PUSH	(R0)
0x33B6	0xF2400300  MOVW	R3, #0
0x33BA	0xF2400200  MOVW	R2, #0
0x33BE	0xF2400100  MOVW	R1, #0
0x33C2	0xF44F30E1  MOV	R0, #115200
0x33C6	0xF7FFFA0D  BL	_UART4_Init_Advanced+0
0x33CA	0xB001    ADD	SP, SP, #4
;nest.c, 53 :: 		UART4_CR1bits.RXNEIE = 1;       // enable uart rx interrupt
0x33CC	0x2101    MOVS	R1, #1
0x33CE	0xB249    SXTB	R1, R1
0x33D0	0x4881    LDR	R0, [PC, #516]
0x33D2	0x6001    STR	R1, [R0, #0]
;nest.c, 54 :: 		NVIC_IntEnable(IVT_INT_UART4);  // enable interrupt vector
0x33D4	0xF2400044  MOVW	R0, #68
0x33D8	0xF7FFF99C  BL	_NVIC_IntEnable+0
;nest.c, 64 :: 		UART1_Init_Advanced(38400, _UART_8_BIT_DATA, _UART_NOPARITY, _UART_ONE_STOPBIT, &_GPIO_MODULE_USART1_PA9_10);
0x33DC	0x487F    LDR	R0, [PC, #508]
0x33DE	0xB401    PUSH	(R0)
0x33E0	0xF2400300  MOVW	R3, #0
0x33E4	0xF2400200  MOVW	R2, #0
0x33E8	0xF2400100  MOVW	R1, #0
0x33EC	0xF2496000  MOVW	R0, #38400
0x33F0	0xF7FFFA0C  BL	_UART1_Init_Advanced+0
0x33F4	0xB001    ADD	SP, SP, #4
;nest.c, 70 :: 		UART3_Init_Advanced(115200, _UART_8_BIT_DATA, _UART_NOPARITY, _UART_ONE_STOPBIT, &_GPIO_MODULE_USART3_PB10_11);
0x33F6	0x487A    LDR	R0, [PC, #488]
0x33F8	0xB401    PUSH	(R0)
0x33FA	0xF2400300  MOVW	R3, #0
0x33FE	0xF2400200  MOVW	R2, #0
0x3402	0xF2400100  MOVW	R1, #0
0x3406	0xF44F30E1  MOV	R0, #115200
0x340A	0xF7FFF9C9  BL	_UART3_Init_Advanced+0
0x340E	0xB001    ADD	SP, SP, #4
;nest.c, 71 :: 		USART3_CR1bits.RXNEIE = 1;       // enable uart rx interrupt
0x3410	0x2101    MOVS	R1, #1
0x3412	0xB249    SXTB	R1, R1
0x3414	0x4873    LDR	R0, [PC, #460]
0x3416	0x6001    STR	R1, [R0, #0]
;nest.c, 72 :: 		NVIC_IntEnable(IVT_INT_USART3);  // enable interrupt vector
0x3418	0xF2400037  MOVW	R0, #55
0x341C	0xF7FFF97A  BL	_NVIC_IntEnable+0
;nest.c, 76 :: 		I2C1_Init_Advanced(100000, &_GPIO_MODULE_I2C1_PB67);
0x3420	0x4971    LDR	R1, [PC, #452]
0x3422	0x4872    LDR	R0, [PC, #456]
0x3424	0xF7FFF9D0  BL	_I2C1_Init_Advanced+0
;nest.c, 80 :: 		GPIO_Digital_Output(&GPIOE_BASE, _GPIO_PINMASK_15);                           // UART3_RXTX
0x3428	0xF2480100  MOVW	R1, #32768
0x342C	0x4870    LDR	R0, [PC, #448]
0x342E	0xF7FFF82D  BL	_GPIO_Digital_Output+0
;nest.c, 81 :: 		GPIO_Digital_Output(&GPIOA_BASE, _GPIO_PINMASK_8);                            // UART1_RXTX
0x3432	0xF2401100  MOVW	R1, #256
0x3436	0x486F    LDR	R0, [PC, #444]
0x3438	0xF7FFF828  BL	_GPIO_Digital_Output+0
;nest.c, 82 :: 		GPIO_Digital_Output(&GPIOB_BASE, _GPIO_PINMASK_4);                            // UART4_RXTX
0x343C	0xF2400110  MOVW	R1, #16
0x3440	0x486D    LDR	R0, [PC, #436]
0x3442	0xF7FFF823  BL	_GPIO_Digital_Output+0
;nest.c, 83 :: 		GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_8);                            // UART6_RXTX
0x3446	0xF2401100  MOVW	R1, #256
0x344A	0x486C    LDR	R0, [PC, #432]
0x344C	0xF7FFF81E  BL	_GPIO_Digital_Output+0
;nest.c, 90 :: 		GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_11);                           // BUZ
0x3450	0xF6400100  MOVW	R1, #2048
0x3454	0x486A    LDR	R0, [PC, #424]
0x3456	0xF7FFF819  BL	_GPIO_Digital_Output+0
;nest.c, 91 :: 		GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_3 | _GPIO_PINMASK_4);          // LIGHT_NAVIGATION, LIGHT_INTERIOR
0x345A	0xF2400118  MOVW	R1, #24
0x345E	0x4868    LDR	R0, [PC, #416]
0x3460	0xF7FFF814  BL	_GPIO_Digital_Output+0
;nest.c, 93 :: 		| _GPIO_PINMASK_5);                          // ACCUMULATORS_OFF
0x3464	0xF24001E0  MOVW	R1, #224
;nest.c, 92 :: 		GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_7 | _GPIO_PINMASK_6            // ACCUMULATOR1_ON, ACCUMULATOR2_ON
0x3468	0x4865    LDR	R0, [PC, #404]
;nest.c, 93 :: 		| _GPIO_PINMASK_5);                          // ACCUMULATORS_OFF
0x346A	0xF7FFF80F  BL	_GPIO_Digital_Output+0
;nest.c, 96 :: 		_GPIO_CFG_MODE_INPUT | _GPIO_CFG_PULL_DOWN);
0x346E	0xF44F7281  MOV	R2, #258
;nest.c, 95 :: 		GPIO_Config(&GPIOA_BASE, _GPIO_PINMASK_6,                                     // ACCUMULATOR_SENSE
0x3472	0xF2400140  MOVW	R1, #64
0x3476	0x485F    LDR	R0, [PC, #380]
;nest.c, 96 :: 		_GPIO_CFG_MODE_INPUT | _GPIO_CFG_PULL_DOWN);
0x3478	0xF7FCFEDA  BL	_GPIO_Config+0
;nest.c, 98 :: 		GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_15 | _GPIO_PINMASK_14);        // LORA_M0, LORA_M1
0x347C	0xF24C0100  MOVW	R1, #49152
0x3480	0x485F    LDR	R0, [PC, #380]
0x3482	0xF7FFF803  BL	_GPIO_Digital_Output+0
;nest.c, 101 :: 		_GPIO_CFG_MODE_INPUT | _GPIO_CFG_PULL_UP);
0x3486	0xF04F0282  MOV	R2, #130
;nest.c, 100 :: 		GPIO_Config(&GPIOD_BASE, _GPIO_PINMASK_13,                                    // LORA_AUX
0x348A	0xF2420100  MOVW	R1, #8192
0x348E	0x485C    LDR	R0, [PC, #368]
;nest.c, 101 :: 		_GPIO_CFG_MODE_INPUT | _GPIO_CFG_PULL_UP);
0x3490	0xF7FCFECE  BL	_GPIO_Config+0
;nest.c, 103 :: 		GPIO_Digital_Output(&GPIOB_BASE, _GPIO_PINMASK_14 | _GPIO_PINMASK_15);        // LED1, LED2
0x3494	0xF24C0100  MOVW	R1, #49152
0x3498	0x4857    LDR	R0, [PC, #348]
0x349A	0xF7FEFFF7  BL	_GPIO_Digital_Output+0
;nest.c, 104 :: 		GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_8 | _GPIO_PINMASK_9 | _GPIO_PINMASK_10);        // LED3, LED4, LED5
0x349E	0xF2407100  MOVW	R1, #1792
0x34A2	0x4857    LDR	R0, [PC, #348]
0x34A4	0xF7FEFFF2  BL	_GPIO_Digital_Output+0
;nest.c, 108 :: 		GPIO_Digital_Output(&GPIOA_BASE, _GPIO_PINMASK_7);
0x34A8	0xF2400180  MOVW	R1, #128
0x34AC	0x4851    LDR	R0, [PC, #324]
0x34AE	0xF7FEFFED  BL	_GPIO_Digital_Output+0
;nest.c, 109 :: 		pwm_ratio = PWM_TIM3_Init(pwm_frequency);
0x34B2	0x4854    LDR	R0, [PC, #336]
0x34B4	0x6800    LDR	R0, [R0, #0]
0x34B6	0xF7FEFFF7  BL	_PWM_TIM3_Init+0
0x34BA	0x4953    LDR	R1, [PC, #332]
0x34BC	0x8008    STRH	R0, [R1, #0]
;nest.c, 110 :: 		pwm_duty = ((unsigned int)((double)(((double)(((double)pwm_ratio) * pwm_percent)) / ((double)100))));
0x34BE	0xEE000A90  VMOV	S1, R0
0x34C2	0xEEF80A60  VCVT.F32.U32	S1, S1
0x34C6	0x4851    LDR	R0, [PC, #324]
0x34C8	0xED100A00  VLDR.32	S0, [R0, #0]
0x34CC	0xEE600A80  VMUL.F32	S1, S1, S0
0x34D0	0x484F    LDR	R0, [PC, #316]
0x34D2	0xEE000A10  VMOV	S0, R0
0x34D6	0xEE800A80  VDIV.F32	S0, S1, S0
0x34DA	0xEEBC0A40  VCVT.U32.F32	S0, S0
0x34DE	0xEE101A10  VMOV	R1, S0
0x34E2	0xB289    UXTH	R1, R1
0x34E4	0x484B    LDR	R0, [PC, #300]
0x34E6	0x8001    STRH	R1, [R0, #0]
;nest.c, 111 :: 		PWM_TIM3_Set_Duty(pwm_duty, _PWM_NON_INVERTED, _PWM_CHANNEL2);
0x34E8	0xB288    UXTH	R0, R1
0x34EA	0x2201    MOVS	R2, #1
0x34EC	0x2100    MOVS	R1, #0
0x34EE	0xF7FEFFAF  BL	_PWM_TIM3_Set_Duty+0
;nest.c, 112 :: 		PWM_TIM3_Start(_PWM_CHANNEL2, &_GPIO_MODULE_TIM3_CH2_PA7);
0x34F2	0x4949    LDR	R1, [PC, #292]
0x34F4	0x2001    MOVS	R0, #1
0x34F6	0xF7FEFFBB  BL	_PWM_TIM3_Start+0
;nest.c, 119 :: 		GPIO_Analog_Input(&GPIOA_IDR, _GPIO_PINMASK_5);
0x34FA	0xF2400120  MOVW	R1, #32
0x34FE	0x4847    LDR	R0, [PC, #284]
0x3500	0xF7FFF8B0  BL	_GPIO_Analog_Input+0
;nest.c, 120 :: 		GPIO_Analog_Input(&GPIOA_IDR, _GPIO_PINMASK_4);
0x3504	0xF2400110  MOVW	R1, #16
0x3508	0x4844    LDR	R0, [PC, #272]
0x350A	0xF7FFF8AB  BL	_GPIO_Analog_Input+0
;nest.c, 121 :: 		ADC2_Init();
0x350E	0xF7FFF8B5  BL	_ADC2_Init+0
;nest.c, 148 :: 		uart4Battery1Level0();
0x3512	0xF7FEFFD7  BL	_uart4Battery1Level0+0
;nest.c, 149 :: 		uart4Battery2Level0();
0x3516	0xF7FFF83D  BL	_uart4Battery2Level0+0
;nest.c, 150 :: 		uart4Battery1TurnedOff();
0x351A	0xF7FFF98B  BL	_uart4Battery1TurnedOff+0
;nest.c, 151 :: 		uart4Battery2TurnedOff();
0x351E	0xF7FFFD29  BL	_uart4Battery2TurnedOff+0
;nest.c, 152 :: 		uart4InteriorLightTurnedOff();
0x3522	0xF7FFFD47  BL	_uart4InteriorLightTurnedOff+0
;nest.c, 153 :: 		uart4NavigationLightTurnedOff();
0x3526	0xF7FFFD65  BL	_uart4NavigationLightTurnedOff+0
;nest.c, 154 :: 		uart4LightingTurnedOff();
0x352A	0xF7FFFD03  BL	_uart4LightingTurnedOff+0
;nest.c, 157 :: 		LIGHT_NAVIGATION = 0;
0x352E	0x2200    MOVS	R2, #0
0x3530	0xB252    SXTB	R2, R2
0x3532	0x483B    LDR	R0, [PC, #236]
0x3534	0x6002    STR	R2, [R0, #0]
;nest.c, 158 :: 		LIGHT_INTERIOR = 0;
0x3536	0x483B    LDR	R0, [PC, #236]
0x3538	0x6002    STR	R2, [R0, #0]
;nest.c, 170 :: 		countedTimer = 0;
0x353A	0x483B    LDR	R0, [PC, #236]
0x353C	0x6002    STR	R2, [R0, #0]
;nest.c, 172 :: 		bitDelay3Seconds = 0;
0x353E	0x483B    LDR	R0, [PC, #236]
0x3540	0x6002    STR	R2, [R0, #0]
;nest.c, 173 :: 		bitStart3SecondsCount = 0;
0x3542	0x483B    LDR	R0, [PC, #236]
0x3544	0x6002    STR	R2, [R0, #0]
;nest.c, 174 :: 		battery_change = 0;
0x3546	0x483B    LDR	R0, [PC, #236]
0x3548	0x6002    STR	R2, [R0, #0]
;nest.c, 175 :: 		battery_change_continue = 0;
0x354A	0x483B    LDR	R0, [PC, #236]
0x354C	0x6002    STR	R2, [R0, #0]
;nest.c, 176 :: 		oldStateInteriorLight = 0;
0x354E	0x483B    LDR	R0, [PC, #236]
0x3550	0x6002    STR	R2, [R0, #0]
;nest.c, 177 :: 		oldStateNavigationLight = 0;
0x3552	0x483B    LDR	R0, [PC, #236]
0x3554	0x6002    STR	R2, [R0, #0]
;nest.c, 178 :: 		battery_chosen = 0;
0x3556	0x2100    MOVS	R1, #0
0x3558	0xB209    SXTH	R1, R1
0x355A	0x483A    LDR	R0, [PC, #232]
0x355C	0x8001    STRH	R1, [R0, #0]
;nest.c, 179 :: 		battery_chosen_old = 0;
0x355E	0x2100    MOVS	R1, #0
0x3560	0xB209    SXTH	R1, R1
0x3562	0x4839    LDR	R0, [PC, #228]
0x3564	0x8001    STRH	R1, [R0, #0]
;nest.c, 180 :: 		oldStateBattery1 = 0;
0x3566	0x4839    LDR	R0, [PC, #228]
0x3568	0x6002    STR	R2, [R0, #0]
;nest.c, 181 :: 		oldStateBattery2 = 0;
0x356A	0x4839    LDR	R0, [PC, #228]
0x356C	0x6002    STR	R2, [R0, #0]
;nest.c, 182 :: 		battry_percentage_check = 0;
0x356E	0x4839    LDR	R0, [PC, #228]
0x3570	0x6002    STR	R2, [R0, #0]
;nest.c, 183 :: 		control_taken = 0;
0x3572	0x4839    LDR	R0, [PC, #228]
0x3574	0x6002    STR	R2, [R0, #0]
;nest.c, 184 :: 		status_asked = 0;
0x3576	0x4839    LDR	R0, [PC, #228]
0x3578	0x6002    STR	R2, [R0, #0]
;nest.c, 186 :: 		startReceivingData6 = 0;
0x357A	0x4839    LDR	R0, [PC, #228]
0x357C	0x6002    STR	R2, [R0, #0]
;nest.c, 187 :: 		receivedCheckStatus = 0;
0x357E	0x4839    LDR	R0, [PC, #228]
0x3580	0x6002    STR	R2, [R0, #0]
;nest.c, 189 :: 		bitBattery1Change = 0;
0x3582	0x4839    LDR	R0, [PC, #228]
0x3584	0x6002    STR	R2, [R0, #0]
;nest.c, 190 :: 		bitBattery2Change = 0;
0x3586	0x4839    LDR	R0, [PC, #228]
0x3588	0x6002    STR	R2, [R0, #0]
;nest.c, 192 :: 		bitCheckJoystick = 0;
0x358A	0x4839    LDR	R0, [PC, #228]
0x358C	0x6002    STR	R2, [R0, #0]
;nest.c, 194 :: 		startReceivingData4 = 0;
0x358E	0x4839    LDR	R0, [PC, #228]
0x3590	0x6002    STR	R2, [R0, #0]
;nest.c, 195 :: 		startReceivingData3 = 0;
0x3592	0x4839    LDR	R0, [PC, #228]
0x3594	0x6002    STR	R2, [R0, #0]
;nest.c, 197 :: 		resetTouchSensor = 0;
0x3596	0x4839    LDR	R0, [PC, #228]
0x3598	0x6002    STR	R2, [R0, #0]
;nest.c, 198 :: 		resetedTouchSensor = 0;
0x359A	0x4839    LDR	R0, [PC, #228]
0x359C	0x6002    STR	R2, [R0, #0]
;nest.c, 200 :: 		bitBatteryChangeBlockCounter = 0;
0x359E	0x4839    LDR	R0, [PC, #228]
0x35A0	0x6002    STR	R2, [R0, #0]
;nest.c, 205 :: 		ACCUMULATORS_OFF = 0;
0x35A2	0x4839    LDR	R0, [PC, #228]
0x35A4	0x6002    STR	R2, [R0, #0]
;nest.c, 206 :: 		ACCUMULATOR1_ON = 0;
0x35A6	0x4839    LDR	R0, [PC, #228]
0x35A8	0x6002    STR	R2, [R0, #0]
;nest.c, 207 :: 		ACCUMULATOR2_ON = 0;
0x35AA	0x4839    LDR	R0, [PC, #228]
0x35AC	0x6002    STR	R2, [R0, #0]
;nest.c, 211 :: 		LORA_M0 = 0;
0x35AE	0x4839    LDR	R0, [PC, #228]
0x35B0	0xF000B872  B	#228
0x35B4	0x2A3B0819  	#135866939
0x35B8	0x3C084002  	FLASH_OPTKEYR+0
0x35BC	0x6E7F4C5D  	#1281191551
0x35C0	0x82884247  	BOR_LEV0_bit+0
0x35C4	0x828C4247  	BOR_LEV1_bit+0
0x35C8	0x3C144002  	FLASH_OPTCR+0
0x35CC	0x501C0000  	__GPIO_MODULE_USART6_PC67+0
0x35D0	0x81944222  	USART6_CR1bits+0
0x35D4	0x50880000  	__GPIO_MODULE_UART4_PA01+0
0x35D8	0x81944209  	UART4_CR1bits+0
0x35DC	0x50F40000  	__GPIO_MODULE_USART1_PA9_10+0
0x35E0	0x4FB00000  	__GPIO_MODULE_USART3_PB10_11+0
0x35E4	0x01944209  	USART3_CR1bits+0
0x35E8	0x4ED80000  	__GPIO_MODULE_I2C1_PB67+0
0x35EC	0x86A00001  	#100000
0x35F0	0x10004002  	GPIOE_BASE+0
0x35F4	0x00004002  	GPIOA_BASE+0
0x35F8	0x04004002  	GPIOB_BASE+0
0x35FC	0x08004002  	GPIOC_BASE+0
0x3600	0x0C004002  	GPIOD_BASE+0
0x3604	0x00402000  	_pwm_frequency+0
0x3608	0x0A002000  	_pwm_ratio+0
0x360C	0x00442000  	_pwm_percent+0
0x3610	0x000042C8  	#1120403456
0x3614	0x0A022000  	_pwm_duty+0
0x3618	0x4F440000  	__GPIO_MODULE_TIM3_CH2_PA7+0
0x361C	0x00104002  	GPIOA_IDR+0
0x3620	0x828C4241  	GPIOD_ODR+0
0x3624	0x82904241  	GPIOD_ODR+0
0x3628	0x0FB02200  	_countedTimer+0
0x362C	0x0FB42200  	_bitDelay3Seconds+0
0x3630	0x0FB82200  	_bitStart3SecondsCount+0
0x3634	0x0FA02200  	_battery_change+0
0x3638	0x0FA42200  	_battery_change_continue+0
0x363C	0x0FBC2200  	_oldStateInteriorLight+0
0x3640	0x40802201  	_oldStateNavigationLight+0
0x3644	0x00002000  	_battery_chosen+0
0x3648	0x00022000  	_battery_chosen_old+0
0x364C	0x40842201  	_oldStateBattery1+0
0x3650	0x40882201  	_oldStateBattery2+0
0x3654	0x0FAC2200  	_battry_percentage_check+0
0x3658	0x408C2201  	_control_taken+0
0x365C	0x40902201  	_status_asked+0
0x3660	0x40942201  	_startReceivingData6+0
0x3664	0x40982201  	_receivedCheckStatus+0
0x3668	0x409C2201  	_bitBattery1Change+0
0x366C	0x40A02201  	_bitBattery2Change+0
0x3670	0x40A42201  	_bitCheckJoystick+0
0x3674	0x40A82201  	_startReceivingData4+0
0x3678	0x40AC2201  	_startReceivingData3+0
0x367C	0x40B02201  	_resetTouchSensor+0
0x3680	0x40B42201  	_resetedTouchSensor+0
0x3684	0x0FA82200  	_bitBatteryChangeBlockCounter+0
0x3688	0x82944241  	GPIOD_ODR+0
0x368C	0x829C4241  	GPIOD_ODR+0
0x3690	0x82984241  	GPIOD_ODR+0
0x3694	0x82BC4241  	GPIOD_ODR+0
0x3698	0x6002    STR	R2, [R0, #0]
;nest.c, 212 :: 		LORA_M1 = 0;
0x369A	0x488D    LDR	R0, [PC, #564]
0x369C	0x6002    STR	R2, [R0, #0]
;nest.c, 214 :: 		navLightOff = 0;
0x369E	0x488D    LDR	R0, [PC, #564]
0x36A0	0x6002    STR	R2, [R0, #0]
;nest.c, 215 :: 		navLightOn = 0;
0x36A2	0x488D    LDR	R0, [PC, #564]
0x36A4	0x6002    STR	R2, [R0, #0]
;nest.c, 216 :: 		intLightOn = 0;
0x36A6	0x488D    LDR	R0, [PC, #564]
0x36A8	0x6002    STR	R2, [R0, #0]
;nest.c, 217 :: 		intLightOff = 0;
0x36AA	0x488D    LDR	R0, [PC, #564]
0x36AC	0x6002    STR	R2, [R0, #0]
;nest.c, 218 :: 		bat1On = 0;
0x36AE	0x488D    LDR	R0, [PC, #564]
0x36B0	0x6002    STR	R2, [R0, #0]
;nest.c, 219 :: 		bat1Off = 0;
0x36B2	0x488D    LDR	R0, [PC, #564]
0x36B4	0x6002    STR	R2, [R0, #0]
;nest.c, 220 :: 		bat2On = 0;
0x36B6	0x488D    LDR	R0, [PC, #564]
0x36B8	0x6002    STR	R2, [R0, #0]
;nest.c, 221 :: 		bat2Off = 0;
0x36BA	0x488D    LDR	R0, [PC, #564]
0x36BC	0x6002    STR	R2, [R0, #0]
;nest.c, 223 :: 		bitCheckStatusJoystick = 0;
0x36BE	0x488D    LDR	R0, [PC, #564]
0x36C0	0x6002    STR	R2, [R0, #0]
;nest.c, 224 :: 		bitCheckStatusDisplay = 0;
0x36C2	0x488D    LDR	R0, [PC, #564]
0x36C4	0x6002    STR	R2, [R0, #0]
;nest.c, 226 :: 		countedTimer2 = 0;
0x36C6	0x488D    LDR	R0, [PC, #564]
0x36C8	0x6002    STR	R2, [R0, #0]
;nest.c, 228 :: 		controlWasTaken = 0;
0x36CA	0x488D    LDR	R0, [PC, #564]
0x36CC	0x6002    STR	R2, [R0, #0]
;nest.c, 229 :: 		stopGearBit = 0;
0x36CE	0x488D    LDR	R0, [PC, #564]
0x36D0	0x6002    STR	R2, [R0, #0]
;nest.c, 230 :: 		bitCheckIsItStoppedGear = 0;
0x36D2	0x488D    LDR	R0, [PC, #564]
0x36D4	0x6002    STR	R2, [R0, #0]
;nest.c, 243 :: 		LED1 = 0;
0x36D6	0x488D    LDR	R0, [PC, #564]
0x36D8	0x6002    STR	R2, [R0, #0]
;nest.c, 244 :: 		LED2 = 0;
0x36DA	0x488D    LDR	R0, [PC, #564]
0x36DC	0x6002    STR	R2, [R0, #0]
;nest.c, 245 :: 		LED3 = 0;
0x36DE	0x488D    LDR	R0, [PC, #564]
0x36E0	0x6002    STR	R2, [R0, #0]
;nest.c, 246 :: 		LED4 = 0;
0x36E2	0x488D    LDR	R0, [PC, #564]
0x36E4	0x6002    STR	R2, [R0, #0]
;nest.c, 247 :: 		LED5 = 0;
0x36E6	0x488D    LDR	R0, [PC, #564]
0x36E8	0x6002    STR	R2, [R0, #0]
;nest.c, 248 :: 		Delay_ms(500);
0x36EA	0xF64367FE  MOVW	R7, #16126
0x36EE	0xF2C017AB  MOVT	R7, #427
L_main0:
0x36F2	0x1E7F    SUBS	R7, R7, #1
0x36F4	0xD1FD    BNE	L_main0
0x36F6	0xBF00    NOP
0x36F8	0xBF00    NOP
0x36FA	0xBF00    NOP
0x36FC	0xBF00    NOP
0x36FE	0xBF00    NOP
;nest.c, 250 :: 		battery_chosen = 0;
0x3700	0x2100    MOVS	R1, #0
0x3702	0xB209    SXTH	R1, R1
0x3704	0x4886    LDR	R0, [PC, #536]
0x3706	0x8001    STRH	R1, [R0, #0]
;nest.c, 251 :: 		battery_chosen_old = 3;
0x3708	0x2103    MOVS	R1, #3
0x370A	0xB209    SXTH	R1, R1
0x370C	0x4885    LDR	R0, [PC, #532]
0x370E	0x8001    STRH	R1, [R0, #0]
;nest.c, 252 :: 		battry_percentage_check = 1;
0x3710	0x2101    MOVS	R1, #1
0x3712	0xB249    SXTB	R1, R1
0x3714	0x4884    LDR	R0, [PC, #528]
0x3716	0x6001    STR	R1, [R0, #0]
;nest.c, 254 :: 		InitTimer2();
0x3718	0xF7FFFD3E  BL	_InitTimer2+0
;nest.c, 255 :: 		InitTimer4();
0x371C	0xF7FFFD66  BL	_InitTimer4+0
;nest.c, 275 :: 		beingControlledByMobile = 1;
0x3720	0x2101    MOVS	R1, #1
0x3722	0xB249    SXTB	R1, R1
0x3724	0x4881    LDR	R0, [PC, #516]
0x3726	0x6001    STR	R1, [R0, #0]
;nest.c, 276 :: 		velocity_mode_new = VELOCITY_RABBIT;
0x3728	0x2101    MOVS	R1, #1
0x372A	0x4881    LDR	R0, [PC, #516]
0x372C	0x8001    STRH	R1, [R0, #0]
;nest.c, 277 :: 		velocity_mode = VELOCITY_RABBIT;
0x372E	0x2101    MOVS	R1, #1
0x3730	0x4880    LDR	R0, [PC, #512]
0x3732	0x8001    STRH	R1, [R0, #0]
;nest.c, 283 :: 		Delay_ms(700);
0x3734	0xF24247FE  MOVW	R7, #9470
0x3738	0xF2C02756  MOVT	R7, #598
0x373C	0xBF00    NOP
0x373E	0xBF00    NOP
L_main2:
0x3740	0x1E7F    SUBS	R7, R7, #1
0x3742	0xD1FD    BNE	L_main2
0x3744	0xBF00    NOP
0x3746	0xBF00    NOP
0x3748	0xBF00    NOP
;nest.c, 284 :: 		change_velocity_mode(velocity_mode);
0x374A	0x487A    LDR	R0, [PC, #488]
0x374C	0x8800    LDRH	R0, [R0, #0]
0x374E	0xF7FFFC71  BL	_change_velocity_mode+0
;nest.c, 285 :: 		Delay_ms(50);
0x3752	0xF64B177E  MOVW	R7, #47486
0x3756	0xF2C0072A  MOVT	R7, #42
L_main4:
0x375A	0x1E7F    SUBS	R7, R7, #1
0x375C	0xD1FD    BNE	L_main4
0x375E	0xBF00    NOP
0x3760	0xBF00    NOP
0x3762	0xBF00    NOP
0x3764	0xBF00    NOP
0x3766	0xBF00    NOP
;nest.c, 288 :: 		setup_IWDG();
0x3768	0xF7FFFCFC  BL	_setup_IWDG+0
;nest.c, 290 :: 		while(1){
L_main6:
;nest.c, 296 :: 		batteryChangeState();
0x376C	0xF7FFF902  BL	_batteryChangeState+0
;nest.c, 297 :: 		lightControlSwitches();
0x3770	0xF7FFFBB6  BL	_lightControlSwitches+0
;nest.c, 298 :: 		batteryControlSwitches();
0x3774	0xF7FFF87E  BL	_batteryControlSwitches+0
;nest.c, 299 :: 		gearVelocityMotorSpeedControl();
0x3778	0xF7FFFAAC  BL	_gearVelocityMotorSpeedControl+0
;nest.c, 300 :: 		directionWheelADC();
0x377C	0xF7FFFB1E  BL	_directionWheelADC+0
;nest.c, 301 :: 		batteryLavelMeasure();
0x3780	0xF7FEF9BA  BL	_batteryLavelMeasure+0
;nest.c, 303 :: 		LED5 = ACCUMULATOR_SENSE;
0x3784	0x486C    LDR	R0, [PC, #432]
0x3786	0x6801    LDR	R1, [R0, #0]
0x3788	0x4864    LDR	R0, [PC, #400]
0x378A	0x6001    STR	R1, [R0, #0]
;nest.c, 305 :: 		if(control_taken){
0x378C	0x496B    LDR	R1, [PC, #428]
0x378E	0x6808    LDR	R0, [R1, #0]
0x3790	0xB118    CBZ	R0, L_main8
;nest.c, 306 :: 		controlWasTaken = 1;
0x3792	0x2101    MOVS	R1, #1
0x3794	0xB249    SXTB	R1, R1
0x3796	0x485A    LDR	R0, [PC, #360]
0x3798	0x6001    STR	R1, [R0, #0]
;nest.c, 307 :: 		}
L_main8:
;nest.c, 309 :: 		if(controlWasTaken && !control_taken){
0x379A	0x4959    LDR	R1, [PC, #356]
0x379C	0x6808    LDR	R0, [R1, #0]
0x379E	0xB170    CBZ	R0, L__main47
0x37A0	0x4966    LDR	R1, [PC, #408]
0x37A2	0x6808    LDR	R0, [R1, #0]
0x37A4	0xB958    CBNZ	R0, L__main46
L__main45:
;nest.c, 310 :: 		controlWasTaken = 0;
0x37A6	0x2100    MOVS	R1, #0
0x37A8	0xB249    SXTB	R1, R1
0x37AA	0x4855    LDR	R0, [PC, #340]
0x37AC	0x6001    STR	R1, [R0, #0]
;nest.c, 311 :: 		if(gear_status != 4){
0x37AE	0x4864    LDR	R0, [PC, #400]
0x37B0	0x8800    LDRH	R0, [R0, #0]
0x37B2	0x2804    CMP	R0, #4
0x37B4	0xD003    BEQ	L_main12
;nest.c, 312 :: 		stopGearBit = 1;
0x37B6	0x2101    MOVS	R1, #1
0x37B8	0xB249    SXTB	R1, R1
0x37BA	0x4852    LDR	R0, [PC, #328]
0x37BC	0x6001    STR	R1, [R0, #0]
;nest.c, 313 :: 		}
L_main12:
;nest.c, 309 :: 		if(controlWasTaken && !control_taken){
L__main47:
L__main46:
;nest.c, 319 :: 		if(receivedCheckStatus){
0x37BE	0x4961    LDR	R1, [PC, #388]
0x37C0	0x6808    LDR	R0, [R1, #0]
0x37C2	0xB128    CBZ	R0, L_main13
;nest.c, 320 :: 		receivedCheckStatus = 0;
0x37C4	0x2100    MOVS	R1, #0
0x37C6	0xB249    SXTB	R1, R1
0x37C8	0x485E    LDR	R0, [PC, #376]
0x37CA	0x6001    STR	R1, [R0, #0]
;nest.c, 321 :: 		uartSendStatusToStation();
0x37CC	0xF7FEFD3A  BL	_uartSendStatusToStation+0
;nest.c, 323 :: 		}
L_main13:
;nest.c, 325 :: 		if(control_taken){boatControlTaken = 0x01;}
0x37D0	0x495A    LDR	R1, [PC, #360]
0x37D2	0x6808    LDR	R0, [R1, #0]
0x37D4	0xB118    CBZ	R0, L_main14
0x37D6	0x2101    MOVS	R1, #1
0x37D8	0x485B    LDR	R0, [PC, #364]
0x37DA	0x7001    STRB	R1, [R0, #0]
0x37DC	0xE002    B	L_main15
L_main14:
;nest.c, 326 :: 		else{boatControlTaken = 0x00;}
0x37DE	0x2100    MOVS	R1, #0
0x37E0	0x4859    LDR	R0, [PC, #356]
0x37E2	0x7001    STRB	R1, [R0, #0]
L_main15:
;nest.c, 328 :: 		if(LIGHT_INTERIOR){boatInteriorLight = 0x02; LED2 = 1;}
0x37E4	0x4859    LDR	R0, [PC, #356]
0x37E6	0x6800    LDR	R0, [R0, #0]
0x37E8	0xB138    CBZ	R0, L_main16
0x37EA	0x2102    MOVS	R1, #2
0x37EC	0x4858    LDR	R0, [PC, #352]
0x37EE	0x7001    STRB	R1, [R0, #0]
0x37F0	0x2101    MOVS	R1, #1
0x37F2	0xB249    SXTB	R1, R1
0x37F4	0x4846    LDR	R0, [PC, #280]
0x37F6	0x6001    STR	R1, [R0, #0]
0x37F8	0xE006    B	L_main17
L_main16:
;nest.c, 329 :: 		else{boatInteriorLight = 0x00; LED2 = 0;}
0x37FA	0x2100    MOVS	R1, #0
0x37FC	0x4854    LDR	R0, [PC, #336]
0x37FE	0x7001    STRB	R1, [R0, #0]
0x3800	0x2100    MOVS	R1, #0
0x3802	0xB249    SXTB	R1, R1
0x3804	0x4842    LDR	R0, [PC, #264]
0x3806	0x6001    STR	R1, [R0, #0]
L_main17:
;nest.c, 331 :: 		if(LIGHT_NAVIGATION){boatNavigationLight = 0x04; LED3 = 1;}
0x3808	0x4852    LDR	R0, [PC, #328]
0x380A	0x6800    LDR	R0, [R0, #0]
0x380C	0xB138    CBZ	R0, L_main18
0x380E	0x2104    MOVS	R1, #4
0x3810	0x4851    LDR	R0, [PC, #324]
0x3812	0x7001    STRB	R1, [R0, #0]
0x3814	0x2101    MOVS	R1, #1
0x3816	0xB249    SXTB	R1, R1
0x3818	0x483E    LDR	R0, [PC, #248]
0x381A	0x6001    STR	R1, [R0, #0]
0x381C	0xE006    B	L_main19
L_main18:
;nest.c, 332 :: 		else{boatNavigationLight = 0x00; LED3 = 0;}
0x381E	0x2100    MOVS	R1, #0
0x3820	0x484D    LDR	R0, [PC, #308]
0x3822	0x7001    STRB	R1, [R0, #0]
0x3824	0x2100    MOVS	R1, #0
0x3826	0xB249    SXTB	R1, R1
0x3828	0x483A    LDR	R0, [PC, #232]
0x382A	0x6001    STR	R1, [R0, #0]
L_main19:
;nest.c, 335 :: 		if(activeBattery == 1){boatBattery1 = 0x08;}
0x382C	0x484B    LDR	R0, [PC, #300]
0x382E	0x8800    LDRH	R0, [R0, #0]
0x3830	0x2801    CMP	R0, #1
0x3832	0xD103    BNE	L_main20
0x3834	0x2108    MOVS	R1, #8
0x3836	0x484A    LDR	R0, [PC, #296]
0x3838	0x7001    STRB	R1, [R0, #0]
0x383A	0xE002    B	L_main21
L_main20:
;nest.c, 336 :: 		else{boatBattery1 = 0x00;}
0x383C	0x2100    MOVS	R1, #0
0x383E	0x4848    LDR	R0, [PC, #288]
0x3840	0x7001    STRB	R1, [R0, #0]
L_main21:
;nest.c, 338 :: 		if(activeBattery == 2){boatBattery2 = 0x10;}
0x3842	0x4846    LDR	R0, [PC, #280]
0x3844	0x8800    LDRH	R0, [R0, #0]
0x3846	0x2802    CMP	R0, #2
0x3848	0xD103    BNE	L_main22
0x384A	0x2110    MOVS	R1, #16
0x384C	0x4845    LDR	R0, [PC, #276]
0x384E	0x7001    STRB	R1, [R0, #0]
0x3850	0xE002    B	L_main23
L_main22:
;nest.c, 339 :: 		else{boatBattery2 = 0x00;}
0x3852	0x2100    MOVS	R1, #0
0x3854	0x4843    LDR	R0, [PC, #268]
0x3856	0x7001    STRB	R1, [R0, #0]
L_main23:
;nest.c, 341 :: 		if(activeBattery == 0){
0x3858	0x4840    LDR	R0, [PC, #256]
0x385A	0x8800    LDRH	R0, [R0, #0]
0x385C	0xB928    CBNZ	R0, L_main24
;nest.c, 342 :: 		boatBattery1 = 0x00;
0x385E	0x2100    MOVS	R1, #0
0x3860	0x483F    LDR	R0, [PC, #252]
0x3862	0x7001    STRB	R1, [R0, #0]
;nest.c, 343 :: 		boatBattery2 = 0x00;
0x3864	0x2100    MOVS	R1, #0
0x3866	0x483F    LDR	R0, [PC, #252]
0x3868	0x7001    STRB	R1, [R0, #0]
;nest.c, 344 :: 		}
L_main24:
;nest.c, 352 :: 		if(bitCheckJoystick){
0x386A	0x493F    LDR	R1, [PC, #252]
0x386C	0x6808    LDR	R0, [R1, #0]
0x386E	0xB130    CBZ	R0, L_main25
;nest.c, 353 :: 		gear_status = 4;
0x3870	0x2104    MOVS	R1, #4
0x3872	0x4833    LDR	R0, [PC, #204]
0x3874	0x8001    STRH	R1, [R0, #0]
;nest.c, 354 :: 		dutyy = 150;
0x3876	0x2196    MOVS	R1, #150
0x3878	0xB209    SXTH	R1, R1
0x387A	0x483C    LDR	R0, [PC, #240]
0x387C	0x8001    STRH	R1, [R0, #0]
;nest.c, 355 :: 		}
L_main25:
;nest.c, 357 :: 		if(navLightOn){
0x387E	0x4916    LDR	R1, [PC, #88]
0x3880	0x6808    LDR	R0, [R1, #0]
0x3882	0xB148    CBZ	R0, L_main26
;nest.c, 358 :: 		navLightOn = 0;
0x3884	0x2100    MOVS	R1, #0
0x3886	0xB249    SXTB	R1, R1
0x3888	0x4813    LDR	R0, [PC, #76]
0x388A	0x6001    STR	R1, [R0, #0]
;nest.c, 359 :: 		if(navigationLightState == 1){
0x388C	0x4838    LDR	R0, [PC, #224]
0x388E	0x8800    LDRH	R0, [R0, #0]
0x3890	0x2801    CMP	R0, #1
0x3892	0xD101    BNE	L_main27
;nest.c, 360 :: 		uart4NavigationLightTurnedOn();
0x3894	0xF7FEFD30  BL	_uart4NavigationLightTurnedOn+0
;nest.c, 361 :: 		}
L_main27:
;nest.c, 362 :: 		}
L_main26:
;nest.c, 363 :: 		if(navLightOff){
0x3898	0x490E    LDR	R1, [PC, #56]
0x389A	0x6808    LDR	R0, [R1, #0]
0x389C	0xB140    CBZ	R0, L_main28
;nest.c, 364 :: 		navLightOff = 0;
0x389E	0x2100    MOVS	R1, #0
0x38A0	0xB249    SXTB	R1, R1
0x38A2	0x480C    LDR	R0, [PC, #48]
0x38A4	0x6001    STR	R1, [R0, #0]
;nest.c, 365 :: 		if(navigationLightState == 0){
0x38A6	0x4832    LDR	R0, [PC, #200]
0x38A8	0x8800    LDRH	R0, [R0, #0]
0x38AA	0xB908    CBNZ	R0, L_main29
;nest.c, 366 :: 		uart4NavigationLightTurnedOff();
0x38AC	0xF7FFFBA2  BL	_uart4NavigationLightTurnedOff+0
;nest.c, 367 :: 		}
L_main29:
;nest.c, 368 :: 		}
L_main28:
;nest.c, 370 :: 		if(intLightOn){
0x38B0	0x490A    LDR	R1, [PC, #40]
0x38B2	0x6808    LDR	R0, [R1, #0]
0x38B4	0xB148    CBZ	R0, L_main30
;nest.c, 371 :: 		intLightOn = 0;
0x38B6	0x2100    MOVS	R1, #0
0x38B8	0xB249    SXTB	R1, R1
0x38BA	0x4808    LDR	R0, [PC, #32]
0x38BC	0x6001    STR	R1, [R0, #0]
;nest.c, 372 :: 		if(interiorLightState == 1){
0x38BE	0x482D    LDR	R0, [PC, #180]
0x38C0	0x8800    LDRH	R0, [R0, #0]
0x38C2	0x2801    CMP	R0, #1
0x38C4	0xD101    BNE	L_main31
;nest.c, 373 :: 		uart4InteriorLightTurnedOn();
0x38C6	0xF7FEFC81  BL	_uart4InteriorLightTurnedOn+0
;nest.c, 374 :: 		}
L_main31:
;nest.c, 375 :: 		}
L_main30:
;nest.c, 377 :: 		if(intLightOff){
0x38CA	0x4905    LDR	R1, [PC, #20]
0x38CC	0x6808    LDR	R0, [R1, #0]
0x38CE	0xE053    B	#166
0x38D0	0x82B84241  	GPIOD_ODR+0
0x38D4	0x40B82201  	_navLightOff+0
0x38D8	0x40BC2201  	_navLightOn+0
0x38DC	0x40C02201  	_intLightOn+0
0x38E0	0x40C42201  	_intLightOff+0
0x38E4	0x40C82201  	_bat1On+0
0x38E8	0x40CC2201  	_bat1Off+0
0x38EC	0x40D02201  	_bat2On+0
0x38F0	0x40D42201  	_bat2Off+0
0x38F4	0x40D82201  	_bitCheckStatusJoystick+0
0x38F8	0x40DC2201  	_bitCheckStatusDisplay+0
0x38FC	0x40E02201  	_countedTimer2+0
0x3900	0x40E42201  	_controlWasTaken+0
0x3904	0x40E82201  	_stopGearBit+0
0x3908	0x40EC2201  	_bitCheckIsItStoppedGear+0
0x390C	0x82B84240  	GPIOB_ODR+0
0x3910	0x82BC4240  	GPIOB_ODR+0
0x3914	0x82A04241  	GPIOD_ODR+0
0x3918	0x82A44241  	GPIOD_ODR+0
0x391C	0x82A84241  	GPIOD_ODR+0
0x3920	0x00002000  	_battery_chosen+0
0x3924	0x00022000  	_battery_chosen_old+0
0x3928	0x0FAC2200  	_battry_percentage_check+0
0x392C	0x40F02201  	_beingControlledByMobile+0
0x3930	0x00482000  	_velocity_mode_new+0
0x3934	0x09FE2000  	_velocity_mode+0
0x3938	0x02184240  	GPIOA_IDR+0
0x393C	0x408C2201  	_control_taken+0
0x3940	0x00342000  	_gear_status+0
0x3944	0x40982201  	_receivedCheckStatus+0
0x3948	0x00372000  	_boatControlTaken+0
0x394C	0x82904241  	GPIOD_ODR+0
0x3950	0x004A2000  	_boatInteriorLight+0
0x3954	0x828C4241  	GPIOD_ODR+0
0x3958	0x004B2000  	_boatNavigationLight+0
0x395C	0x000E2000  	_activeBattery+0
0x3960	0x004C2000  	_boatBattery1+0
0x3964	0x004D2000  	_boatBattery2+0
0x3968	0x40A42201  	_bitCheckJoystick+0
0x396C	0x004E2000  	_dutyy+0
0x3970	0x003A2000  	_navigationLightState+0
0x3974	0x003E2000  	_interiorLightState+0
0x3978	0xB140    CBZ	R0, L_main32
;nest.c, 378 :: 		intLightOff = 0;
0x397A	0x2100    MOVS	R1, #0
0x397C	0xB249    SXTB	R1, R1
0x397E	0x4838    LDR	R0, [PC, #224]
0x3980	0x6001    STR	R1, [R0, #0]
;nest.c, 379 :: 		if(interiorLightState == 0){
0x3982	0x4838    LDR	R0, [PC, #224]
0x3984	0x8800    LDRH	R0, [R0, #0]
0x3986	0xB908    CBNZ	R0, L_main33
;nest.c, 380 :: 		uart4InteriorLightTurnedOff();
0x3988	0xF7FFFB14  BL	_uart4InteriorLightTurnedOff+0
;nest.c, 381 :: 		}
L_main33:
;nest.c, 382 :: 		}
L_main32:
;nest.c, 407 :: 		if(bitCheckStatusDisplay){
0x398C	0x4936    LDR	R1, [PC, #216]
0x398E	0x6808    LDR	R0, [R1, #0]
0x3990	0x2800    CMP	R0, #0
0x3992	0xD02D    BEQ	L_main34
;nest.c, 408 :: 		bitCheckStatusDisplay = 0;
0x3994	0x2100    MOVS	R1, #0
0x3996	0xB249    SXTB	R1, R1
0x3998	0x4833    LDR	R0, [PC, #204]
0x399A	0x6001    STR	R1, [R0, #0]
;nest.c, 410 :: 		IWDG_KR = 0xAAAA;    //Reload IWDG
0x399C	0xF64A21AA  MOVW	R1, #43690
0x39A0	0x4832    LDR	R0, [PC, #200]
0x39A2	0x6001    STR	R1, [R0, #0]
;nest.c, 412 :: 		LED1 = ~LED1;
0x39A4	0x4932    LDR	R1, [PC, #200]
0x39A6	0x6808    LDR	R0, [R1, #0]
0x39A8	0xF0800001  EOR	R0, R0, #1
0x39AC	0xB2C0    UXTB	R0, R0
0x39AE	0x6008    STR	R0, [R1, #0]
;nest.c, 413 :: 		uart4CheckNavigationLightStatus();
0x39B0	0xF7FEFC2C  BL	_uart4CheckNavigationLightStatus+0
;nest.c, 414 :: 		uart4CheckInteriorLightStatus();
0x39B4	0xF7FEFCC0  BL	_uart4CheckInteriorLightStatus+0
;nest.c, 415 :: 		uart4CheckBattery1Status();
0x39B8	0xF7FEFD12  BL	_uart4CheckBattery1Status+0
;nest.c, 416 :: 		uart4CheckBattery2Status();
0x39BC	0xF7FEFD2C  BL	_uart4CheckBattery2Status+0
;nest.c, 418 :: 		uart4TurtleCheckStatus();
0x39C0	0xF7FEFCD6  BL	_uart4TurtleCheckStatus+0
;nest.c, 419 :: 		uart4RabbitCheckStatus();
0x39C4	0xF7FEFCF0  BL	_uart4RabbitCheckStatus+0
;nest.c, 420 :: 		uart4LeopardCheckStatus();
0x39C8	0xF7FEFB88  BL	_uart4LeopardCheckStatus+0
;nest.c, 422 :: 		if((beingControlledByMobile) && (!control_taken)){
0x39CC	0x4929    LDR	R1, [PC, #164]
0x39CE	0x6808    LDR	R0, [R1, #0]
0x39D0	0xB170    CBZ	R0, L__main49
0x39D2	0x4929    LDR	R1, [PC, #164]
0x39D4	0x6808    LDR	R0, [R1, #0]
0x39D6	0xB958    CBNZ	R0, L__main48
L__main44:
;nest.c, 423 :: 		beingControlledByMobile = 0;
0x39D8	0x2100    MOVS	R1, #0
0x39DA	0xB249    SXTB	R1, R1
0x39DC	0x4825    LDR	R0, [PC, #148]
0x39DE	0x6001    STR	R1, [R0, #0]
;nest.c, 424 :: 		velocity_mode = velocity_mode_new;
0x39E0	0x4A26    LDR	R2, [PC, #152]
0x39E2	0x8811    LDRH	R1, [R2, #0]
0x39E4	0x4826    LDR	R0, [PC, #152]
0x39E6	0x8001    STRH	R1, [R0, #0]
;nest.c, 425 :: 		change_velocity_mode(velocity_mode);
0x39E8	0x4610    MOV	R0, R2
0x39EA	0x8800    LDRH	R0, [R0, #0]
0x39EC	0xF7FFFB22  BL	_change_velocity_mode+0
;nest.c, 422 :: 		if((beingControlledByMobile) && (!control_taken)){
L__main49:
L__main48:
;nest.c, 427 :: 		}
L_main34:
;nest.c, 429 :: 		if(bitCheckStatusJoystick){
0x39F0	0x4924    LDR	R1, [PC, #144]
0x39F2	0x6808    LDR	R0, [R1, #0]
0x39F4	0x2800    CMP	R0, #0
0x39F6	0xD026    BEQ	L_main38
;nest.c, 430 :: 		bitCheckStatusJoystick = 0;
0x39F8	0x2100    MOVS	R1, #0
0x39FA	0xB249    SXTB	R1, R1
0x39FC	0x4821    LDR	R0, [PC, #132]
0x39FE	0x6001    STR	R1, [R0, #0]
;nest.c, 432 :: 		LED1 = ~LED1;
0x3A00	0x491B    LDR	R1, [PC, #108]
0x3A02	0x6808    LDR	R0, [R1, #0]
0x3A04	0xF0800001  EOR	R0, R0, #1
0x3A08	0xB2C0    UXTB	R0, R0
0x3A0A	0x6008    STR	R0, [R1, #0]
;nest.c, 433 :: 		if(stopGearBit){
0x3A0C	0x491E    LDR	R1, [PC, #120]
0x3A0E	0x6808    LDR	R0, [R1, #0]
0x3A10	0xB168    CBZ	R0, L_main39
;nest.c, 434 :: 		stopGearBit = 0;
0x3A12	0x2100    MOVS	R1, #0
0x3A14	0xB249    SXTB	R1, R1
0x3A16	0x481C    LDR	R0, [PC, #112]
0x3A18	0x6001    STR	R1, [R0, #0]
;nest.c, 435 :: 		gear_status = 4;
0x3A1A	0x2104    MOVS	R1, #4
0x3A1C	0x481B    LDR	R0, [PC, #108]
0x3A1E	0x8001    STRH	R1, [R0, #0]
;nest.c, 436 :: 		bitCheckIsItStoppedGear = 1;
0x3A20	0x2101    MOVS	R1, #1
0x3A22	0xB249    SXTB	R1, R1
0x3A24	0x481A    LDR	R0, [PC, #104]
0x3A26	0x6001    STR	R1, [R0, #0]
;nest.c, 437 :: 		uart3SendJoystickForced();
0x3A28	0xF7FEFB74  BL	_uart3SendJoystickForced+0
;nest.c, 438 :: 		}
0x3A2C	0xE00B    B	L_main40
L_main39:
;nest.c, 439 :: 		else if(resetTouchSensor){
0x3A2E	0x4919    LDR	R1, [PC, #100]
0x3A30	0x6808    LDR	R0, [R1, #0]
0x3A32	0xB130    CBZ	R0, L_main41
;nest.c, 440 :: 		resetTouchSensor = 0;
0x3A34	0x2100    MOVS	R1, #0
0x3A36	0xB249    SXTB	R1, R1
0x3A38	0x4816    LDR	R0, [PC, #88]
0x3A3A	0x6001    STR	R1, [R0, #0]
;nest.c, 441 :: 		uart3ResetSensorTouch();
0x3A3C	0xF7FEFB0E  BL	_uart3ResetSensorTouch+0
;nest.c, 442 :: 		}
0x3A40	0xE001    B	L_main42
L_main41:
;nest.c, 444 :: 		uart3SendJoystick();
0x3A42	0xF7FDFCCF  BL	_uart3SendJoystick+0
;nest.c, 445 :: 		}
L_main42:
L_main40:
;nest.c, 446 :: 		}
L_main38:
;nest.c, 449 :: 		if(bitCheckJoystick){
0x3A46	0x4914    LDR	R1, [PC, #80]
0x3A48	0x6808    LDR	R0, [R1, #0]
0x3A4A	0xB130    CBZ	R0, L_main43
;nest.c, 450 :: 		bitCheckJoystick = 0;
0x3A4C	0x2100    MOVS	R1, #0
0x3A4E	0xB249    SXTB	R1, R1
0x3A50	0x4811    LDR	R0, [PC, #68]
0x3A52	0x6001    STR	R1, [R0, #0]
;nest.c, 451 :: 		gear_status = 4;
0x3A54	0x2104    MOVS	R1, #4
0x3A56	0x480D    LDR	R0, [PC, #52]
0x3A58	0x8001    STRH	R1, [R0, #0]
;nest.c, 452 :: 		}
L_main43:
;nest.c, 459 :: 		}
0x3A5A	0xE687    B	L_main6
;nest.c, 461 :: 		}
L_end_main:
L__main_end_loop:
0x3A5C	0xE7FE    B	L__main_end_loop
0x3A5E	0xBF00    NOP
0x3A60	0x40C42201  	_intLightOff+0
0x3A64	0x003E2000  	_interiorLightState+0
0x3A68	0x40DC2201  	_bitCheckStatusDisplay+0
0x3A6C	0x30004000  	IWDG_KR+0
0x3A70	0x82B84240  	GPIOB_ODR+0
0x3A74	0x40F02201  	_beingControlledByMobile+0
0x3A78	0x408C2201  	_control_taken+0
0x3A7C	0x00482000  	_velocity_mode_new+0
0x3A80	0x09FE2000  	_velocity_mode+0
0x3A84	0x40D82201  	_bitCheckStatusJoystick+0
0x3A88	0x40E82201  	_stopGearBit+0
0x3A8C	0x00342000  	_gear_status+0
0x3A90	0x40EC2201  	_bitCheckIsItStoppedGear+0
0x3A94	0x40B02201  	_resetTouchSensor+0
0x3A98	0x40A42201  	_bitCheckJoystick+0
; end of _main
_NVIC_IntEnable:
;__Lib_System_4XX.c, 172 :: 		
; ivt start address is: 0 (R0)
0x2714	0xB081    SUB	SP, SP, #4
; ivt end address is: 0 (R0)
; ivt start address is: 0 (R0)
;__Lib_System_4XX.c, 184 :: 		
0x2716	0x2804    CMP	R0, #4
0x2718	0xD106    BNE	L_NVIC_IntEnable6
; ivt end address is: 0 (R0)
;__Lib_System_4XX.c, 189 :: 		
0x271A	0x4919    LDR	R1, [PC, #100]
0x271C	0x6809    LDR	R1, [R1, #0]
0x271E	0xF4413280  ORR	R2, R1, #65536
0x2722	0x4917    LDR	R1, [PC, #92]
0x2724	0x600A    STR	R2, [R1, #0]
;__Lib_System_4XX.c, 190 :: 		
0x2726	0xE028    B	L_NVIC_IntEnable7
L_NVIC_IntEnable6:
;__Lib_System_4XX.c, 191 :: 		
; ivt start address is: 0 (R0)
0x2728	0x2805    CMP	R0, #5
0x272A	0xD106    BNE	L_NVIC_IntEnable8
; ivt end address is: 0 (R0)
;__Lib_System_4XX.c, 196 :: 		
0x272C	0x4914    LDR	R1, [PC, #80]
0x272E	0x6809    LDR	R1, [R1, #0]
0x2730	0xF4413200  ORR	R2, R1, #131072
0x2734	0x4912    LDR	R1, [PC, #72]
0x2736	0x600A    STR	R2, [R1, #0]
;__Lib_System_4XX.c, 197 :: 		
0x2738	0xE01F    B	L_NVIC_IntEnable9
L_NVIC_IntEnable8:
;__Lib_System_4XX.c, 198 :: 		
; ivt start address is: 0 (R0)
0x273A	0x2806    CMP	R0, #6
0x273C	0xD106    BNE	L_NVIC_IntEnable10
; ivt end address is: 0 (R0)
;__Lib_System_4XX.c, 203 :: 		
0x273E	0x4910    LDR	R1, [PC, #64]
0x2740	0x6809    LDR	R1, [R1, #0]
0x2742	0xF4412280  ORR	R2, R1, #262144
0x2746	0x490E    LDR	R1, [PC, #56]
0x2748	0x600A    STR	R2, [R1, #0]
;__Lib_System_4XX.c, 204 :: 		
0x274A	0xE016    B	L_NVIC_IntEnable11
L_NVIC_IntEnable10:
;__Lib_System_4XX.c, 205 :: 		
; ivt start address is: 0 (R0)
0x274C	0x280F    CMP	R0, #15
0x274E	0xD106    BNE	L_NVIC_IntEnable12
; ivt end address is: 0 (R0)
;__Lib_System_4XX.c, 210 :: 		
0x2750	0x490C    LDR	R1, [PC, #48]
0x2752	0x6809    LDR	R1, [R1, #0]
0x2754	0xF0410202  ORR	R2, R1, #2
0x2758	0x490A    LDR	R1, [PC, #40]
0x275A	0x600A    STR	R2, [R1, #0]
;__Lib_System_4XX.c, 211 :: 		
0x275C	0xE00D    B	L_NVIC_IntEnable13
L_NVIC_IntEnable12:
;__Lib_System_4XX.c, 212 :: 		
; ivt start address is: 0 (R0)
0x275E	0x2810    CMP	R0, #16
0x2760	0xD30B    BCC	L_NVIC_IntEnable14
;__Lib_System_4XX.c, 217 :: 		
0x2762	0xF2A00410  SUBW	R4, R0, #16
; ivt end address is: 0 (R0)
0x2766	0x0961    LSRS	R1, R4, #5
0x2768	0x008A    LSLS	R2, R1, #2
0x276A	0x4907    LDR	R1, [PC, #28]
0x276C	0x188B    ADDS	R3, R1, R2
;__Lib_System_4XX.c, 218 :: 		
0x276E	0xF004021F  AND	R2, R4, #31
0x2772	0xF04F0101  MOV	R1, #1
0x2776	0x4091    LSLS	R1, R2
0x2778	0x6019    STR	R1, [R3, #0]
;__Lib_System_4XX.c, 219 :: 		
L_NVIC_IntEnable14:
L_NVIC_IntEnable13:
L_NVIC_IntEnable11:
L_NVIC_IntEnable9:
L_NVIC_IntEnable7:
;__Lib_System_4XX.c, 220 :: 		
L_end_NVIC_IntEnable:
0x277A	0xB001    ADD	SP, SP, #4
0x277C	0x4770    BX	LR
0x277E	0xBF00    NOP
0x2780	0xED24E000  	SCB_SHCRS+0
0x2784	0xE010E000  	STK_CTRL+0
0x2788	0xE100E000  	NVIC_ISER0+0
; end of _NVIC_IntEnable
___CC2DW:
;__Lib_System_4XX.c, 44 :: 		
0x278C	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 46 :: 		
L_loopDW:
;__Lib_System_4XX.c, 47 :: 		
0x278E	0xF81C9B01  LDRB	R9, [R12], #1
;__Lib_System_4XX.c, 48 :: 		
0x2792	0xF80B9B01  STRB	R9, [R11], #1
;__Lib_System_4XX.c, 49 :: 		
0x2796	0xEBBB0F0A  CMP	R11, R10, LSL #0
;__Lib_System_4XX.c, 50 :: 		
0x279A	0xD1F8    BNE	L_loopDW
;__Lib_System_4XX.c, 52 :: 		
L_end___CC2DW:
0x279C	0xB001    ADD	SP, SP, #4
0x279E	0x4770    BX	LR
; end of ___CC2DW
___FillZeros:
;__Lib_System_4XX.c, 86 :: 		
0x26B0	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 88 :: 		
0x26B2	0xF04F0900  MOV	R9, #0
;__Lib_System_4XX.c, 89 :: 		
0x26B6	0xF04F0C00  MOV	R12, #0
;__Lib_System_4XX.c, 90 :: 		
0x26BA	0xEBBD0F0A  CMP	SP, R10, LSL #0
;__Lib_System_4XX.c, 91 :: 		
0x26BE	0xDC04    BGT	L_loopFZs
;__Lib_System_4XX.c, 92 :: 		
0x26C0	0xEBBD0F0B  CMP	SP, R11, LSL #0
;__Lib_System_4XX.c, 93 :: 		
0x26C4	0xDB01    BLT	L_loopFZs
;__Lib_System_4XX.c, 94 :: 		
0x26C6	0x46D4    MOV	R12, R10
;__Lib_System_4XX.c, 95 :: 		
0x26C8	0x46EA    MOV	R10, SP
;__Lib_System_4XX.c, 96 :: 		
L_loopFZs:
;__Lib_System_4XX.c, 97 :: 		
0x26CA	0xF84B9B04  STR	R9, [R11], #4
;__Lib_System_4XX.c, 98 :: 		
0x26CE	0xEBBB0F0A  CMP	R11, R10, LSL #0
;__Lib_System_4XX.c, 99 :: 		
0x26D2	0xD1FA    BNE	L_loopFZs
;__Lib_System_4XX.c, 100 :: 		
0x26D4	0xEBBC0F0A  CMP	R12, R10, LSL #0
;__Lib_System_4XX.c, 101 :: 		
0x26D8	0xDD05    BLE	L_norep
;__Lib_System_4XX.c, 102 :: 		
0x26DA	0x46E2    MOV	R10, R12
;__Lib_System_4XX.c, 103 :: 		
0x26DC	0xF8D9B000  LDR	R11, [R9, #0]
;__Lib_System_4XX.c, 104 :: 		
0x26E0	0xF10B0B04  ADD	R11, R11, #4
;__Lib_System_4XX.c, 105 :: 		
0x26E4	0xE7F1    B	L_loopFZs
;__Lib_System_4XX.c, 106 :: 		
L_norep:
;__Lib_System_4XX.c, 108 :: 		
L_end___FillZeros:
0x26E6	0xB001    ADD	SP, SP, #4
0x26E8	0x4770    BX	LR
; end of ___FillZeros
_UART6_Init_Advanced:
;__Lib_UART_123_45_6.c, 434 :: 		
; stop_bits start address is: 12 (R3)
; parity start address is: 8 (R2)
; data_bits start address is: 4 (R1)
; baud_rate start address is: 0 (R0)
0x26EC	0xB081    SUB	SP, SP, #4
0x26EE	0xF8CDE000  STR	LR, [SP, #0]
; stop_bits end address is: 12 (R3)
; parity end address is: 8 (R2)
; data_bits end address is: 4 (R1)
; baud_rate end address is: 0 (R0)
; baud_rate start address is: 0 (R0)
; data_bits start address is: 4 (R1)
; parity start address is: 8 (R2)
; stop_bits start address is: 12 (R3)
; module start address is: 20 (R5)
0x26F2	0x9D01    LDR	R5, [SP, #4]
;__Lib_UART_123_45_6.c, 436 :: 		
0x26F4	0x462C    MOV	R4, R5
; module end address is: 20 (R5)
0x26F6	0xB410    PUSH	(R4)
; parity end address is: 8 (R2)
0x26F8	0xB408    PUSH	(R3)
0x26FA	0xB293    UXTH	R3, R2
0x26FC	0xB28A    UXTH	R2, R1
; data_bits end address is: 4 (R1)
0x26FE	0x4601    MOV	R1, R0
; baud_rate end address is: 0 (R0)
0x2700	0x4803    LDR	R0, [PC, #12]
; stop_bits end address is: 12 (R3)
0x2702	0xF7FEFD25  BL	__Lib_UART_123_45_6_UARTx_Init_Advanced+0
0x2706	0xB002    ADD	SP, SP, #8
;__Lib_UART_123_45_6.c, 437 :: 		
L_end_UART6_Init_Advanced:
0x2708	0xF8DDE000  LDR	LR, [SP, #0]
0x270C	0xB001    ADD	SP, SP, #4
0x270E	0x4770    BX	LR
0x2710	0x14004001  	USART6_SR+0
; end of _UART6_Init_Advanced
__Lib_UART_123_45_6_UARTx_Init_Advanced:
;__Lib_UART_123_45_6.c, 319 :: 		
; parity start address is: 12 (R3)
; baud_rate start address is: 4 (R1)
; UART_Base start address is: 0 (R0)
0x1150	0xB08B    SUB	SP, SP, #44
0x1152	0xF8CDE000  STR	LR, [SP, #0]
0x1156	0xB29A    UXTH	R2, R3
; parity end address is: 12 (R3)
; baud_rate end address is: 4 (R1)
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 0 (R0)
; baud_rate start address is: 4 (R1)
; parity start address is: 8 (R2)
; stop_bits start address is: 12 (R3)
0x1158	0xF8BD302C  LDRH	R3, [SP, #44]
; module start address is: 24 (R6)
0x115C	0x9E0C    LDR	R6, [SP, #48]
;__Lib_UART_123_45_6.c, 323 :: 		
0x115E	0xAC06    ADD	R4, SP, #24
0x1160	0xF8AD3004  STRH	R3, [SP, #4]
0x1164	0xF8AD2008  STRH	R2, [SP, #8]
0x1168	0x9103    STR	R1, [SP, #12]
0x116A	0x9004    STR	R0, [SP, #16]
0x116C	0x4620    MOV	R0, R4
0x116E	0xF7FFFADD  BL	_RCC_GetClocksFrequency+0
0x1172	0x9804    LDR	R0, [SP, #16]
0x1174	0x9903    LDR	R1, [SP, #12]
0x1176	0xF8BD2008  LDRH	R2, [SP, #8]
0x117A	0xF8BD3004  LDRH	R3, [SP, #4]
;__Lib_UART_123_45_6.c, 325 :: 		
0x117E	0x4C71    LDR	R4, [PC, #452]
0x1180	0x42A0    CMP	R0, R4
0x1182	0xD112    BNE	L___Lib_UART_123_45_6_UARTx_Init_Advanced15
;__Lib_UART_123_45_6.c, 326 :: 		
0x1184	0x2501    MOVS	R5, #1
0x1186	0xB26D    SXTB	R5, R5
0x1188	0x4C6F    LDR	R4, [PC, #444]
0x118A	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 327 :: 		
0x118C	0x4D6F    LDR	R5, [PC, #444]
0x118E	0x4C70    LDR	R4, [PC, #448]
0x1190	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 328 :: 		
0x1192	0x4D70    LDR	R5, [PC, #448]
0x1194	0x4C70    LDR	R4, [PC, #448]
0x1196	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 329 :: 		
0x1198	0x4D70    LDR	R5, [PC, #448]
0x119A	0x4C71    LDR	R4, [PC, #452]
0x119C	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 330 :: 		
0x119E	0x4D71    LDR	R5, [PC, #452]
0x11A0	0x4C71    LDR	R4, [PC, #452]
0x11A2	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 331 :: 		
0x11A4	0x9C09    LDR	R4, [SP, #36]
0x11A6	0x9405    STR	R4, [SP, #20]
;__Lib_UART_123_45_6.c, 332 :: 		
0x11A8	0xE06C    B	L___Lib_UART_123_45_6_UARTx_Init_Advanced16
L___Lib_UART_123_45_6_UARTx_Init_Advanced15:
;__Lib_UART_123_45_6.c, 333 :: 		
0x11AA	0x4C70    LDR	R4, [PC, #448]
0x11AC	0x42A0    CMP	R0, R4
0x11AE	0xD112    BNE	L___Lib_UART_123_45_6_UARTx_Init_Advanced17
;__Lib_UART_123_45_6.c, 334 :: 		
0x11B0	0x2501    MOVS	R5, #1
0x11B2	0xB26D    SXTB	R5, R5
0x11B4	0x4C6E    LDR	R4, [PC, #440]
0x11B6	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 335 :: 		
0x11B8	0x4D6E    LDR	R5, [PC, #440]
0x11BA	0x4C65    LDR	R4, [PC, #404]
0x11BC	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 336 :: 		
0x11BE	0x4D6E    LDR	R5, [PC, #440]
0x11C0	0x4C65    LDR	R4, [PC, #404]
0x11C2	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 337 :: 		
0x11C4	0x4D6D    LDR	R5, [PC, #436]
0x11C6	0x4C66    LDR	R4, [PC, #408]
0x11C8	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 338 :: 		
0x11CA	0x4D6D    LDR	R5, [PC, #436]
0x11CC	0x4C66    LDR	R4, [PC, #408]
0x11CE	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 339 :: 		
0x11D0	0x9C08    LDR	R4, [SP, #32]
0x11D2	0x9405    STR	R4, [SP, #20]
;__Lib_UART_123_45_6.c, 340 :: 		
0x11D4	0xE056    B	L___Lib_UART_123_45_6_UARTx_Init_Advanced18
L___Lib_UART_123_45_6_UARTx_Init_Advanced17:
;__Lib_UART_123_45_6.c, 341 :: 		
0x11D6	0x4C6B    LDR	R4, [PC, #428]
0x11D8	0x42A0    CMP	R0, R4
0x11DA	0xD112    BNE	L___Lib_UART_123_45_6_UARTx_Init_Advanced19
;__Lib_UART_123_45_6.c, 342 :: 		
0x11DC	0x2501    MOVS	R5, #1
0x11DE	0xB26D    SXTB	R5, R5
0x11E0	0x4C69    LDR	R4, [PC, #420]
0x11E2	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 343 :: 		
0x11E4	0x4D69    LDR	R5, [PC, #420]
0x11E6	0x4C5A    LDR	R4, [PC, #360]
0x11E8	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 344 :: 		
0x11EA	0x4D69    LDR	R5, [PC, #420]
0x11EC	0x4C5A    LDR	R4, [PC, #360]
0x11EE	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 345 :: 		
0x11F0	0x4D68    LDR	R5, [PC, #416]
0x11F2	0x4C5B    LDR	R4, [PC, #364]
0x11F4	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 346 :: 		
0x11F6	0x4D68    LDR	R5, [PC, #416]
0x11F8	0x4C5B    LDR	R4, [PC, #364]
0x11FA	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 347 :: 		
0x11FC	0x9C08    LDR	R4, [SP, #32]
0x11FE	0x9405    STR	R4, [SP, #20]
;__Lib_UART_123_45_6.c, 348 :: 		
0x1200	0xE040    B	L___Lib_UART_123_45_6_UARTx_Init_Advanced20
L___Lib_UART_123_45_6_UARTx_Init_Advanced19:
;__Lib_UART_123_45_6.c, 349 :: 		
0x1202	0x4C66    LDR	R4, [PC, #408]
0x1204	0x42A0    CMP	R0, R4
0x1206	0xD112    BNE	L___Lib_UART_123_45_6_UARTx_Init_Advanced21
;__Lib_UART_123_45_6.c, 350 :: 		
0x1208	0x2501    MOVS	R5, #1
0x120A	0xB26D    SXTB	R5, R5
0x120C	0x4C64    LDR	R4, [PC, #400]
0x120E	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 351 :: 		
0x1210	0x4D64    LDR	R5, [PC, #400]
0x1212	0x4C4F    LDR	R4, [PC, #316]
0x1214	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 352 :: 		
0x1216	0x4D64    LDR	R5, [PC, #400]
0x1218	0x4C4F    LDR	R4, [PC, #316]
0x121A	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 353 :: 		
0x121C	0x4D63    LDR	R5, [PC, #396]
0x121E	0x4C50    LDR	R4, [PC, #320]
0x1220	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 354 :: 		
0x1222	0x4D63    LDR	R5, [PC, #396]
0x1224	0x4C50    LDR	R4, [PC, #320]
0x1226	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 355 :: 		
0x1228	0x9C08    LDR	R4, [SP, #32]
0x122A	0x9405    STR	R4, [SP, #20]
;__Lib_UART_123_45_6.c, 356 :: 		
0x122C	0xE02A    B	L___Lib_UART_123_45_6_UARTx_Init_Advanced22
L___Lib_UART_123_45_6_UARTx_Init_Advanced21:
;__Lib_UART_123_45_6.c, 357 :: 		
0x122E	0x4C61    LDR	R4, [PC, #388]
0x1230	0x42A0    CMP	R0, R4
0x1232	0xD112    BNE	L___Lib_UART_123_45_6_UARTx_Init_Advanced23
;__Lib_UART_123_45_6.c, 358 :: 		
0x1234	0x2501    MOVS	R5, #1
0x1236	0xB26D    SXTB	R5, R5
0x1238	0x4C5F    LDR	R4, [PC, #380]
0x123A	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 359 :: 		
0x123C	0x4D5F    LDR	R5, [PC, #380]
0x123E	0x4C44    LDR	R4, [PC, #272]
0x1240	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 360 :: 		
0x1242	0x4D5F    LDR	R5, [PC, #380]
0x1244	0x4C44    LDR	R4, [PC, #272]
0x1246	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 361 :: 		
0x1248	0x4D5E    LDR	R5, [PC, #376]
0x124A	0x4C45    LDR	R4, [PC, #276]
0x124C	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 362 :: 		
0x124E	0x4D5E    LDR	R5, [PC, #376]
0x1250	0x4C45    LDR	R4, [PC, #276]
0x1252	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 363 :: 		
0x1254	0x9C08    LDR	R4, [SP, #32]
0x1256	0x9405    STR	R4, [SP, #20]
;__Lib_UART_123_45_6.c, 364 :: 		
0x1258	0xE014    B	L___Lib_UART_123_45_6_UARTx_Init_Advanced24
L___Lib_UART_123_45_6_UARTx_Init_Advanced23:
;__Lib_UART_123_45_6.c, 365 :: 		
0x125A	0x4C5C    LDR	R4, [PC, #368]
0x125C	0x42A0    CMP	R0, R4
0x125E	0xD111    BNE	L___Lib_UART_123_45_6_UARTx_Init_Advanced25
;__Lib_UART_123_45_6.c, 366 :: 		
0x1260	0x2501    MOVS	R5, #1
0x1262	0xB26D    SXTB	R5, R5
0x1264	0x4C5A    LDR	R4, [PC, #360]
0x1266	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 367 :: 		
0x1268	0x4D5A    LDR	R5, [PC, #360]
0x126A	0x4C39    LDR	R4, [PC, #228]
0x126C	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 368 :: 		
0x126E	0x4D5A    LDR	R5, [PC, #360]
0x1270	0x4C39    LDR	R4, [PC, #228]
0x1272	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 369 :: 		
0x1274	0x4D59    LDR	R5, [PC, #356]
0x1276	0x4C3A    LDR	R4, [PC, #232]
0x1278	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 370 :: 		
0x127A	0x4D59    LDR	R5, [PC, #356]
0x127C	0x4C3A    LDR	R4, [PC, #232]
0x127E	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 371 :: 		
0x1280	0x9C09    LDR	R4, [SP, #36]
0x1282	0x9405    STR	R4, [SP, #20]
;__Lib_UART_123_45_6.c, 372 :: 		
L___Lib_UART_123_45_6_UARTx_Init_Advanced25:
L___Lib_UART_123_45_6_UARTx_Init_Advanced24:
L___Lib_UART_123_45_6_UARTx_Init_Advanced22:
L___Lib_UART_123_45_6_UARTx_Init_Advanced20:
L___Lib_UART_123_45_6_UARTx_Init_Advanced18:
L___Lib_UART_123_45_6_UARTx_Init_Advanced16:
;__Lib_UART_123_45_6.c, 374 :: 		
0x1284	0xF8AD3004  STRH	R3, [SP, #4]
; module end address is: 24 (R6)
0x1288	0xF8AD2008  STRH	R2, [SP, #8]
0x128C	0x9103    STR	R1, [SP, #12]
0x128E	0x9004    STR	R0, [SP, #16]
0x1290	0x4630    MOV	R0, R6
0x1292	0xF7FFFA8D  BL	_GPIO_Alternate_Function_Enable+0
0x1296	0x9804    LDR	R0, [SP, #16]
0x1298	0x9903    LDR	R1, [SP, #12]
0x129A	0xF8BD2008  LDRH	R2, [SP, #8]
0x129E	0xF8BD3004  LDRH	R3, [SP, #4]
;__Lib_UART_123_45_6.c, 376 :: 		
0x12A2	0xF2000510  ADDW	R5, R0, #16
0x12A6	0x2400    MOVS	R4, #0
0x12A8	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45_6.c, 377 :: 		
0x12AA	0xF2000510  ADDW	R5, R0, #16
0x12AE	0x682C    LDR	R4, [R5, #0]
0x12B0	0x431C    ORRS	R4, R3
; stop_bits end address is: 12 (R3)
0x12B2	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45_6.c, 378 :: 		
0x12B4	0xF200050C  ADDW	R5, R0, #12
0x12B8	0x2400    MOVS	R4, #0
0x12BA	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45_6.c, 380 :: 		
0x12BC	0xB11A    CBZ	R2, L___Lib_UART_123_45_6_UARTx_Init_Advanced40
;__Lib_UART_123_45_6.c, 381 :: 		
0x12BE	0xF4426280  ORR	R2, R2, #1024
0x12C2	0xB292    UXTH	R2, R2
; parity end address is: 8 (R2)
;__Lib_UART_123_45_6.c, 382 :: 		
0x12C4	0xE7FF    B	L___Lib_UART_123_45_6_UARTx_Init_Advanced26
L___Lib_UART_123_45_6_UARTx_Init_Advanced40:
;__Lib_UART_123_45_6.c, 380 :: 		
;__Lib_UART_123_45_6.c, 382 :: 		
L___Lib_UART_123_45_6_UARTx_Init_Advanced26:
;__Lib_UART_123_45_6.c, 384 :: 		
; parity start address is: 8 (R2)
0x12C6	0xF200050C  ADDW	R5, R0, #12
0x12CA	0x682C    LDR	R4, [R5, #0]
0x12CC	0x4314    ORRS	R4, R2
; parity end address is: 8 (R2)
0x12CE	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45_6.c, 386 :: 		
0x12D0	0xF200060C  ADDW	R6, R0, #12
0x12D4	0x2501    MOVS	R5, #1
0x12D6	0x6834    LDR	R4, [R6, #0]
0x12D8	0xF365344D  BFI	R4, R5, #13, #1
0x12DC	0x6034    STR	R4, [R6, #0]
;__Lib_UART_123_45_6.c, 387 :: 		
0x12DE	0xF200060C  ADDW	R6, R0, #12
0x12E2	0x2501    MOVS	R5, #1
0x12E4	0x6834    LDR	R4, [R6, #0]
0x12E6	0xF36504C3  BFI	R4, R5, #3, #1
0x12EA	0x6034    STR	R4, [R6, #0]
;__Lib_UART_123_45_6.c, 388 :: 		
0x12EC	0xF200060C  ADDW	R6, R0, #12
0x12F0	0x2501    MOVS	R5, #1
0x12F2	0x6834    LDR	R4, [R6, #0]
0x12F4	0xF3650482  BFI	R4, R5, #2, #1
0x12F8	0x6034    STR	R4, [R6, #0]
;__Lib_UART_123_45_6.c, 389 :: 		
0x12FA	0xF2000514  ADDW	R5, R0, #20
0x12FE	0x2400    MOVS	R4, #0
0x1300	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45_6.c, 394 :: 		
0x1302	0x9D05    LDR	R5, [SP, #20]
0x1304	0x2419    MOVS	R4, #25
0x1306	0x4365    MULS	R5, R4, R5
0x1308	0x008C    LSLS	R4, R1, #2
; baud_rate end address is: 4 (R1)
0x130A	0xFBB5F7F4  UDIV	R7, R5, R4
;__Lib_UART_123_45_6.c, 395 :: 		
0x130E	0x2464    MOVS	R4, #100
0x1310	0xFBB7F4F4  UDIV	R4, R7, R4
0x1314	0x0126    LSLS	R6, R4, #4
;__Lib_UART_123_45_6.c, 397 :: 		
0x1316	0x0935    LSRS	R5, R6, #4
0x1318	0x2464    MOVS	R4, #100
0x131A	0x436C    MULS	R4, R5, R4
0x131C	0x1B3C    SUB	R4, R7, R4
;__Lib_UART_123_45_6.c, 398 :: 		
0x131E	0x0124    LSLS	R4, R4, #4
0x1320	0xF2040532  ADDW	R5, R4, #50
0x1324	0x2464    MOVS	R4, #100
0x1326	0xFBB5F4F4  UDIV	R4, R5, R4
0x132A	0xF004040F  AND	R4, R4, #15
0x132E	0xEA460404  ORR	R4, R6, R4, LSL #0
;__Lib_UART_123_45_6.c, 400 :: 		
0x1332	0xF2000508  ADDW	R5, R0, #8
; UART_Base end address is: 0 (R0)
0x1336	0xB2A4    UXTH	R4, R4
0x1338	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45_6.c, 401 :: 		
L_end_UARTx_Init_Advanced:
0x133A	0xF8DDE000  LDR	LR, [SP, #0]
0x133E	0xB00B    ADD	SP, SP, #44
0x1340	0x4770    BX	LR
0x1342	0xBF00    NOP
0x1344	0x10004001  	USART1_SR+0
0x1348	0x08904247  	RCC_APB2ENR+0
0x134C	0x064D0000  	_UART1_Write+0
0x1350	0x0A202000  	_UART_Wr_Ptr+0
0x1354	0x21B50000  	_UART1_Read+0
0x1358	0x0A242000  	_UART_Rd_Ptr+0
0x135C	0xFFFFFFFF  	_UART1_Data_Ready+0
0x1360	0x0A282000  	_UART_Rdy_Ptr+0
0x1364	0xFFFFFFFF  	_UART1_Tx_Idle+0
0x1368	0x0A2C2000  	_UART_Tx_Idle_Ptr+0
0x136C	0x44004000  	USART2_SR+0
0x1370	0x08444247  	RCC_APB1ENR+0
0x1374	0xFFFFFFFF  	_UART2_Write+0
0x1378	0x21850000  	_UART2_Read+0
0x137C	0xFFFFFFFF  	_UART2_Data_Ready+0
0x1380	0xFFFFFFFF  	_UART2_Tx_Idle+0
0x1384	0x48004000  	USART3_SR+0
0x1388	0x08484247  	RCC_APB1ENR+0
0x138C	0x06F10000  	_UART3_Write+0
0x1390	0x219D0000  	_UART3_Read+0
0x1394	0xFFFFFFFF  	_UART3_Data_Ready+0
0x1398	0xFFFFFFFF  	_UART3_Tx_Idle+0
0x139C	0x4C004000  	UART4_SR+0
0x13A0	0x084C4247  	RCC_APB1ENR+0
0x13A4	0x09890000  	_UART4_Write+0
0x13A8	0x21550000  	_UART4_Read+0
0x13AC	0xFFFFFFFF  	_UART4_Data_Ready+0
0x13B0	0xFFFFFFFF  	_UART4_Tx_Idle+0
0x13B4	0x50004000  	UART5_SR+0
0x13B8	0x08504247  	RCC_APB1ENR+0
0x13BC	0xFFFFFFFF  	_UART5_Write+0
0x13C0	0xFFFFFFFF  	_UART5_Read+0
0x13C4	0xFFFFFFFF  	_UART5_Data_Ready+0
0x13C8	0xFFFFFFFF  	_UART5_Tx_Idle+0
0x13CC	0x14004001  	USART6_SR+0
0x13D0	0x08944247  	RCC_APB2ENR+0
0x13D4	0x09E50000  	_UART6_Write+0
0x13D8	0x216D0000  	_UART6_Read+0
0x13DC	0xFFFFFFFF  	_UART6_Data_Ready+0
0x13E0	0xFFFFFFFF  	_UART6_Tx_Idle+0
; end of __Lib_UART_123_45_6_UARTx_Init_Advanced
_RCC_GetClocksFrequency:
;__Lib_System_4XX.c, 402 :: 		
; RCC_Clocks start address is: 0 (R0)
0x072C	0xB082    SUB	SP, SP, #8
0x072E	0xF8CDE000  STR	LR, [SP, #0]
0x0732	0x4603    MOV	R3, R0
; RCC_Clocks end address is: 0 (R0)
; RCC_Clocks start address is: 12 (R3)
;__Lib_System_4XX.c, 404 :: 		
;__Lib_System_4XX.c, 406 :: 		
0x0734	0x4619    MOV	R1, R3
0x0736	0x9101    STR	R1, [SP, #4]
0x0738	0xF7FFFE96  BL	_Get_Fosc_kHz+0
0x073C	0xF24031E8  MOVW	R1, #1000
0x0740	0xFB00F201  MUL	R2, R0, R1
0x0744	0x9901    LDR	R1, [SP, #4]
0x0746	0x600A    STR	R2, [R1, #0]
;__Lib_System_4XX.c, 409 :: 		
0x0748	0x4917    LDR	R1, [PC, #92]
0x074A	0x6809    LDR	R1, [R1, #0]
0x074C	0xF00101F0  AND	R1, R1, #240
;__Lib_System_4XX.c, 410 :: 		
0x0750	0x090A    LSRS	R2, R1, #4
;__Lib_System_4XX.c, 411 :: 		
0x0752	0x4916    LDR	R1, [PC, #88]
0x0754	0x1889    ADDS	R1, R1, R2
0x0756	0x7808    LDRB	R0, [R1, #0]
; presc start address is: 0 (R0)
0x0758	0xB2C0    UXTB	R0, R0
;__Lib_System_4XX.c, 413 :: 		
0x075A	0x1D1A    ADDS	R2, R3, #4
0x075C	0x6819    LDR	R1, [R3, #0]
0x075E	0x40C1    LSRS	R1, R0
; presc end address is: 0 (R0)
0x0760	0x6011    STR	R1, [R2, #0]
;__Lib_System_4XX.c, 416 :: 		
0x0762	0x4911    LDR	R1, [PC, #68]
0x0764	0x6809    LDR	R1, [R1, #0]
0x0766	0xF40151E0  AND	R1, R1, #7168
;__Lib_System_4XX.c, 417 :: 		
0x076A	0x0A8A    LSRS	R2, R1, #10
;__Lib_System_4XX.c, 418 :: 		
0x076C	0x490F    LDR	R1, [PC, #60]
0x076E	0x1889    ADDS	R1, R1, R2
0x0770	0x7808    LDRB	R0, [R1, #0]
; presc start address is: 0 (R0)
0x0772	0xB2C0    UXTB	R0, R0
;__Lib_System_4XX.c, 420 :: 		
0x0774	0xF2030208  ADDW	R2, R3, #8
0x0778	0x1D19    ADDS	R1, R3, #4
0x077A	0x6809    LDR	R1, [R1, #0]
0x077C	0x40C1    LSRS	R1, R0
; presc end address is: 0 (R0)
0x077E	0x6011    STR	R1, [R2, #0]
;__Lib_System_4XX.c, 423 :: 		
0x0780	0x4909    LDR	R1, [PC, #36]
0x0782	0x6809    LDR	R1, [R1, #0]
0x0784	0xF4014160  AND	R1, R1, #57344
;__Lib_System_4XX.c, 424 :: 		
0x0788	0x0B4A    LSRS	R2, R1, #13
;__Lib_System_4XX.c, 425 :: 		
0x078A	0x4908    LDR	R1, [PC, #32]
0x078C	0x1889    ADDS	R1, R1, R2
0x078E	0x7809    LDRB	R1, [R1, #0]
; presc start address is: 0 (R0)
0x0790	0xB2C8    UXTB	R0, R1
;__Lib_System_4XX.c, 427 :: 		
0x0792	0xF203020C  ADDW	R2, R3, #12
0x0796	0x1D19    ADDS	R1, R3, #4
; RCC_Clocks end address is: 12 (R3)
0x0798	0x6809    LDR	R1, [R1, #0]
0x079A	0x40C1    LSRS	R1, R0
; presc end address is: 0 (R0)
0x079C	0x6011    STR	R1, [R2, #0]
;__Lib_System_4XX.c, 428 :: 		
L_end_RCC_GetClocksFrequency:
0x079E	0xF8DDE000  LDR	LR, [SP, #0]
0x07A2	0xB002    ADD	SP, SP, #8
0x07A4	0x4770    BX	LR
0x07A6	0xBF00    NOP
0x07A8	0x38084002  	RCC_CFGR+0
0x07AC	0x005D2000  	__Lib_System_4XX_APBAHBPrescTable+0
; end of _RCC_GetClocksFrequency
_Get_Fosc_kHz:
;__Lib_Delays.c, 9 :: 		unsigned long Get_Fosc_kHz(){
;__Lib_Delays.c, 10 :: 		return __System_CLOCK_IN_KHZ;
0x0468	0x4801    LDR	R0, [PC, #4]
0x046A	0x6800    LDR	R0, [R0, #0]
;__Lib_Delays.c, 11 :: 		}
L_end_Get_Fosc_kHz:
0x046C	0x4770    BX	LR
0x046E	0xBF00    NOP
0x0470	0x0A0C2000  	___System_CLOCK_IN_KHZ+0
; end of _Get_Fosc_kHz
_GPIO_Alternate_Function_Enable:
;__Lib_GPIO_32F4xx.c, 223 :: 		
; module start address is: 0 (R0)
0x07B0	0xB083    SUB	SP, SP, #12
0x07B2	0xF8CDE000  STR	LR, [SP, #0]
; module end address is: 0 (R0)
; module start address is: 0 (R0)
;__Lib_GPIO_32F4xx.c, 226 :: 		
; i start address is: 16 (R4)
0x07B6	0x2400    MOVS	R4, #0
; module end address is: 0 (R0)
; i end address is: 16 (R4)
;__Lib_GPIO_32F4xx.c, 227 :: 		
L_GPIO_Alternate_Function_Enable66:
; i start address is: 16 (R4)
; module start address is: 0 (R0)
0x07B8	0x00A1    LSLS	R1, R4, #2
0x07BA	0x1841    ADDS	R1, R0, R1
0x07BC	0x6809    LDR	R1, [R1, #0]
0x07BE	0xF1B13FFF  CMP	R1, #-1
0x07C2	0xD014    BEQ	L_GPIO_Alternate_Function_Enable67
;__Lib_GPIO_32F4xx.c, 228 :: 		
0x07C4	0xF2000134  ADDW	R1, R0, #52
0x07C8	0x00A3    LSLS	R3, R4, #2
0x07CA	0x18C9    ADDS	R1, R1, R3
0x07CC	0x6809    LDR	R1, [R1, #0]
0x07CE	0x460A    MOV	R2, R1
0x07D0	0x18C1    ADDS	R1, R0, R3
0x07D2	0x6809    LDR	R1, [R1, #0]
0x07D4	0x9001    STR	R0, [SP, #4]
0x07D6	0xF8AD4008  STRH	R4, [SP, #8]
0x07DA	0x4608    MOV	R0, R1
0x07DC	0x4611    MOV	R1, R2
0x07DE	0xF7FFFE49  BL	__Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function+0
0x07E2	0xF8BD4008  LDRH	R4, [SP, #8]
0x07E6	0x9801    LDR	R0, [SP, #4]
;__Lib_GPIO_32F4xx.c, 229 :: 		
0x07E8	0x1C64    ADDS	R4, R4, #1
0x07EA	0xB2A4    UXTH	R4, R4
;__Lib_GPIO_32F4xx.c, 230 :: 		
; module end address is: 0 (R0)
; i end address is: 16 (R4)
0x07EC	0xE7E4    B	L_GPIO_Alternate_Function_Enable66
L_GPIO_Alternate_Function_Enable67:
;__Lib_GPIO_32F4xx.c, 231 :: 		
L_end_GPIO_Alternate_Function_Enable:
0x07EE	0xF8DDE000  LDR	LR, [SP, #0]
0x07F2	0xB003    ADD	SP, SP, #12
0x07F4	0x4770    BX	LR
; end of _GPIO_Alternate_Function_Enable
__Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function:
;__Lib_GPIO_32F4xx.c, 190 :: 		
; configs start address is: 4 (R1)
; af_pin start address is: 0 (R0)
0x0474	0xB083    SUB	SP, SP, #12
0x0476	0xF8CDE000  STR	LR, [SP, #0]
0x047A	0x4604    MOV	R4, R0
; configs end address is: 4 (R1)
; af_pin end address is: 0 (R0)
; af_pin start address is: 16 (R4)
; configs start address is: 4 (R1)
;__Lib_GPIO_32F4xx.c, 195 :: 		
0x047C	0xF00403FF  AND	R3, R4, #255
0x0480	0x091A    LSRS	R2, R3, #4
; port start address is: 0 (R0)
0x0482	0x4610    MOV	R0, R2
;__Lib_GPIO_32F4xx.c, 196 :: 		
0x0484	0xF003020F  AND	R2, R3, #15
; pin start address is: 48 (R12)
0x0488	0x4694    MOV	R12, R2
;__Lib_GPIO_32F4xx.c, 197 :: 		
0x048A	0x0A22    LSRS	R2, R4, #8
; af_pin end address is: 16 (R4)
0x048C	0xF002020F  AND	R2, R2, #15
; af start address is: 44 (R11)
0x0490	0x4693    MOV	R11, R2
;__Lib_GPIO_32F4xx.c, 199 :: 		
0x0492	0xE01A    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function54
; port end address is: 0 (R0)
;__Lib_GPIO_32F4xx.c, 200 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function56:
0x0494	0x4A2D    LDR	R2, [PC, #180]
0x0496	0x9202    STR	R2, [SP, #8]
0x0498	0xE029    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 201 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function57:
0x049A	0x4A2D    LDR	R2, [PC, #180]
0x049C	0x9202    STR	R2, [SP, #8]
0x049E	0xE026    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 202 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function58:
0x04A0	0x4A2C    LDR	R2, [PC, #176]
0x04A2	0x9202    STR	R2, [SP, #8]
0x04A4	0xE023    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 203 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function59:
0x04A6	0x4A2C    LDR	R2, [PC, #176]
0x04A8	0x9202    STR	R2, [SP, #8]
0x04AA	0xE020    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 204 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function60:
0x04AC	0x4A2B    LDR	R2, [PC, #172]
0x04AE	0x9202    STR	R2, [SP, #8]
0x04B0	0xE01D    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 205 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function61:
0x04B2	0x4A2B    LDR	R2, [PC, #172]
0x04B4	0x9202    STR	R2, [SP, #8]
0x04B6	0xE01A    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 206 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function62:
0x04B8	0x4A2A    LDR	R2, [PC, #168]
0x04BA	0x9202    STR	R2, [SP, #8]
0x04BC	0xE017    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 207 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function63:
0x04BE	0x4A2A    LDR	R2, [PC, #168]
0x04C0	0x9202    STR	R2, [SP, #8]
0x04C2	0xE014    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 208 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function64:
0x04C4	0x4A29    LDR	R2, [PC, #164]
0x04C6	0x9202    STR	R2, [SP, #8]
0x04C8	0xE011    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 209 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function54:
; port start address is: 0 (R0)
0x04CA	0x2800    CMP	R0, #0
0x04CC	0xD0E2    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function56
0x04CE	0x2801    CMP	R0, #1
0x04D0	0xD0E3    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function57
0x04D2	0x2802    CMP	R0, #2
0x04D4	0xD0E4    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function58
0x04D6	0x2803    CMP	R0, #3
0x04D8	0xD0E5    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function59
0x04DA	0x2804    CMP	R0, #4
0x04DC	0xD0E6    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function60
0x04DE	0x2805    CMP	R0, #5
0x04E0	0xD0E7    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function61
0x04E2	0x2806    CMP	R0, #6
0x04E4	0xD0E8    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function62
0x04E6	0x2807    CMP	R0, #7
0x04E8	0xD0E9    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function63
0x04EA	0x2808    CMP	R0, #8
0x04EC	0xD0EA    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function64
; port end address is: 0 (R0)
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55:
;__Lib_GPIO_32F4xx.c, 211 :: 		
0x04EE	0x2201    MOVS	R2, #1
0x04F0	0xB212    SXTH	R2, R2
0x04F2	0xFA02F20C  LSL	R2, R2, R12
0x04F6	0xF8AD2004  STRH	R2, [SP, #4]
; configs end address is: 4 (R1)
0x04FA	0x9802    LDR	R0, [SP, #8]
0x04FC	0x460A    MOV	R2, R1
0x04FE	0xF8BD1004  LDRH	R1, [SP, #4]
0x0502	0xF7FFFE95  BL	_GPIO_Config+0
;__Lib_GPIO_32F4xx.c, 213 :: 		
0x0506	0x9A02    LDR	R2, [SP, #8]
0x0508	0xF2020120  ADDW	R1, R2, #32
; tmp_ptr start address is: 4 (R1)
;__Lib_GPIO_32F4xx.c, 214 :: 		
0x050C	0xF1BC0F07  CMP	R12, #7
0x0510	0xD908    BLS	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function90
;__Lib_GPIO_32F4xx.c, 215 :: 		
0x0512	0x1D0A    ADDS	R2, R1, #4
; tmp_ptr end address is: 4 (R1)
; tmp_ptr start address is: 0 (R0)
0x0514	0x4610    MOV	R0, R2
;__Lib_GPIO_32F4xx.c, 216 :: 		
0x0516	0xF1AC0208  SUB	R2, R12, #8
; pin end address is: 48 (R12)
; pin start address is: 4 (R1)
0x051A	0x4611    MOV	R1, R2
; tmp_ptr end address is: 0 (R0)
; pin end address is: 4 (R1)
0x051C	0x9101    STR	R1, [SP, #4]
0x051E	0x4601    MOV	R1, R0
0x0520	0x9801    LDR	R0, [SP, #4]
;__Lib_GPIO_32F4xx.c, 217 :: 		
0x0522	0xE000    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function65
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function90:
;__Lib_GPIO_32F4xx.c, 214 :: 		
0x0524	0x4660    MOV	R0, R12
;__Lib_GPIO_32F4xx.c, 217 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function65:
;__Lib_GPIO_32F4xx.c, 218 :: 		
; pin start address is: 0 (R0)
; tmp_ptr start address is: 4 (R1)
0x0526	0x0083    LSLS	R3, R0, #2
0x0528	0xF04F020F  MOV	R2, #15
0x052C	0x409A    LSLS	R2, R3
0x052E	0x43D3    MVN	R3, R2
0x0530	0x680A    LDR	R2, [R1, #0]
0x0532	0x401A    ANDS	R2, R3
0x0534	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_32F4xx.c, 219 :: 		
0x0536	0x0082    LSLS	R2, R0, #2
; pin end address is: 0 (R0)
0x0538	0xFA0BF302  LSL	R3, R11, R2
; af end address is: 44 (R11)
0x053C	0x680A    LDR	R2, [R1, #0]
0x053E	0x431A    ORRS	R2, R3
0x0540	0x600A    STR	R2, [R1, #0]
; tmp_ptr end address is: 4 (R1)
;__Lib_GPIO_32F4xx.c, 220 :: 		
L_end_GPIO_Config_Pin_Alternate_Function:
0x0542	0xF8DDE000  LDR	LR, [SP, #0]
0x0546	0xB003    ADD	SP, SP, #12
0x0548	0x4770    BX	LR
0x054A	0xBF00    NOP
0x054C	0x00004002  	#1073872896
0x0550	0x04004002  	#1073873920
0x0554	0x08004002  	#1073874944
0x0558	0x0C004002  	#1073875968
0x055C	0x10004002  	#1073876992
0x0560	0x14004002  	#1073878016
0x0564	0x18004002  	#1073879040
0x0568	0x1C004002  	#1073880064
0x056C	0x20004002  	#1073881088
; end of __Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function
_GPIO_Config:
;__Lib_GPIO_32F4xx.c, 74 :: 		
; config start address is: 8 (R2)
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x0230	0xB084    SUB	SP, SP, #16
0x0232	0xF8CDE000  STR	LR, [SP, #0]
0x0236	0xB28D    UXTH	R5, R1
0x0238	0x4616    MOV	R6, R2
; config end address is: 8 (R2)
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 20 (R5)
; config start address is: 24 (R6)
;__Lib_GPIO_32F4xx.c, 75 :: 		
;__Lib_GPIO_32F4xx.c, 76 :: 		
;__Lib_GPIO_32F4xx.c, 80 :: 		
0x023A	0x4B86    LDR	R3, [PC, #536]
0x023C	0xEA000303  AND	R3, R0, R3, LSL #0
; port end address is: 0 (R0)
; port start address is: 28 (R7)
0x0240	0x461F    MOV	R7, R3
;__Lib_GPIO_32F4xx.c, 82 :: 		
0x0242	0x4618    MOV	R0, R3
0x0244	0xF7FFFFA0  BL	_GPIO_Clk_Enable+0
;__Lib_GPIO_32F4xx.c, 85 :: 		
0x0248	0xF1B50FFF  CMP	R5, #255
0x024C	0xD120    BNE	L_GPIO_Config22
;__Lib_GPIO_32F4xx.c, 86 :: 		
0x024E	0x683C    LDR	R4, [R7, #0]
;__Lib_GPIO_32F4xx.c, 87 :: 		
0x0250	0x4B81    LDR	R3, [PC, #516]
0x0252	0xEA040303  AND	R3, R4, R3, LSL #0
; tmp start address is: 0 (R0)
0x0256	0x4618    MOV	R0, R3
;__Lib_GPIO_32F4xx.c, 88 :: 		
0x0258	0x4B80    LDR	R3, [PC, #512]
0x025A	0x429E    CMP	R6, R3
0x025C	0xD114    BNE	L_GPIO_Config23
; pin_mask end address is: 20 (R5)
; config end address is: 24 (R6)
;__Lib_GPIO_32F4xx.c, 89 :: 		
0x025E	0xF2455355  MOVW	R3, #21845
0x0262	0xEA400303  ORR	R3, R0, R3, LSL #0
; tmp end address is: 0 (R0)
;__Lib_GPIO_32F4xx.c, 90 :: 		
0x0266	0x603B    STR	R3, [R7, #0]
;__Lib_GPIO_32F4xx.c, 91 :: 		
0x0268	0x1D3D    ADDS	R5, R7, #4
0x026A	0x682C    LDR	R4, [R5, #0]
0x026C	0xF06F03FF  MVN	R3, #255
0x0270	0xEA040303  AND	R3, R4, R3, LSL #0
0x0274	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 92 :: 		
0x0276	0xF2070508  ADDW	R5, R7, #8
; port end address is: 28 (R7)
0x027A	0x682C    LDR	R4, [R5, #0]
0x027C	0xF64F73FF  MOVW	R3, #65535
0x0280	0xEA440303  ORR	R3, R4, R3, LSL #0
0x0284	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 93 :: 		
0x0286	0xE0E1    B	L_end_GPIO_Config
;__Lib_GPIO_32F4xx.c, 94 :: 		
L_GPIO_Config23:
;__Lib_GPIO_32F4xx.c, 95 :: 		
; port start address is: 28 (R7)
; tmp start address is: 0 (R0)
; config start address is: 24 (R6)
; pin_mask start address is: 20 (R5)
0x0288	0x2E42    CMP	R6, #66
0x028A	0xD101    BNE	L_GPIO_Config24
; pin_mask end address is: 20 (R5)
; config end address is: 24 (R6)
;__Lib_GPIO_32F4xx.c, 96 :: 		
0x028C	0x6038    STR	R0, [R7, #0]
; tmp end address is: 0 (R0)
; port end address is: 28 (R7)
;__Lib_GPIO_32F4xx.c, 97 :: 		
0x028E	0xE0DD    B	L_end_GPIO_Config
;__Lib_GPIO_32F4xx.c, 98 :: 		
L_GPIO_Config24:
;__Lib_GPIO_32F4xx.c, 99 :: 		
; port start address is: 28 (R7)
; config start address is: 24 (R6)
; pin_mask start address is: 20 (R5)
L_GPIO_Config22:
;__Lib_GPIO_32F4xx.c, 101 :: 		
0x0290	0x4B73    LDR	R3, [PC, #460]
0x0292	0x429D    CMP	R5, R3
0x0294	0xD113    BNE	L_GPIO_Config25
;__Lib_GPIO_32F4xx.c, 102 :: 		
0x0296	0x4B71    LDR	R3, [PC, #452]
0x0298	0x429E    CMP	R6, R3
0x029A	0xD10B    BNE	L_GPIO_Config26
; pin_mask end address is: 20 (R5)
; config end address is: 24 (R6)
;__Lib_GPIO_32F4xx.c, 103 :: 		
0x029C	0xF04F3355  MOV	R3, #1431655765
0x02A0	0x603B    STR	R3, [R7, #0]
;__Lib_GPIO_32F4xx.c, 104 :: 		
0x02A2	0x1D3C    ADDS	R4, R7, #4
0x02A4	0x2300    MOVS	R3, #0
0x02A6	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F4xx.c, 105 :: 		
0x02A8	0xF2070408  ADDW	R4, R7, #8
; port end address is: 28 (R7)
0x02AC	0xF04F33FF  MOV	R3, #-1
0x02B0	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F4xx.c, 106 :: 		
0x02B2	0xE0CB    B	L_end_GPIO_Config
;__Lib_GPIO_32F4xx.c, 107 :: 		
L_GPIO_Config26:
;__Lib_GPIO_32F4xx.c, 108 :: 		
; port start address is: 28 (R7)
; config start address is: 24 (R6)
; pin_mask start address is: 20 (R5)
0x02B4	0x2E42    CMP	R6, #66
0x02B6	0xD102    BNE	L_GPIO_Config27
; pin_mask end address is: 20 (R5)
; config end address is: 24 (R6)
;__Lib_GPIO_32F4xx.c, 109 :: 		
0x02B8	0x2300    MOVS	R3, #0
0x02BA	0x603B    STR	R3, [R7, #0]
; port end address is: 28 (R7)
;__Lib_GPIO_32F4xx.c, 110 :: 		
0x02BC	0xE0C6    B	L_end_GPIO_Config
;__Lib_GPIO_32F4xx.c, 111 :: 		
L_GPIO_Config27:
;__Lib_GPIO_32F4xx.c, 112 :: 		
; port start address is: 28 (R7)
; config start address is: 24 (R6)
; pin_mask start address is: 20 (R5)
L_GPIO_Config25:
;__Lib_GPIO_32F4xx.c, 114 :: 		
0x02BE	0xF0060301  AND	R3, R6, #1
0x02C2	0xB10B    CBZ	R3, L_GPIO_Config28
;__Lib_GPIO_32F4xx.c, 115 :: 		
; mode start address is: 0 (R0)
0x02C4	0x2003    MOVS	R0, #3
; mode end address is: 0 (R0)
0x02C6	0xE00A    B	L_GPIO_Config29
L_GPIO_Config28:
;__Lib_GPIO_32F4xx.c, 116 :: 		
0x02C8	0xF0060308  AND	R3, R6, #8
0x02CC	0xB10B    CBZ	R3, L_GPIO_Config30
;__Lib_GPIO_32F4xx.c, 117 :: 		
; mode start address is: 0 (R0)
0x02CE	0x2002    MOVS	R0, #2
; mode end address is: 0 (R0)
0x02D0	0xE005    B	L_GPIO_Config31
L_GPIO_Config30:
;__Lib_GPIO_32F4xx.c, 118 :: 		
0x02D2	0xF0060304  AND	R3, R6, #4
0x02D6	0xB10B    CBZ	R3, L_GPIO_Config32
;__Lib_GPIO_32F4xx.c, 119 :: 		
; mode start address is: 0 (R0)
0x02D8	0x2001    MOVS	R0, #1
; mode end address is: 0 (R0)
0x02DA	0xE000    B	L_GPIO_Config33
L_GPIO_Config32:
;__Lib_GPIO_32F4xx.c, 121 :: 		
; mode start address is: 0 (R0)
0x02DC	0x2000    MOVS	R0, #0
; mode end address is: 0 (R0)
L_GPIO_Config33:
; mode start address is: 0 (R0)
; mode end address is: 0 (R0)
L_GPIO_Config31:
; mode start address is: 0 (R0)
; mode end address is: 0 (R0)
L_GPIO_Config29:
;__Lib_GPIO_32F4xx.c, 123 :: 		
; mode start address is: 0 (R0)
0x02DE	0x4B61    LDR	R3, [PC, #388]
0x02E0	0xEA060303  AND	R3, R6, R3, LSL #0
0x02E4	0xB10B    CBZ	R3, L_GPIO_Config34
;__Lib_GPIO_32F4xx.c, 124 :: 		
; speed start address is: 4 (R1)
0x02E6	0x2103    MOVS	R1, #3
; speed end address is: 4 (R1)
0x02E8	0xE00A    B	L_GPIO_Config35
L_GPIO_Config34:
;__Lib_GPIO_32F4xx.c, 125 :: 		
0x02EA	0xF4066380  AND	R3, R6, #1024
0x02EE	0xB10B    CBZ	R3, L_GPIO_Config36
;__Lib_GPIO_32F4xx.c, 126 :: 		
; speed start address is: 4 (R1)
0x02F0	0x2102    MOVS	R1, #2
; speed end address is: 4 (R1)
0x02F2	0xE005    B	L_GPIO_Config37
L_GPIO_Config36:
;__Lib_GPIO_32F4xx.c, 127 :: 		
0x02F4	0xF4067300  AND	R3, R6, #512
0x02F8	0xB10B    CBZ	R3, L_GPIO_Config38
;__Lib_GPIO_32F4xx.c, 128 :: 		
; speed start address is: 4 (R1)
0x02FA	0x2101    MOVS	R1, #1
; speed end address is: 4 (R1)
0x02FC	0xE000    B	L_GPIO_Config39
L_GPIO_Config38:
;__Lib_GPIO_32F4xx.c, 130 :: 		
; speed start address is: 4 (R1)
0x02FE	0x2100    MOVS	R1, #0
; speed end address is: 4 (R1)
L_GPIO_Config39:
; speed start address is: 4 (R1)
; speed end address is: 4 (R1)
L_GPIO_Config37:
; speed start address is: 4 (R1)
; speed end address is: 4 (R1)
L_GPIO_Config35:
;__Lib_GPIO_32F4xx.c, 132 :: 		
; speed start address is: 4 (R1)
0x0300	0xF0060320  AND	R3, R6, #32
0x0304	0xB10B    CBZ	R3, L_GPIO_Config40
;__Lib_GPIO_32F4xx.c, 133 :: 		
; otype start address is: 8 (R2)
0x0306	0x2201    MOVS	R2, #1
; otype end address is: 8 (R2)
0x0308	0xE000    B	L_GPIO_Config41
L_GPIO_Config40:
;__Lib_GPIO_32F4xx.c, 135 :: 		
; otype start address is: 8 (R2)
0x030A	0x2200    MOVS	R2, #0
; otype end address is: 8 (R2)
L_GPIO_Config41:
;__Lib_GPIO_32F4xx.c, 137 :: 		
; otype start address is: 8 (R2)
0x030C	0xF4067380  AND	R3, R6, #256
0x0310	0xB10B    CBZ	R3, L_GPIO_Config42
;__Lib_GPIO_32F4xx.c, 138 :: 		
; pull start address is: 12 (R3)
0x0312	0x2302    MOVS	R3, #2
; pull end address is: 12 (R3)
0x0314	0xE005    B	L_GPIO_Config43
L_GPIO_Config42:
;__Lib_GPIO_32F4xx.c, 139 :: 		
0x0316	0xF0060380  AND	R3, R6, #128
0x031A	0xB10B    CBZ	R3, L_GPIO_Config44
;__Lib_GPIO_32F4xx.c, 140 :: 		
; pull start address is: 12 (R3)
0x031C	0x2301    MOVS	R3, #1
; pull end address is: 12 (R3)
0x031E	0xE000    B	L_GPIO_Config45
L_GPIO_Config44:
;__Lib_GPIO_32F4xx.c, 142 :: 		
; pull start address is: 12 (R3)
0x0320	0x2300    MOVS	R3, #0
; pull end address is: 12 (R3)
L_GPIO_Config45:
; pull start address is: 12 (R3)
; pull end address is: 12 (R3)
L_GPIO_Config43:
;__Lib_GPIO_32F4xx.c, 146 :: 		
; pull start address is: 12 (R3)
; pinpos start address is: 40 (R10)
0x0322	0xF2400A00  MOVW	R10, #0
; pin_mask end address is: 20 (R5)
; config end address is: 24 (R6)
; mode end address is: 0 (R0)
; speed end address is: 4 (R1)
; otype end address is: 8 (R2)
; pull end address is: 12 (R3)
; pinpos end address is: 40 (R10)
0x0326	0x9201    STR	R2, [SP, #4]
0x0328	0xFA1FF985  UXTH	R9, R5
0x032C	0x46B0    MOV	R8, R6
0x032E	0x4606    MOV	R6, R0
0x0330	0x4618    MOV	R0, R3
0x0332	0x460A    MOV	R2, R1
0x0334	0x9901    LDR	R1, [SP, #4]
L_GPIO_Config46:
; pinpos start address is: 40 (R10)
; pin_mask start address is: 36 (R9)
; config start address is: 32 (R8)
; mode start address is: 24 (R6)
; speed start address is: 8 (R2)
; otype start address is: 4 (R1)
; pull start address is: 0 (R0)
; pull start address is: 0 (R0)
; pull end address is: 0 (R0)
; otype start address is: 4 (R1)
; otype end address is: 4 (R1)
; speed start address is: 8 (R2)
; speed end address is: 8 (R2)
; mode start address is: 24 (R6)
; mode end address is: 24 (R6)
; port start address is: 28 (R7)
; port end address is: 28 (R7)
; config start address is: 32 (R8)
; config end address is: 32 (R8)
; pin_mask start address is: 36 (R9)
; pin_mask end address is: 36 (R9)
0x0336	0xF1BA0F10  CMP	R10, #16
0x033A	0xF0808087  BCS	L_GPIO_Config47
; pull end address is: 0 (R0)
; otype end address is: 4 (R1)
; speed end address is: 8 (R2)
; mode end address is: 24 (R6)
; port end address is: 28 (R7)
; config end address is: 32 (R8)
; pin_mask end address is: 36 (R9)
;__Lib_GPIO_32F4xx.c, 148 :: 		
; pin_mask start address is: 36 (R9)
; config start address is: 32 (R8)
; port start address is: 28 (R7)
; mode start address is: 24 (R6)
; speed start address is: 8 (R2)
; otype start address is: 4 (R1)
; pull start address is: 0 (R0)
0x033E	0xF04F0301  MOV	R3, #1
0x0342	0xFA03F40A  LSL	R4, R3, R10
;__Lib_GPIO_32F4xx.c, 150 :: 		
0x0346	0xEA090304  AND	R3, R9, R4, LSL #0
;__Lib_GPIO_32F4xx.c, 152 :: 		
0x034A	0x42A3    CMP	R3, R4
0x034C	0xF040807B  BNE	L_GPIO_Config49
;__Lib_GPIO_32F4xx.c, 154 :: 		
0x0350	0xEA4F044A  LSL	R4, R10, #1
0x0354	0xF04F0303  MOV	R3, #3
0x0358	0x40A3    LSLS	R3, R4
0x035A	0x43DC    MVN	R4, R3
0x035C	0x683B    LDR	R3, [R7, #0]
0x035E	0x4023    ANDS	R3, R4
0x0360	0x603B    STR	R3, [R7, #0]
;__Lib_GPIO_32F4xx.c, 155 :: 		
0x0362	0xEA4F034A  LSL	R3, R10, #1
0x0366	0xFA06F403  LSL	R4, R6, R3
0x036A	0x683B    LDR	R3, [R7, #0]
0x036C	0x4323    ORRS	R3, R4
0x036E	0x603B    STR	R3, [R7, #0]
;__Lib_GPIO_32F4xx.c, 157 :: 		
0x0370	0xF008030C  AND	R3, R8, #12
0x0374	0xB33B    CBZ	R3, L_GPIO_Config50
;__Lib_GPIO_32F4xx.c, 160 :: 		
0x0376	0xF2070508  ADDW	R5, R7, #8
0x037A	0xEA4F044A  LSL	R4, R10, #1
0x037E	0xF04F0303  MOV	R3, #3
0x0382	0x40A3    LSLS	R3, R4
0x0384	0x43DC    MVN	R4, R3
0x0386	0x682B    LDR	R3, [R5, #0]
0x0388	0x4023    ANDS	R3, R4
0x038A	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 161 :: 		
0x038C	0xF2070508  ADDW	R5, R7, #8
0x0390	0xEA4F034A  LSL	R3, R10, #1
0x0394	0xFA02F403  LSL	R4, R2, R3
0x0398	0x682B    LDR	R3, [R5, #0]
0x039A	0x4323    ORRS	R3, R4
0x039C	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 164 :: 		
0x039E	0x1D3D    ADDS	R5, R7, #4
0x03A0	0xFA1FF48A  UXTH	R4, R10
0x03A4	0xF04F0301  MOV	R3, #1
0x03A8	0x40A3    LSLS	R3, R4
0x03AA	0x43DC    MVN	R4, R3
0x03AC	0x682B    LDR	R3, [R5, #0]
0x03AE	0x4023    ANDS	R3, R4
0x03B0	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 165 :: 		
0x03B2	0x1D3D    ADDS	R5, R7, #4
0x03B4	0xFA1FF48A  UXTH	R4, R10
0x03B8	0xB28B    UXTH	R3, R1
0x03BA	0xFA03F404  LSL	R4, R3, R4
0x03BE	0xB2A4    UXTH	R4, R4
0x03C0	0x682B    LDR	R3, [R5, #0]
0x03C2	0x4323    ORRS	R3, R4
0x03C4	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 166 :: 		
L_GPIO_Config50:
;__Lib_GPIO_32F4xx.c, 169 :: 		
0x03C6	0xF207050C  ADDW	R5, R7, #12
0x03CA	0xFA1FF38A  UXTH	R3, R10
0x03CE	0x005C    LSLS	R4, R3, #1
0x03D0	0xB2A4    UXTH	R4, R4
0x03D2	0xF04F0303  MOV	R3, #3
0x03D6	0x40A3    LSLS	R3, R4
0x03D8	0x43DC    MVN	R4, R3
0x03DA	0x682B    LDR	R3, [R5, #0]
0x03DC	0x4023    ANDS	R3, R4
0x03DE	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 170 :: 		
0x03E0	0xF207050C  ADDW	R5, R7, #12
0x03E4	0xEA4F034A  LSL	R3, R10, #1
0x03E8	0xFA00F403  LSL	R4, R0, R3
0x03EC	0x682B    LDR	R3, [R5, #0]
0x03EE	0x4323    ORRS	R3, R4
0x03F0	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 172 :: 		
0x03F2	0xF0080308  AND	R3, R8, #8
0x03F6	0xB333    CBZ	R3, L_GPIO_Config51
;__Lib_GPIO_32F4xx.c, 173 :: 		
0x03F8	0xF4080370  AND	R3, R8, #15728640
0x03FC	0x0D1B    LSRS	R3, R3, #20
0x03FE	0xF88D300C  STRB	R3, [SP, #12]
;__Lib_GPIO_32F4xx.c, 174 :: 		
0x0402	0xF1BA0F07  CMP	R10, #7
0x0406	0xD905    BLS	L_GPIO_Config52
;__Lib_GPIO_32F4xx.c, 175 :: 		
0x0408	0xF2070324  ADDW	R3, R7, #36
0x040C	0x9302    STR	R3, [SP, #8]
;__Lib_GPIO_32F4xx.c, 176 :: 		
0x040E	0xF1AA0508  SUB	R5, R10, #8
; pos start address is: 20 (R5)
;__Lib_GPIO_32F4xx.c, 177 :: 		
; pos end address is: 20 (R5)
0x0412	0xE003    B	L_GPIO_Config53
L_GPIO_Config52:
;__Lib_GPIO_32F4xx.c, 178 :: 		
0x0414	0xF2070320  ADDW	R3, R7, #32
0x0418	0x9302    STR	R3, [SP, #8]
;__Lib_GPIO_32F4xx.c, 179 :: 		
; pos start address is: 20 (R5)
0x041A	0x4655    MOV	R5, R10
; pos end address is: 20 (R5)
;__Lib_GPIO_32F4xx.c, 180 :: 		
L_GPIO_Config53:
;__Lib_GPIO_32F4xx.c, 181 :: 		
; pos start address is: 20 (R5)
0x041C	0x00AC    LSLS	R4, R5, #2
0x041E	0xF04F030F  MOV	R3, #15
0x0422	0x40A3    LSLS	R3, R4
0x0424	0x43DC    MVN	R4, R3
0x0426	0x9B02    LDR	R3, [SP, #8]
0x0428	0x681B    LDR	R3, [R3, #0]
0x042A	0xEA030404  AND	R4, R3, R4, LSL #0
0x042E	0x9B02    LDR	R3, [SP, #8]
0x0430	0x601C    STR	R4, [R3, #0]
;__Lib_GPIO_32F4xx.c, 182 :: 		
0x0432	0xF89D400C  LDRB	R4, [SP, #12]
0x0436	0x00AB    LSLS	R3, R5, #2
; pos end address is: 20 (R5)
0x0438	0x409C    LSLS	R4, R3
0x043A	0x9B02    LDR	R3, [SP, #8]
0x043C	0x681B    LDR	R3, [R3, #0]
0x043E	0xEA430404  ORR	R4, R3, R4, LSL #0
0x0442	0x9B02    LDR	R3, [SP, #8]
0x0444	0x601C    STR	R4, [R3, #0]
;__Lib_GPIO_32F4xx.c, 183 :: 		
L_GPIO_Config51:
;__Lib_GPIO_32F4xx.c, 185 :: 		
L_GPIO_Config49:
;__Lib_GPIO_32F4xx.c, 146 :: 		
0x0446	0xF10A0A01  ADD	R10, R10, #1
;__Lib_GPIO_32F4xx.c, 186 :: 		
; pull end address is: 0 (R0)
; otype end address is: 4 (R1)
; speed end address is: 8 (R2)
; mode end address is: 24 (R6)
; port end address is: 28 (R7)
; config end address is: 32 (R8)
; pin_mask end address is: 36 (R9)
; pinpos end address is: 40 (R10)
0x044A	0xE774    B	L_GPIO_Config46
L_GPIO_Config47:
;__Lib_GPIO_32F4xx.c, 187 :: 		
L_end_GPIO_Config:
0x044C	0xF8DDE000  LDR	LR, [SP, #0]
0x0450	0xB004    ADD	SP, SP, #16
0x0452	0x4770    BX	LR
0x0454	0xFC00FFFF  	#-1024
0x0458	0x0000FFFF  	#-65536
0x045C	0x00140008  	#524308
0x0460	0xFFFF0000  	#65535
0x0464	0x08000008  	#526336
; end of _GPIO_Config
_GPIO_Clk_Enable:
;__Lib_GPIO_32F4xx.c, 26 :: 		
; gpio_port start address is: 0 (R0)
0x0188	0xB081    SUB	SP, SP, #4
; gpio_port end address is: 0 (R0)
; gpio_port start address is: 0 (R0)
;__Lib_GPIO_32F4xx.c, 28 :: 		
0x018A	0x491E    LDR	R1, [PC, #120]
0x018C	0xEA000101  AND	R1, R0, R1, LSL #0
; gpio_port end address is: 0 (R0)
; prt start address is: 0 (R0)
0x0190	0x4608    MOV	R0, R1
;__Lib_GPIO_32F4xx.c, 29 :: 		
; pos start address is: 8 (R2)
0x0192	0x2200    MOVS	R2, #0
;__Lib_GPIO_32F4xx.c, 30 :: 		
0x0194	0xE012    B	L_GPIO_Clk_Enable0
; prt end address is: 0 (R0)
; pos end address is: 8 (R2)
;__Lib_GPIO_32F4xx.c, 31 :: 		
L_GPIO_Clk_Enable2:
; pos start address is: 0 (R0)
0x0196	0x2001    MOVS	R0, #1
; pos end address is: 0 (R0)
0x0198	0xE02C    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 32 :: 		
L_GPIO_Clk_Enable3:
; pos start address is: 0 (R0)
0x019A	0x2002    MOVS	R0, #2
; pos end address is: 0 (R0)
0x019C	0xE02A    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 33 :: 		
L_GPIO_Clk_Enable4:
; pos start address is: 0 (R0)
0x019E	0x2004    MOVS	R0, #4
; pos end address is: 0 (R0)
0x01A0	0xE028    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 34 :: 		
L_GPIO_Clk_Enable5:
; pos start address is: 0 (R0)
0x01A2	0x2008    MOVS	R0, #8
; pos end address is: 0 (R0)
0x01A4	0xE026    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 35 :: 		
L_GPIO_Clk_Enable6:
; pos start address is: 0 (R0)
0x01A6	0x2010    MOVS	R0, #16
; pos end address is: 0 (R0)
0x01A8	0xE024    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 36 :: 		
L_GPIO_Clk_Enable7:
; pos start address is: 0 (R0)
0x01AA	0x2020    MOVS	R0, #32
; pos end address is: 0 (R0)
0x01AC	0xE022    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 37 :: 		
L_GPIO_Clk_Enable8:
; pos start address is: 0 (R0)
0x01AE	0x2040    MOVS	R0, #64
; pos end address is: 0 (R0)
0x01B0	0xE020    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 38 :: 		
L_GPIO_Clk_Enable9:
; pos start address is: 0 (R0)
0x01B2	0x2080    MOVS	R0, #128
; pos end address is: 0 (R0)
0x01B4	0xE01E    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 39 :: 		
L_GPIO_Clk_Enable10:
; pos start address is: 0 (R0)
0x01B6	0xF2401000  MOVW	R0, #256
; pos end address is: 0 (R0)
0x01BA	0xE01B    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 40 :: 		
L_GPIO_Clk_Enable0:
; pos start address is: 8 (R2)
; prt start address is: 0 (R0)
0x01BC	0x4912    LDR	R1, [PC, #72]
0x01BE	0x4288    CMP	R0, R1
0x01C0	0xD0E9    BEQ	L_GPIO_Clk_Enable2
0x01C2	0x4912    LDR	R1, [PC, #72]
0x01C4	0x4288    CMP	R0, R1
0x01C6	0xD0E8    BEQ	L_GPIO_Clk_Enable3
0x01C8	0x4911    LDR	R1, [PC, #68]
0x01CA	0x4288    CMP	R0, R1
0x01CC	0xD0E7    BEQ	L_GPIO_Clk_Enable4
0x01CE	0x4911    LDR	R1, [PC, #68]
0x01D0	0x4288    CMP	R0, R1
0x01D2	0xD0E6    BEQ	L_GPIO_Clk_Enable5
0x01D4	0x4910    LDR	R1, [PC, #64]
0x01D6	0x4288    CMP	R0, R1
0x01D8	0xD0E5    BEQ	L_GPIO_Clk_Enable6
0x01DA	0x4910    LDR	R1, [PC, #64]
0x01DC	0x4288    CMP	R0, R1
0x01DE	0xD0E4    BEQ	L_GPIO_Clk_Enable7
0x01E0	0x490F    LDR	R1, [PC, #60]
0x01E2	0x4288    CMP	R0, R1
0x01E4	0xD0E3    BEQ	L_GPIO_Clk_Enable8
0x01E6	0x490F    LDR	R1, [PC, #60]
0x01E8	0x4288    CMP	R0, R1
0x01EA	0xD0E2    BEQ	L_GPIO_Clk_Enable9
0x01EC	0x490E    LDR	R1, [PC, #56]
0x01EE	0x4288    CMP	R0, R1
0x01F0	0xD0E1    BEQ	L_GPIO_Clk_Enable10
; prt end address is: 0 (R0)
; pos end address is: 8 (R2)
0x01F2	0x4610    MOV	R0, R2
L_GPIO_Clk_Enable1:
;__Lib_GPIO_32F4xx.c, 42 :: 		
; pos start address is: 0 (R0)
0x01F4	0x490D    LDR	R1, [PC, #52]
0x01F6	0x6809    LDR	R1, [R1, #0]
0x01F8	0xEA410200  ORR	R2, R1, R0, LSL #0
; pos end address is: 0 (R0)
0x01FC	0x490B    LDR	R1, [PC, #44]
0x01FE	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_32F4xx.c, 43 :: 		
L_end_GPIO_Clk_Enable:
0x0200	0xB001    ADD	SP, SP, #4
0x0202	0x4770    BX	LR
0x0204	0xFC00FFFF  	#-1024
0x0208	0x00004002  	#1073872896
0x020C	0x04004002  	#1073873920
0x0210	0x08004002  	#1073874944
0x0214	0x0C004002  	#1073875968
0x0218	0x10004002  	#1073876992
0x021C	0x14004002  	#1073878016
0x0220	0x18004002  	#1073879040
0x0224	0x1C004002  	#1073880064
0x0228	0x20004002  	#1073881088
0x022C	0x38304002  	RCC_AHB1ENR+0
; end of _GPIO_Clk_Enable
_UART4_Init_Advanced:
;__Lib_UART_123_45_6.c, 422 :: 		
; stop_bits start address is: 12 (R3)
; parity start address is: 8 (R2)
; data_bits start address is: 4 (R1)
; baud_rate start address is: 0 (R0)
0x27E4	0xB081    SUB	SP, SP, #4
0x27E6	0xF8CDE000  STR	LR, [SP, #0]
; stop_bits end address is: 12 (R3)
; parity end address is: 8 (R2)
; data_bits end address is: 4 (R1)
; baud_rate end address is: 0 (R0)
; baud_rate start address is: 0 (R0)
; data_bits start address is: 4 (R1)
; parity start address is: 8 (R2)
; stop_bits start address is: 12 (R3)
; module start address is: 20 (R5)
0x27EA	0x9D01    LDR	R5, [SP, #4]
;__Lib_UART_123_45_6.c, 424 :: 		
0x27EC	0x462C    MOV	R4, R5
; module end address is: 20 (R5)
0x27EE	0xB410    PUSH	(R4)
; parity end address is: 8 (R2)
0x27F0	0xB408    PUSH	(R3)
0x27F2	0xB293    UXTH	R3, R2
0x27F4	0xB28A    UXTH	R2, R1
; data_bits end address is: 4 (R1)
0x27F6	0x4601    MOV	R1, R0
; baud_rate end address is: 0 (R0)
0x27F8	0x4803    LDR	R0, [PC, #12]
; stop_bits end address is: 12 (R3)
0x27FA	0xF7FEFCA9  BL	__Lib_UART_123_45_6_UARTx_Init_Advanced+0
0x27FE	0xB002    ADD	SP, SP, #8
;__Lib_UART_123_45_6.c, 425 :: 		
L_end_UART4_Init_Advanced:
0x2800	0xF8DDE000  LDR	LR, [SP, #0]
0x2804	0xB001    ADD	SP, SP, #4
0x2806	0x4770    BX	LR
0x2808	0x4C004000  	UART4_SR+0
; end of _UART4_Init_Advanced
_UART1_Init_Advanced:
;__Lib_UART_123_45_6.c, 404 :: 		
; stop_bits start address is: 12 (R3)
; parity start address is: 8 (R2)
; data_bits start address is: 4 (R1)
; baud_rate start address is: 0 (R0)
0x280C	0xB081    SUB	SP, SP, #4
0x280E	0xF8CDE000  STR	LR, [SP, #0]
; stop_bits end address is: 12 (R3)
; parity end address is: 8 (R2)
; data_bits end address is: 4 (R1)
; baud_rate end address is: 0 (R0)
; baud_rate start address is: 0 (R0)
; data_bits start address is: 4 (R1)
; parity start address is: 8 (R2)
; stop_bits start address is: 12 (R3)
; module start address is: 20 (R5)
0x2812	0x9D01    LDR	R5, [SP, #4]
;__Lib_UART_123_45_6.c, 406 :: 		
0x2814	0x462C    MOV	R4, R5
; module end address is: 20 (R5)
0x2816	0xB410    PUSH	(R4)
; parity end address is: 8 (R2)
0x2818	0xB408    PUSH	(R3)
0x281A	0xB293    UXTH	R3, R2
0x281C	0xB28A    UXTH	R2, R1
; data_bits end address is: 4 (R1)
0x281E	0x4601    MOV	R1, R0
; baud_rate end address is: 0 (R0)
0x2820	0x4803    LDR	R0, [PC, #12]
; stop_bits end address is: 12 (R3)
0x2822	0xF7FEFC95  BL	__Lib_UART_123_45_6_UARTx_Init_Advanced+0
0x2826	0xB002    ADD	SP, SP, #8
;__Lib_UART_123_45_6.c, 407 :: 		
L_end_UART1_Init_Advanced:
0x2828	0xF8DDE000  LDR	LR, [SP, #0]
0x282C	0xB001    ADD	SP, SP, #4
0x282E	0x4770    BX	LR
0x2830	0x10004001  	USART1_SR+0
; end of _UART1_Init_Advanced
_UART3_Init_Advanced:
;__Lib_UART_123_45_6.c, 416 :: 		
; stop_bits start address is: 12 (R3)
; parity start address is: 8 (R2)
; data_bits start address is: 4 (R1)
; baud_rate start address is: 0 (R0)
0x27A0	0xB081    SUB	SP, SP, #4
0x27A2	0xF8CDE000  STR	LR, [SP, #0]
; stop_bits end address is: 12 (R3)
; parity end address is: 8 (R2)
; data_bits end address is: 4 (R1)
; baud_rate end address is: 0 (R0)
; baud_rate start address is: 0 (R0)
; data_bits start address is: 4 (R1)
; parity start address is: 8 (R2)
; stop_bits start address is: 12 (R3)
; module start address is: 20 (R5)
0x27A6	0x9D01    LDR	R5, [SP, #4]
;__Lib_UART_123_45_6.c, 418 :: 		
0x27A8	0x462C    MOV	R4, R5
; module end address is: 20 (R5)
0x27AA	0xB410    PUSH	(R4)
; parity end address is: 8 (R2)
0x27AC	0xB408    PUSH	(R3)
0x27AE	0xB293    UXTH	R3, R2
0x27B0	0xB28A    UXTH	R2, R1
; data_bits end address is: 4 (R1)
0x27B2	0x4601    MOV	R1, R0
; baud_rate end address is: 0 (R0)
0x27B4	0x4803    LDR	R0, [PC, #12]
; stop_bits end address is: 12 (R3)
0x27B6	0xF7FEFCCB  BL	__Lib_UART_123_45_6_UARTx_Init_Advanced+0
0x27BA	0xB002    ADD	SP, SP, #8
;__Lib_UART_123_45_6.c, 419 :: 		
L_end_UART3_Init_Advanced:
0x27BC	0xF8DDE000  LDR	LR, [SP, #0]
0x27C0	0xB001    ADD	SP, SP, #4
0x27C2	0x4770    BX	LR
0x27C4	0x48004000  	USART3_SR+0
; end of _UART3_Init_Advanced
_I2C1_Init_Advanced:
;__Lib_I2C_123.c, 565 :: 		
; module start address is: 4 (R1)
; I2C_ClockSpeed start address is: 0 (R0)
0x27C8	0xB081    SUB	SP, SP, #4
0x27CA	0xF8CDE000  STR	LR, [SP, #0]
; module end address is: 4 (R1)
; I2C_ClockSpeed end address is: 0 (R0)
; I2C_ClockSpeed start address is: 0 (R0)
; module start address is: 4 (R1)
;__Lib_I2C_123.c, 566 :: 		
0x27CE	0x460A    MOV	R2, R1
; module end address is: 4 (R1)
0x27D0	0x4601    MOV	R1, R0
; I2C_ClockSpeed end address is: 0 (R0)
0x27D2	0x4803    LDR	R0, [PC, #12]
0x27D4	0xF7FEFBD2  BL	_I2Cx_Init_Advanced+0
;__Lib_I2C_123.c, 567 :: 		
L_end_I2C1_Init_Advanced:
0x27D8	0xF8DDE000  LDR	LR, [SP, #0]
0x27DC	0xB001    ADD	SP, SP, #4
0x27DE	0x4770    BX	LR
0x27E0	0x54004000  	I2C1_CR1+0
; end of _I2C1_Init_Advanced
_I2Cx_Init_Advanced:
;__Lib_I2C_123.c, 642 :: 		
; module start address is: 8 (R2)
; I2C_ClockSpeed start address is: 4 (R1)
; I2C_BASE start address is: 0 (R0)
0x0F7C	0xB088    SUB	SP, SP, #32
0x0F7E	0xF8CDE000  STR	LR, [SP, #0]
0x0F82	0x460E    MOV	R6, R1
; module end address is: 8 (R2)
; I2C_ClockSpeed end address is: 4 (R1)
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 0 (R0)
; I2C_ClockSpeed start address is: 24 (R6)
; module start address is: 8 (R2)
;__Lib_I2C_123.c, 644 :: 		
;__Lib_I2C_123.c, 651 :: 		
0x0F84	0x4B5E    LDR	R3, [PC, #376]
0x0F86	0x4298    CMP	R0, R3
0x0F88	0xD10D    BNE	L_I2Cx_Init_Advanced120
;__Lib_I2C_123.c, 652 :: 		
0x0F8A	0x2401    MOVS	R4, #1
0x0F8C	0xB264    SXTB	R4, R4
0x0F8E	0x4B5D    LDR	R3, [PC, #372]
0x0F90	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_123.c, 653 :: 		
0x0F92	0x4C5D    LDR	R4, [PC, #372]
0x0F94	0x4B5D    LDR	R3, [PC, #372]
0x0F96	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_123.c, 654 :: 		
0x0F98	0x4C5D    LDR	R4, [PC, #372]
0x0F9A	0x4B5E    LDR	R3, [PC, #376]
0x0F9C	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_123.c, 655 :: 		
0x0F9E	0x4C5E    LDR	R4, [PC, #376]
0x0FA0	0x4B5E    LDR	R3, [PC, #376]
0x0FA2	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_123.c, 656 :: 		
0x0FA4	0xE020    B	L_I2Cx_Init_Advanced121
L_I2Cx_Init_Advanced120:
;__Lib_I2C_123.c, 657 :: 		
0x0FA6	0x4B5E    LDR	R3, [PC, #376]
0x0FA8	0x4298    CMP	R0, R3
0x0FAA	0xD10D    BNE	L_I2Cx_Init_Advanced122
;__Lib_I2C_123.c, 658 :: 		
0x0FAC	0x2401    MOVS	R4, #1
0x0FAE	0xB264    SXTB	R4, R4
0x0FB0	0x4B5C    LDR	R3, [PC, #368]
0x0FB2	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_123.c, 659 :: 		
0x0FB4	0x4C5C    LDR	R4, [PC, #368]
0x0FB6	0x4B55    LDR	R3, [PC, #340]
0x0FB8	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_123.c, 660 :: 		
0x0FBA	0x4C5C    LDR	R4, [PC, #368]
0x0FBC	0x4B55    LDR	R3, [PC, #340]
0x0FBE	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_123.c, 661 :: 		
0x0FC0	0x4C5B    LDR	R4, [PC, #364]
0x0FC2	0x4B56    LDR	R3, [PC, #344]
0x0FC4	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_123.c, 662 :: 		
0x0FC6	0xE00F    B	L_I2Cx_Init_Advanced123
L_I2Cx_Init_Advanced122:
;__Lib_I2C_123.c, 663 :: 		
0x0FC8	0x4B5A    LDR	R3, [PC, #360]
0x0FCA	0x4298    CMP	R0, R3
0x0FCC	0xD10C    BNE	L_I2Cx_Init_Advanced124
;__Lib_I2C_123.c, 664 :: 		
0x0FCE	0x2401    MOVS	R4, #1
0x0FD0	0xB264    SXTB	R4, R4
0x0FD2	0x4B59    LDR	R3, [PC, #356]
0x0FD4	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_123.c, 665 :: 		
0x0FD6	0x4C59    LDR	R4, [PC, #356]
0x0FD8	0x4B4C    LDR	R3, [PC, #304]
0x0FDA	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_123.c, 666 :: 		
0x0FDC	0x4C58    LDR	R4, [PC, #352]
0x0FDE	0x4B4D    LDR	R3, [PC, #308]
0x0FE0	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_123.c, 667 :: 		
0x0FE2	0x4C58    LDR	R4, [PC, #352]
0x0FE4	0x4B4D    LDR	R3, [PC, #308]
0x0FE6	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_123.c, 668 :: 		
L_I2Cx_Init_Advanced124:
L_I2Cx_Init_Advanced123:
L_I2Cx_Init_Advanced121:
;__Lib_I2C_123.c, 669 :: 		
0x0FE8	0x9601    STR	R6, [SP, #4]
; module end address is: 8 (R2)
0x0FEA	0x9002    STR	R0, [SP, #8]
0x0FEC	0x4610    MOV	R0, R2
0x0FEE	0xF7FFFBDF  BL	_GPIO_Alternate_Function_Enable+0
0x0FF2	0x9802    LDR	R0, [SP, #8]
0x0FF4	0x9E01    LDR	R6, [SP, #4]
;__Lib_I2C_123.c, 674 :: 		
0x0FF6	0x1D03    ADDS	R3, R0, #4
0x0FF8	0x681B    LDR	R3, [R3, #0]
;__Lib_I2C_123.c, 676 :: 		
0x0FFA	0xB29C    UXTH	R4, R3
0x0FFC	0xF06F033F  MVN	R3, #63
0x1000	0xEA040303  AND	R3, R4, R3, LSL #0
; tmpreg start address is: 20 (R5)
0x1004	0xB29D    UXTH	R5, R3
;__Lib_I2C_123.c, 678 :: 		
0x1006	0xAB03    ADD	R3, SP, #12
0x1008	0x9001    STR	R0, [SP, #4]
0x100A	0x4618    MOV	R0, R3
0x100C	0xF7FFFB8E  BL	_RCC_GetClocksFrequency+0
0x1010	0x9801    LDR	R0, [SP, #4]
;__Lib_I2C_123.c, 679 :: 		
; pclk1 start address is: 28 (R7)
0x1012	0x9F05    LDR	R7, [SP, #20]
;__Lib_I2C_123.c, 681 :: 		
0x1014	0x9C05    LDR	R4, [SP, #20]
0x1016	0x4B4C    LDR	R3, [PC, #304]
0x1018	0xFBB4F3F3  UDIV	R3, R4, R3
; freqrange start address is: 4 (R1)
0x101C	0xB299    UXTH	R1, R3
;__Lib_I2C_123.c, 682 :: 		
0x101E	0xB29B    UXTH	R3, R3
0x1020	0xEA450403  ORR	R4, R5, R3, LSL #0
0x1024	0xB2A4    UXTH	R4, R4
; tmpreg end address is: 20 (R5)
;__Lib_I2C_123.c, 684 :: 		
0x1026	0x1D03    ADDS	R3, R0, #4
0x1028	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_123.c, 688 :: 		
0x102A	0x2400    MOVS	R4, #0
0x102C	0x6803    LDR	R3, [R0, #0]
0x102E	0xF3640300  BFI	R3, R4, #0, #1
0x1032	0x6003    STR	R3, [R0, #0]
;__Lib_I2C_123.c, 691 :: 		
; tmpreg start address is: 8 (R2)
0x1034	0x2200    MOVS	R2, #0
;__Lib_I2C_123.c, 694 :: 		
0x1036	0x4B45    LDR	R3, [PC, #276]
0x1038	0x429E    CMP	R6, R3
0x103A	0xD812    BHI	L_I2Cx_Init_Advanced125
;__Lib_I2C_123.c, 697 :: 		
0x103C	0x0073    LSLS	R3, R6, #1
; I2C_ClockSpeed end address is: 24 (R6)
0x103E	0xFBB7F4F3  UDIV	R4, R7, R3
; pclk1 end address is: 28 (R7)
; result start address is: 16 (R4)
0x1042	0xB2A4    UXTH	R4, R4
;__Lib_I2C_123.c, 699 :: 		
0x1044	0x2C04    CMP	R4, #4
0x1046	0xD202    BCS	L__I2Cx_Init_Advanced154
; result end address is: 16 (R4)
;__Lib_I2C_123.c, 702 :: 		
; result start address is: 12 (R3)
0x1048	0x2304    MOVS	R3, #4
; result end address is: 12 (R3)
0x104A	0x461C    MOV	R4, R3
;__Lib_I2C_123.c, 703 :: 		
0x104C	0xE7FF    B	L_I2Cx_Init_Advanced126
L__I2Cx_Init_Advanced154:
;__Lib_I2C_123.c, 699 :: 		
;__Lib_I2C_123.c, 703 :: 		
L_I2Cx_Init_Advanced126:
;__Lib_I2C_123.c, 705 :: 		
; result start address is: 16 (R4)
0x104E	0xEA420304  ORR	R3, R2, R4, LSL #0
; result end address is: 16 (R4)
0x1052	0xB29A    UXTH	R2, R3
;__Lib_I2C_123.c, 707 :: 		
0x1054	0xF2000420  ADDW	R4, R0, #32
0x1058	0x1C4B    ADDS	R3, R1, #1
0x105A	0xB29B    UXTH	R3, R3
; freqrange end address is: 4 (R1)
0x105C	0x6023    STR	R3, [R4, #0]
;__Lib_I2C_123.c, 708 :: 		
0x105E	0xB291    UXTH	R1, R2
0x1060	0xE03F    B	L_I2Cx_Init_Advanced127
L_I2Cx_Init_Advanced125:
;__Lib_I2C_123.c, 713 :: 		
; freqrange start address is: 4 (R1)
; pclk1 start address is: 28 (R7)
; I2C_ClockSpeed start address is: 24 (R6)
0x1062	0x2303    MOVS	R3, #3
0x1064	0xFB06F403  MUL	R4, R6, R3
0x1068	0xFBB7F3F4  UDIV	R3, R7, R4
; result start address is: 32 (R8)
0x106C	0xFA1FF883  UXTH	R8, R3
;__Lib_I2C_123.c, 716 :: 		
0x1070	0x2319    MOVS	R3, #25
0x1072	0xFB06F503  MUL	R5, R6, R3
0x1076	0xFBB7F3F5  UDIV	R3, R7, R5
; result25 start address is: 36 (R9)
0x107A	0xFA1FF983  UXTH	R9, R3
;__Lib_I2C_123.c, 718 :: 		
0x107E	0xFB08F404  MUL	R4, R8, R4
; result end address is: 32 (R8)
;__Lib_I2C_123.c, 720 :: 		
0x1082	0xFB09F305  MUL	R3, R9, R5
; result25 end address is: 36 (R9)
;__Lib_I2C_123.c, 722 :: 		
0x1086	0x1B3C    SUB	R4, R7, R4
0x1088	0x1AFB    SUB	R3, R7, R3
0x108A	0x429C    CMP	R4, R3
0x108C	0xD205    BCS	L_I2Cx_Init_Advanced128
;__Lib_I2C_123.c, 723 :: 		
0x108E	0x2303    MOVS	R3, #3
0x1090	0x4373    MULS	R3, R6, R3
; I2C_ClockSpeed end address is: 24 (R6)
0x1092	0xFBB7F4F3  UDIV	R4, R7, R3
; pclk1 end address is: 28 (R7)
; result start address is: 16 (R4)
0x1096	0xB2A4    UXTH	R4, R4
;__Lib_I2C_123.c, 724 :: 		
; result end address is: 16 (R4)
0x1098	0xE006    B	L_I2Cx_Init_Advanced129
L_I2Cx_Init_Advanced128:
;__Lib_I2C_123.c, 726 :: 		
; pclk1 start address is: 28 (R7)
; I2C_ClockSpeed start address is: 24 (R6)
0x109A	0x2319    MOVS	R3, #25
0x109C	0x4373    MULS	R3, R6, R3
; I2C_ClockSpeed end address is: 24 (R6)
0x109E	0xFBB7F4F3  UDIV	R4, R7, R3
; pclk1 end address is: 28 (R7)
; result start address is: 16 (R4)
0x10A2	0xB2A4    UXTH	R4, R4
;__Lib_I2C_123.c, 727 :: 		
0x10A4	0xF4444480  ORR	R4, R4, #16384
; result end address is: 16 (R4)
;__Lib_I2C_123.c, 728 :: 		
L_I2Cx_Init_Advanced129:
;__Lib_I2C_123.c, 731 :: 		
; result start address is: 16 (R4)
0x10A8	0xF64073FF  MOVW	R3, #4095
0x10AC	0xEA040303  AND	R3, R4, R3, LSL #0
0x10B0	0xB913    CBNZ	R3, L__I2Cx_Init_Advanced155
;__Lib_I2C_123.c, 734 :: 		
0x10B2	0xF0440401  ORR	R4, R4, #1
; result end address is: 16 (R4)
;__Lib_I2C_123.c, 735 :: 		
0x10B6	0xE7FF    B	L_I2Cx_Init_Advanced130
L__I2Cx_Init_Advanced155:
;__Lib_I2C_123.c, 731 :: 		
;__Lib_I2C_123.c, 735 :: 		
L_I2Cx_Init_Advanced130:
;__Lib_I2C_123.c, 737 :: 		
; result start address is: 16 (R4)
0x10B8	0xF4444300  ORR	R3, R4, #32768
; result end address is: 16 (R4)
0x10BC	0xB29B    UXTH	R3, R3
0x10BE	0x431A    ORRS	R2, R3
0x10C0	0xB292    UXTH	R2, R2
;__Lib_I2C_123.c, 739 :: 		
0x10C2	0xF2000520  ADDW	R5, R0, #32
0x10C6	0xF240132C  MOVW	R3, #300
0x10CA	0xFB01F403  MUL	R4, R1, R3
0x10CE	0xB2A4    UXTH	R4, R4
; freqrange end address is: 4 (R1)
0x10D0	0xF24033E8  MOVW	R3, #1000
0x10D4	0xFBB4F3F3  UDIV	R3, R4, R3
0x10D8	0xB29B    UXTH	R3, R3
0x10DA	0x1C5B    ADDS	R3, R3, #1
0x10DC	0xB29B    UXTH	R3, R3
0x10DE	0x602B    STR	R3, [R5, #0]
; tmpreg end address is: 8 (R2)
0x10E0	0xB291    UXTH	R1, R2
;__Lib_I2C_123.c, 740 :: 		
L_I2Cx_Init_Advanced127:
;__Lib_I2C_123.c, 742 :: 		
; tmpreg start address is: 4 (R1)
0x10E2	0xF200031C  ADDW	R3, R0, #28
0x10E6	0x6019    STR	R1, [R3, #0]
; tmpreg end address is: 4 (R1)
;__Lib_I2C_123.c, 744 :: 		
0x10E8	0x2300    MOVS	R3, #0
0x10EA	0x6003    STR	R3, [R0, #0]
;__Lib_I2C_123.c, 745 :: 		
0x10EC	0x2401    MOVS	R4, #1
0x10EE	0x6803    LDR	R3, [R0, #0]
0x10F0	0xF3640300  BFI	R3, R4, #0, #1
0x10F4	0x6003    STR	R3, [R0, #0]
; I2C_BASE end address is: 0 (R0)
;__Lib_I2C_123.c, 746 :: 		
L_end_I2Cx_Init_Advanced:
0x10F6	0xF8DDE000  LDR	LR, [SP, #0]
0x10FA	0xB008    ADD	SP, SP, #32
0x10FC	0x4770    BX	LR
0x10FE	0xBF00    NOP
0x1100	0x54004000  	I2C1_CR1+0
0x1104	0x08544247  	RCC_APB1ENR+0
0x1108	0xFFFFFFFF  	_I2C1_Start+0
0x110C	0x0A102000  	_I2C_Start_Ptr+0
0x1110	0xFFFFFFFF  	_I2C1_Read+0
0x1114	0x0A142000  	_I2C_Read_Ptr+0
0x1118	0xFFFFFFFF  	_I2C1_Write+0
0x111C	0x0A182000  	_I2C_Write_Ptr+0
0x1120	0x58004000  	I2C2_CR1+0
0x1124	0x08584247  	RCC_APB1ENR+0
0x1128	0xFFFFFFFF  	_I2C2_Start+0
0x112C	0xFFFFFFFF  	_I2C2_Read+0
0x1130	0xFFFFFFFF  	_I2C2_Write+0
0x1134	0x5C004000  	I2C3_CR1+0
0x1138	0x085C4247  	RCC_APB1ENR+0
0x113C	0xFFFFFFFF  	_I2C3_Start+0
0x1140	0xFFFFFFFF  	_I2C3_Read+0
0x1144	0xFFFFFFFF  	_I2C3_Write+0
0x1148	0x4240000F  	#1000000
0x114C	0x86A00001  	#100000
; end of _I2Cx_Init_Advanced
_GPIO_Digital_Output:
;__Lib_GPIO_32F4xx.c, 233 :: 		
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x248C	0xB081    SUB	SP, SP, #4
0x248E	0xF8CDE000  STR	LR, [SP, #0]
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 4 (R1)
;__Lib_GPIO_32F4xx.c, 234 :: 		
0x2492	0x4A04    LDR	R2, [PC, #16]
0x2494	0xB289    UXTH	R1, R1
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
0x2496	0xF7FDFECB  BL	_GPIO_Config+0
;__Lib_GPIO_32F4xx.c, 235 :: 		
L_end_GPIO_Digital_Output:
0x249A	0xF8DDE000  LDR	LR, [SP, #0]
0x249E	0xB001    ADD	SP, SP, #4
0x24A0	0x4770    BX	LR
0x24A2	0xBF00    NOP
0x24A4	0x00140008  	#524308
; end of _GPIO_Digital_Output
_PWM_TIM3_Init:
;__Lib_PWM_1234589_12_10_11_13_14.c, 234 :: 		
; freq_hz start address is: 0 (R0)
0x24A8	0xB081    SUB	SP, SP, #4
0x24AA	0xF8CDE000  STR	LR, [SP, #0]
; freq_hz end address is: 0 (R0)
; freq_hz start address is: 0 (R0)
;__Lib_PWM_1234589_12_10_11_13_14.c, 235 :: 		
0x24AE	0x4601    MOV	R1, R0
; freq_hz end address is: 0 (R0)
0x24B0	0x4803    LDR	R0, [PC, #12]
0x24B2	0xF7FFF815  BL	__Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init+0
;__Lib_PWM_1234589_12_10_11_13_14.c, 236 :: 		
L_end_PWM_TIM3_Init:
0x24B6	0xF8DDE000  LDR	LR, [SP, #0]
0x24BA	0xB001    ADD	SP, SP, #4
0x24BC	0x4770    BX	LR
0x24BE	0xBF00    NOP
0x24C0	0x04004000  	TIM3_CR1+0
; end of _PWM_TIM3_Init
__Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init:
;__Lib_PWM_1234589_12_10_11_13_14.c, 35 :: 		
; freq_hz start address is: 4 (R1)
; PWM_Base start address is: 0 (R0)
0x14E0	0xB081    SUB	SP, SP, #4
0x14E2	0xF8CDE000  STR	LR, [SP, #0]
0x14E6	0x460C    MOV	R4, R1
0x14E8	0x4601    MOV	R1, R0
; freq_hz end address is: 4 (R1)
; PWM_Base end address is: 0 (R0)
; PWM_Base start address is: 4 (R1)
; freq_hz start address is: 16 (R4)
;__Lib_PWM_1234589_12_10_11_13_14.c, 39 :: 		
0x14EA	0xF06F02FF  MVN	R2, #255
0x14EE	0xEA010202  AND	R2, R1, R2, LSL #0
; _PWM_Base start address is: 0 (R0)
0x14F2	0x4610    MOV	R0, R2
;__Lib_PWM_1234589_12_10_11_13_14.c, 41 :: 		
0x14F4	0xE03B    B	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init0
; _PWM_Base end address is: 0 (R0)
;__Lib_PWM_1234589_12_10_11_13_14.c, 43 :: 		
L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init2:
;__Lib_PWM_1234589_12_10_11_13_14.c, 44 :: 		
0x14F6	0x2301    MOVS	R3, #1
0x14F8	0xB25B    SXTB	R3, R3
0x14FA	0x4A41    LDR	R2, [PC, #260]
0x14FC	0x6013    STR	R3, [R2, #0]
;__Lib_PWM_1234589_12_10_11_13_14.c, 45 :: 		
0x14FE	0xE05A    B	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init1
;__Lib_PWM_1234589_12_10_11_13_14.c, 48 :: 		
L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init3:
;__Lib_PWM_1234589_12_10_11_13_14.c, 49 :: 		
0x1500	0x2301    MOVS	R3, #1
0x1502	0xB25B    SXTB	R3, R3
0x1504	0x4A3F    LDR	R2, [PC, #252]
0x1506	0x6013    STR	R3, [R2, #0]
;__Lib_PWM_1234589_12_10_11_13_14.c, 50 :: 		
0x1508	0xE055    B	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init1
;__Lib_PWM_1234589_12_10_11_13_14.c, 53 :: 		
L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init4:
;__Lib_PWM_1234589_12_10_11_13_14.c, 54 :: 		
0x150A	0x2301    MOVS	R3, #1
0x150C	0xB25B    SXTB	R3, R3
0x150E	0x4A3E    LDR	R2, [PC, #248]
0x1510	0x6013    STR	R3, [R2, #0]
;__Lib_PWM_1234589_12_10_11_13_14.c, 55 :: 		
0x1512	0xE050    B	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init1
;__Lib_PWM_1234589_12_10_11_13_14.c, 58 :: 		
L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init5:
;__Lib_PWM_1234589_12_10_11_13_14.c, 59 :: 		
0x1514	0x2301    MOVS	R3, #1
0x1516	0xB25B    SXTB	R3, R3
0x1518	0x4A3C    LDR	R2, [PC, #240]
0x151A	0x6013    STR	R3, [R2, #0]
;__Lib_PWM_1234589_12_10_11_13_14.c, 60 :: 		
0x151C	0xE04B    B	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init1
;__Lib_PWM_1234589_12_10_11_13_14.c, 63 :: 		
L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init6:
;__Lib_PWM_1234589_12_10_11_13_14.c, 64 :: 		
0x151E	0x2301    MOVS	R3, #1
0x1520	0xB25B    SXTB	R3, R3
0x1522	0x4A3B    LDR	R2, [PC, #236]
0x1524	0x6013    STR	R3, [R2, #0]
;__Lib_PWM_1234589_12_10_11_13_14.c, 65 :: 		
0x1526	0xE046    B	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init1
;__Lib_PWM_1234589_12_10_11_13_14.c, 68 :: 		
L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init7:
;__Lib_PWM_1234589_12_10_11_13_14.c, 69 :: 		
0x1528	0x2301    MOVS	R3, #1
0x152A	0xB25B    SXTB	R3, R3
0x152C	0x4A39    LDR	R2, [PC, #228]
0x152E	0x6013    STR	R3, [R2, #0]
;__Lib_PWM_1234589_12_10_11_13_14.c, 70 :: 		
0x1530	0xE041    B	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init1
;__Lib_PWM_1234589_12_10_11_13_14.c, 73 :: 		
L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init8:
;__Lib_PWM_1234589_12_10_11_13_14.c, 74 :: 		
0x1532	0x2301    MOVS	R3, #1
0x1534	0xB25B    SXTB	R3, R3
0x1536	0x4A38    LDR	R2, [PC, #224]
0x1538	0x6013    STR	R3, [R2, #0]
;__Lib_PWM_1234589_12_10_11_13_14.c, 75 :: 		
0x153A	0xE03C    B	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init1
;__Lib_PWM_1234589_12_10_11_13_14.c, 78 :: 		
L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init9:
;__Lib_PWM_1234589_12_10_11_13_14.c, 79 :: 		
0x153C	0x2301    MOVS	R3, #1
0x153E	0xB25B    SXTB	R3, R3
0x1540	0x4A36    LDR	R2, [PC, #216]
0x1542	0x6013    STR	R3, [R2, #0]
;__Lib_PWM_1234589_12_10_11_13_14.c, 80 :: 		
0x1544	0xE037    B	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init1
;__Lib_PWM_1234589_12_10_11_13_14.c, 83 :: 		
L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init10:
;__Lib_PWM_1234589_12_10_11_13_14.c, 84 :: 		
0x1546	0x2301    MOVS	R3, #1
0x1548	0xB25B    SXTB	R3, R3
0x154A	0x4A35    LDR	R2, [PC, #212]
0x154C	0x6013    STR	R3, [R2, #0]
;__Lib_PWM_1234589_12_10_11_13_14.c, 85 :: 		
0x154E	0xE032    B	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init1
;__Lib_PWM_1234589_12_10_11_13_14.c, 88 :: 		
L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init11:
;__Lib_PWM_1234589_12_10_11_13_14.c, 89 :: 		
0x1550	0x2301    MOVS	R3, #1
0x1552	0xB25B    SXTB	R3, R3
0x1554	0x4A33    LDR	R2, [PC, #204]
0x1556	0x6013    STR	R3, [R2, #0]
;__Lib_PWM_1234589_12_10_11_13_14.c, 90 :: 		
0x1558	0xE02D    B	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init1
;__Lib_PWM_1234589_12_10_11_13_14.c, 93 :: 		
L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init12:
;__Lib_PWM_1234589_12_10_11_13_14.c, 94 :: 		
0x155A	0x2301    MOVS	R3, #1
0x155C	0xB25B    SXTB	R3, R3
0x155E	0x4A32    LDR	R2, [PC, #200]
0x1560	0x6013    STR	R3, [R2, #0]
;__Lib_PWM_1234589_12_10_11_13_14.c, 95 :: 		
0x1562	0xE028    B	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init1
;__Lib_PWM_1234589_12_10_11_13_14.c, 98 :: 		
L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init13:
;__Lib_PWM_1234589_12_10_11_13_14.c, 99 :: 		
0x1564	0x2301    MOVS	R3, #1
0x1566	0xB25B    SXTB	R3, R3
0x1568	0x4A30    LDR	R2, [PC, #192]
0x156A	0x6013    STR	R3, [R2, #0]
;__Lib_PWM_1234589_12_10_11_13_14.c, 100 :: 		
0x156C	0xE023    B	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init1
;__Lib_PWM_1234589_12_10_11_13_14.c, 102 :: 		
L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init0:
; _PWM_Base start address is: 0 (R0)
0x156E	0x4A30    LDR	R2, [PC, #192]
0x1570	0x4290    CMP	R0, R2
0x1572	0xD0C0    BEQ	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init2
0x1574	0xF1B04F80  CMP	R0, #1073741824
0x1578	0xD0C2    BEQ	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init3
0x157A	0x4A2E    LDR	R2, [PC, #184]
0x157C	0x4290    CMP	R0, R2
0x157E	0xD0C4    BEQ	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init4
0x1580	0x4A2D    LDR	R2, [PC, #180]
0x1582	0x4290    CMP	R0, R2
0x1584	0xD0C6    BEQ	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init5
0x1586	0x4A2D    LDR	R2, [PC, #180]
0x1588	0x4290    CMP	R0, R2
0x158A	0xD0C8    BEQ	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init6
0x158C	0x4A2C    LDR	R2, [PC, #176]
0x158E	0x4290    CMP	R0, R2
0x1590	0xD0CA    BEQ	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init7
0x1592	0x4A2C    LDR	R2, [PC, #176]
0x1594	0x4290    CMP	R0, R2
0x1596	0xD0CC    BEQ	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init8
0x1598	0x4A2B    LDR	R2, [PC, #172]
0x159A	0x4290    CMP	R0, R2
0x159C	0xD0CE    BEQ	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init9
0x159E	0x4A2B    LDR	R2, [PC, #172]
0x15A0	0x4290    CMP	R0, R2
0x15A2	0xD0D0    BEQ	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init10
0x15A4	0x4A2A    LDR	R2, [PC, #168]
0x15A6	0x4290    CMP	R0, R2
0x15A8	0xD0D2    BEQ	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init11
0x15AA	0x4A2A    LDR	R2, [PC, #168]
0x15AC	0x4290    CMP	R0, R2
0x15AE	0xD0D4    BEQ	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init12
0x15B0	0x4A29    LDR	R2, [PC, #164]
0x15B2	0x4290    CMP	R0, R2
0x15B4	0xD0D6    BEQ	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init13
; _PWM_Base end address is: 0 (R0)
L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init1:
;__Lib_PWM_1234589_12_10_11_13_14.c, 104 :: 		
0x15B6	0xF7FEFF57  BL	_Get_Fosc_kHz+0
; clk start address is: 0 (R0)
;__Lib_PWM_1234589_12_10_11_13_14.c, 106 :: 		
0x15BA	0x680B    LDR	R3, [R1, #0]
0x15BC	0xF06F0210  MVN	R2, #16
0x15C0	0xEA030202  AND	R2, R3, R2, LSL #0
0x15C4	0x600A    STR	R2, [R1, #0]
;__Lib_PWM_1234589_12_10_11_13_14.c, 108 :: 		
0x15C6	0xF24032E8  MOVW	R2, #1000
0x15CA	0x4342    MULS	R2, R0, R2
; clk end address is: 0 (R0)
0x15CC	0xFBB2F3F4  UDIV	R3, R2, R4
; freq_hz end address is: 16 (R4)
; per_reg start address is: 0 (R0)
0x15D0	0x4618    MOV	R0, R3
;__Lib_PWM_1234589_12_10_11_13_14.c, 109 :: 		
0x15D2	0xF64F72FF  MOVW	R2, #65535
0x15D6	0xFBB3F2F2  UDIV	R2, R3, R2
; prescaler start address is: 16 (R4)
0x15DA	0x4614    MOV	R4, R2
;__Lib_PWM_1234589_12_10_11_13_14.c, 110 :: 		
0x15DC	0xF2010328  ADDW	R3, R1, #40
0x15E0	0xB292    UXTH	R2, R2
0x15E2	0x601A    STR	R2, [R3, #0]
;__Lib_PWM_1234589_12_10_11_13_14.c, 112 :: 		
0x15E4	0x1C62    ADDS	R2, R4, #1
; prescaler end address is: 16 (R4)
0x15E6	0xFBB0F2F2  UDIV	R2, R0, R2
0x15EA	0x4610    MOV	R0, R2
;__Lib_PWM_1234589_12_10_11_13_14.c, 114 :: 		
0x15EC	0xF201032C  ADDW	R3, R1, #44
; PWM_Base end address is: 4 (R1)
0x15F0	0xB292    UXTH	R2, R2
0x15F2	0x601A    STR	R2, [R3, #0]
;__Lib_PWM_1234589_12_10_11_13_14.c, 116 :: 		
0x15F4	0xB280    UXTH	R0, R0
; per_reg end address is: 0 (R0)
;__Lib_PWM_1234589_12_10_11_13_14.c, 117 :: 		
L_end_PWM_TIMx_Init:
0x15F6	0xF8DDE000  LDR	LR, [SP, #0]
0x15FA	0xB001    ADD	SP, SP, #4
0x15FC	0x4770    BX	LR
0x15FE	0xBF00    NOP
0x1600	0x08804247  	RCC_APB2ENR+0
0x1604	0x08004247  	RCC_APB1ENR+0
0x1608	0x08044247  	RCC_APB1ENR+0
0x160C	0x08084247  	RCC_APB1ENR+0
0x1610	0x080C4247  	RCC_APB1ENR+0
0x1614	0x08844247  	RCC_APB2ENR+0
0x1618	0x08C04247  	RCC_APB2ENR+0
0x161C	0x08C44247  	RCC_APB2ENR+0
0x1620	0x08C84247  	RCC_APB2ENR+0
0x1624	0x08184247  	RCC_APB1ENR+0
0x1628	0x081C4247  	RCC_APB1ENR+0
0x162C	0x08204247  	RCC_APB1ENR+0
0x1630	0x00004001  	#1073807360
0x1634	0x04004000  	#1073742848
0x1638	0x08004000  	#1073743872
0x163C	0x0C004000  	#1073744896
0x1640	0x04004001  	#1073808384
0x1644	0x40004001  	#1073823744
0x1648	0x44004001  	#1073824768
0x164C	0x48004001  	#1073825792
0x1650	0x18004000  	#1073747968
0x1654	0x1C004000  	#1073748992
0x1658	0x20004000  	#1073750016
; end of __Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init
_PWM_TIM3_Set_Duty:
;__Lib_PWM_1234589_12_10_11_13_14.c, 238 :: 		
; channel start address is: 8 (R2)
; inverted start address is: 4 (R1)
; duty_ratio start address is: 0 (R0)
0x2450	0xB081    SUB	SP, SP, #4
0x2452	0xF8CDE000  STR	LR, [SP, #0]
; channel end address is: 8 (R2)
; inverted end address is: 4 (R1)
; duty_ratio end address is: 0 (R0)
; duty_ratio start address is: 0 (R0)
; inverted start address is: 4 (R1)
; channel start address is: 8 (R2)
;__Lib_PWM_1234589_12_10_11_13_14.c, 239 :: 		
0x2456	0xB2D3    UXTB	R3, R2
; channel end address is: 8 (R2)
0x2458	0xB2CA    UXTB	R2, R1
; inverted end address is: 4 (R1)
0x245A	0xB281    UXTH	R1, R0
; duty_ratio end address is: 0 (R0)
0x245C	0x4803    LDR	R0, [PC, #12]
0x245E	0xF7FFFABF  BL	__Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Set_Duty+0
;__Lib_PWM_1234589_12_10_11_13_14.c, 240 :: 		
L_end_PWM_TIM3_Set_Duty:
0x2462	0xF8DDE000  LDR	LR, [SP, #0]
0x2466	0xB001    ADD	SP, SP, #4
0x2468	0x4770    BX	LR
0x246A	0xBF00    NOP
0x246C	0x04004000  	TIM3_CR1+0
; end of _PWM_TIM3_Set_Duty
__Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Set_Duty:
;__Lib_PWM_1234589_12_10_11_13_14.c, 121 :: 		
; channel start address is: 12 (R3)
; inverted start address is: 8 (R2)
; duty_ratio start address is: 4 (R1)
; PWM_Base start address is: 0 (R0)
0x19E0	0xB081    SUB	SP, SP, #4
0x19E2	0xB2D5    UXTB	R5, R2
; channel end address is: 12 (R3)
; inverted end address is: 8 (R2)
; duty_ratio end address is: 4 (R1)
; PWM_Base end address is: 0 (R0)
; PWM_Base start address is: 0 (R0)
; duty_ratio start address is: 4 (R1)
; inverted start address is: 20 (R5)
; channel start address is: 12 (R3)
;__Lib_PWM_1234589_12_10_11_13_14.c, 126 :: 		
0x19E4	0xF2000420  ADDW	R4, R0, #32
0x19E8	0x6822    LDR	R2, [R4, #0]
; tmpLong start address is: 8 (R2)
;__Lib_PWM_1234589_12_10_11_13_14.c, 127 :: 		
0x19EA	0x2D01    CMP	R5, #1
0x19EC	0xD108    BNE	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Set_Duty14
; inverted end address is: 20 (R5)
;__Lib_PWM_1234589_12_10_11_13_14.c, 128 :: 		
0x19EE	0x009C    LSLS	R4, R3, #2
0x19F0	0xB224    SXTH	R4, R4
0x19F2	0x1C65    ADDS	R5, R4, #1
0x19F4	0xB22D    SXTH	R5, R5
0x19F6	0xF04F0401  MOV	R4, #1
0x19FA	0x40AC    LSLS	R4, R5
0x19FC	0x4322    ORRS	R2, R4
0x19FE	0xE008    B	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Set_Duty15
L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Set_Duty14:
;__Lib_PWM_1234589_12_10_11_13_14.c, 130 :: 		
0x1A00	0x009C    LSLS	R4, R3, #2
0x1A02	0xB224    SXTH	R4, R4
0x1A04	0x1C65    ADDS	R5, R4, #1
0x1A06	0xB22D    SXTH	R5, R5
0x1A08	0xF04F0401  MOV	R4, #1
0x1A0C	0x40AC    LSLS	R4, R5
0x1A0E	0x43E4    MVN	R4, R4
0x1A10	0x4022    ANDS	R2, R4
; tmpLong end address is: 8 (R2)
L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Set_Duty15:
;__Lib_PWM_1234589_12_10_11_13_14.c, 131 :: 		
; tmpLong start address is: 8 (R2)
0x1A12	0xF2000420  ADDW	R4, R0, #32
0x1A16	0x6022    STR	R2, [R4, #0]
; tmpLong end address is: 8 (R2)
;__Lib_PWM_1234589_12_10_11_13_14.c, 134 :: 		
0x1A18	0xF2000534  ADDW	R5, R0, #52
; PWM_Base end address is: 0 (R0)
0x1A1C	0x009C    LSLS	R4, R3, #2
; channel end address is: 12 (R3)
0x1A1E	0x192C    ADDS	R4, R5, R4
0x1A20	0x6021    STR	R1, [R4, #0]
; duty_ratio end address is: 4 (R1)
;__Lib_PWM_1234589_12_10_11_13_14.c, 135 :: 		
L_end_PWM_TIMx_Set_Duty:
0x1A22	0xB001    ADD	SP, SP, #4
0x1A24	0x4770    BX	LR
; end of __Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Set_Duty
_PWM_TIM3_Start:
;__Lib_PWM_1234589_12_10_11_13_14.c, 242 :: 		
; module start address is: 4 (R1)
; channel start address is: 0 (R0)
0x2470	0xB081    SUB	SP, SP, #4
0x2472	0xF8CDE000  STR	LR, [SP, #0]
; module end address is: 4 (R1)
; channel end address is: 0 (R0)
; channel start address is: 0 (R0)
; module start address is: 4 (R1)
;__Lib_PWM_1234589_12_10_11_13_14.c, 243 :: 		
0x2476	0x460A    MOV	R2, R1
; module end address is: 4 (R1)
0x2478	0xB2C1    UXTB	R1, R0
; channel end address is: 0 (R0)
0x247A	0x4803    LDR	R0, [PC, #12]
0x247C	0xF7FFF8EE  BL	__Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Start+0
;__Lib_PWM_1234589_12_10_11_13_14.c, 244 :: 		
L_end_PWM_TIM3_Start:
0x2480	0xF8DDE000  LDR	LR, [SP, #0]
0x2484	0xB001    ADD	SP, SP, #4
0x2486	0x4770    BX	LR
0x2488	0x04004000  	TIM3_CR1+0
; end of _PWM_TIM3_Start
__Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Start:
;__Lib_PWM_1234589_12_10_11_13_14.c, 139 :: 		
; module start address is: 8 (R2)
; channel start address is: 4 (R1)
; PWM_Base start address is: 0 (R0)
0x165C	0xB083    SUB	SP, SP, #12
0x165E	0xF8CDE000  STR	LR, [SP, #0]
; module end address is: 8 (R2)
; channel end address is: 4 (R1)
; PWM_Base end address is: 0 (R0)
; PWM_Base start address is: 0 (R0)
; channel start address is: 4 (R1)
; module start address is: 8 (R2)
;__Lib_PWM_1234589_12_10_11_13_14.c, 142 :: 		
0x1662	0xF88D1004  STRB	R1, [SP, #4]
; module end address is: 8 (R2)
0x1666	0x9002    STR	R0, [SP, #8]
0x1668	0x4610    MOV	R0, R2
0x166A	0xF7FFF8A1  BL	_GPIO_Alternate_Function_Enable+0
0x166E	0x9802    LDR	R0, [SP, #8]
0x1670	0xF89D1004  LDRB	R1, [SP, #4]
;__Lib_PWM_1234589_12_10_11_13_14.c, 145 :: 		
0x1674	0xF2000320  ADDW	R3, R0, #32
0x1678	0x681A    LDR	R2, [R3, #0]
; tmpLong start address is: 8 (R2)
;__Lib_PWM_1234589_12_10_11_13_14.c, 146 :: 		
0x167A	0x008C    LSLS	R4, R1, #2
0x167C	0xB224    SXTH	R4, R4
0x167E	0xF04F0301  MOV	R3, #1
0x1682	0x40A3    LSLS	R3, R4
0x1684	0x431A    ORRS	R2, R3
;__Lib_PWM_1234589_12_10_11_13_14.c, 147 :: 		
0x1686	0xF2000320  ADDW	R3, R0, #32
0x168A	0x601A    STR	R2, [R3, #0]
; tmpLong end address is: 8 (R2)
;__Lib_PWM_1234589_12_10_11_13_14.c, 150 :: 		
0x168C	0xF2000444  ADDW	R4, R0, #68
0x1690	0x6823    LDR	R3, [R4, #0]
0x1692	0xF4434300  ORR	R3, R3, #32768
0x1696	0x6023    STR	R3, [R4, #0]
;__Lib_PWM_1234589_12_10_11_13_14.c, 152 :: 		
0x1698	0xF2000218  ADDW	R2, R0, #24
; tmpLongPtr start address is: 8 (R2)
;__Lib_PWM_1234589_12_10_11_13_14.c, 154 :: 		
0x169C	0x2901    CMP	R1, #1
0x169E	0xD901    BLS	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Start19
;__Lib_PWM_1234589_12_10_11_13_14.c, 155 :: 		
0x16A0	0x1D12    ADDS	R2, R2, #4
; tmpLongPtr end address is: 8 (R2)
0x16A2	0xE7FF    B	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Start16
L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Start19:
;__Lib_PWM_1234589_12_10_11_13_14.c, 154 :: 		
;__Lib_PWM_1234589_12_10_11_13_14.c, 155 :: 		
L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Start16:
;__Lib_PWM_1234589_12_10_11_13_14.c, 157 :: 		
; tmpLongPtr start address is: 8 (R2)
0x16A4	0x084B    LSRS	R3, R1, #1
0x16A6	0xB2DB    UXTB	R3, R3
0x16A8	0x005B    LSLS	R3, R3, #1
0x16AA	0xB21B    SXTH	R3, R3
0x16AC	0x428B    CMP	R3, R1
0x16AE	0xD00A    BEQ	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Start17
; channel end address is: 4 (R1)
;__Lib_PWM_1234589_12_10_11_13_14.c, 159 :: 		
0x16B0	0x6814    LDR	R4, [R2, #0]
0x16B2	0xF46F53D8  MVN	R3, #6912
0x16B6	0xEA040303  AND	R3, R4, R3, LSL #0
0x16BA	0x6013    STR	R3, [R2, #0]
;__Lib_PWM_1234589_12_10_11_13_14.c, 161 :: 		
0x16BC	0x6813    LDR	R3, [R2, #0]
0x16BE	0xF44343C0  ORR	R3, R3, #24576
0x16C2	0x6013    STR	R3, [R2, #0]
; tmpLongPtr end address is: 8 (R2)
;__Lib_PWM_1234589_12_10_11_13_14.c, 162 :: 		
0x16C4	0xE009    B	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Start18
L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Start17:
;__Lib_PWM_1234589_12_10_11_13_14.c, 165 :: 		
; tmpLongPtr start address is: 8 (R2)
0x16C6	0x6814    LDR	R4, [R2, #0]
0x16C8	0xF06F031B  MVN	R3, #27
0x16CC	0xEA040303  AND	R3, R4, R3, LSL #0
0x16D0	0x6013    STR	R3, [R2, #0]
;__Lib_PWM_1234589_12_10_11_13_14.c, 167 :: 		
0x16D2	0x6813    LDR	R3, [R2, #0]
0x16D4	0xF0430360  ORR	R3, R3, #96
0x16D8	0x6013    STR	R3, [R2, #0]
; tmpLongPtr end address is: 8 (R2)
;__Lib_PWM_1234589_12_10_11_13_14.c, 168 :: 		
L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Start18:
;__Lib_PWM_1234589_12_10_11_13_14.c, 171 :: 		
0x16DA	0x6803    LDR	R3, [R0, #0]
0x16DC	0xF0430301  ORR	R3, R3, #1
0x16E0	0x6003    STR	R3, [R0, #0]
; PWM_Base end address is: 0 (R0)
;__Lib_PWM_1234589_12_10_11_13_14.c, 172 :: 		
L_end_PWM_TIMx_Start:
0x16E2	0xF8DDE000  LDR	LR, [SP, #0]
0x16E6	0xB003    ADD	SP, SP, #12
0x16E8	0x4770    BX	LR
; end of __Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Start
_GPIO_Analog_Input:
;__Lib_GPIO_32F4xx.c, 241 :: 		
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x2664	0xB081    SUB	SP, SP, #4
0x2666	0xF8CDE000  STR	LR, [SP, #0]
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 4 (R1)
;__Lib_GPIO_32F4xx.c, 242 :: 		
0x266A	0xF04F0201  MOV	R2, #1
0x266E	0xB289    UXTH	R1, R1
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
0x2670	0xF7FDFDDE  BL	_GPIO_Config+0
;__Lib_GPIO_32F4xx.c, 243 :: 		
L_end_GPIO_Analog_Input:
0x2674	0xF8DDE000  LDR	LR, [SP, #0]
0x2678	0xB001    ADD	SP, SP, #4
0x267A	0x4770    BX	LR
; end of _GPIO_Analog_Input
_ADC2_Init:
;__Lib_ADC_123_32F20x_16ch.c, 257 :: 		
0x267C	0xB081    SUB	SP, SP, #4
0x267E	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_ADC_123_32F20x_16ch.c, 258 :: 		
0x2682	0x4907    LDR	R1, [PC, #28]
0x2684	0x4807    LDR	R0, [PC, #28]
0x2686	0x6001    STR	R1, [R0, #0]
;__Lib_ADC_123_32F20x_16ch.c, 260 :: 		
0x2688	0x2101    MOVS	R1, #1
0x268A	0xB249    SXTB	R1, R1
0x268C	0x4806    LDR	R0, [PC, #24]
0x268E	0x6001    STR	R1, [R0, #0]
;__Lib_ADC_123_32F20x_16ch.c, 262 :: 		
0x2690	0x4806    LDR	R0, [PC, #24]
0x2692	0xF7FFF8B3  BL	__Lib_ADC_123_32F20x_16ch_ADCx_Init+0
;__Lib_ADC_123_32F20x_16ch.c, 295 :: 		
L_end_ADC2_Init:
0x2696	0xF8DDE000  LDR	LR, [SP, #0]
0x269A	0xB001    ADD	SP, SP, #4
0x269C	0x4770    BX	LR
0x269E	0xBF00    NOP
0x26A0	0x0F610000  	_ADC2_Get_Sample+0
0x26A4	0x0A082000  	_ADC_Get_Sample_Ptr+0
0x26A8	0x08A44247  	RCC_APB2ENR+0
0x26AC	0x21004001  	ADC2_SR+0
; end of _ADC2_Init
__Lib_ADC_123_32F20x_16ch_ADCx_Init:
;__Lib_ADC_123_32F20x_16ch.c, 79 :: 		
; base start address is: 0 (R0)
0x17FC	0xB086    SUB	SP, SP, #24
0x17FE	0xF8CDE000  STR	LR, [SP, #0]
0x1802	0x4604    MOV	R4, R0
; base end address is: 0 (R0)
; base start address is: 16 (R4)
;__Lib_ADC_123_32F20x_16ch.c, 87 :: 		
0x1804	0xA901    ADD	R1, SP, #4
0x1806	0x4608    MOV	R0, R1
0x1808	0xF7FEFF90  BL	_RCC_GetClocksFrequency+0
;__Lib_ADC_123_32F20x_16ch.c, 89 :: 		
0x180C	0x9A04    LDR	R2, [SP, #16]
0x180E	0x4939    LDR	R1, [PC, #228]
0x1810	0x428A    CMP	R2, R1
0x1812	0xD906    BLS	L___Lib_ADC_123_32F20x_16ch_ADCx_Init16
;__Lib_ADC_123_32F20x_16ch.c, 91 :: 		
0x1814	0x2201    MOVS	R2, #1
0x1816	0xB252    SXTB	R2, R2
0x1818	0x4937    LDR	R1, [PC, #220]
0x181A	0x600A    STR	R2, [R1, #0]
;__Lib_ADC_123_32F20x_16ch.c, 92 :: 		
0x181C	0x4937    LDR	R1, [PC, #220]
0x181E	0x600A    STR	R2, [R1, #0]
;__Lib_ADC_123_32F20x_16ch.c, 93 :: 		
0x1820	0xE01F    B	L___Lib_ADC_123_32F20x_16ch_ADCx_Init17
L___Lib_ADC_123_32F20x_16ch_ADCx_Init16:
0x1822	0x9A04    LDR	R2, [SP, #16]
0x1824	0x4936    LDR	R1, [PC, #216]
0x1826	0x428A    CMP	R2, R1
0x1828	0xD908    BLS	L___Lib_ADC_123_32F20x_16ch_ADCx_Init18
;__Lib_ADC_123_32F20x_16ch.c, 95 :: 		
0x182A	0x2200    MOVS	R2, #0
0x182C	0xB252    SXTB	R2, R2
0x182E	0x4932    LDR	R1, [PC, #200]
0x1830	0x600A    STR	R2, [R1, #0]
;__Lib_ADC_123_32F20x_16ch.c, 96 :: 		
0x1832	0x2201    MOVS	R2, #1
0x1834	0xB252    SXTB	R2, R2
0x1836	0x4931    LDR	R1, [PC, #196]
0x1838	0x600A    STR	R2, [R1, #0]
;__Lib_ADC_123_32F20x_16ch.c, 97 :: 		
0x183A	0xE012    B	L___Lib_ADC_123_32F20x_16ch_ADCx_Init19
L___Lib_ADC_123_32F20x_16ch_ADCx_Init18:
0x183C	0x9A04    LDR	R2, [SP, #16]
0x183E	0x4931    LDR	R1, [PC, #196]
0x1840	0x428A    CMP	R2, R1
0x1842	0xD908    BLS	L___Lib_ADC_123_32F20x_16ch_ADCx_Init20
;__Lib_ADC_123_32F20x_16ch.c, 99 :: 		
0x1844	0x2201    MOVS	R2, #1
0x1846	0xB252    SXTB	R2, R2
0x1848	0x492B    LDR	R1, [PC, #172]
0x184A	0x600A    STR	R2, [R1, #0]
;__Lib_ADC_123_32F20x_16ch.c, 100 :: 		
0x184C	0x2200    MOVS	R2, #0
0x184E	0xB252    SXTB	R2, R2
0x1850	0x492A    LDR	R1, [PC, #168]
0x1852	0x600A    STR	R2, [R1, #0]
;__Lib_ADC_123_32F20x_16ch.c, 101 :: 		
0x1854	0xE005    B	L___Lib_ADC_123_32F20x_16ch_ADCx_Init21
L___Lib_ADC_123_32F20x_16ch_ADCx_Init20:
;__Lib_ADC_123_32F20x_16ch.c, 103 :: 		
0x1856	0x2200    MOVS	R2, #0
0x1858	0xB252    SXTB	R2, R2
0x185A	0x4927    LDR	R1, [PC, #156]
0x185C	0x600A    STR	R2, [R1, #0]
;__Lib_ADC_123_32F20x_16ch.c, 104 :: 		
0x185E	0x4927    LDR	R1, [PC, #156]
0x1860	0x600A    STR	R2, [R1, #0]
;__Lib_ADC_123_32F20x_16ch.c, 105 :: 		
L___Lib_ADC_123_32F20x_16ch_ADCx_Init21:
L___Lib_ADC_123_32F20x_16ch_ADCx_Init19:
L___Lib_ADC_123_32F20x_16ch_ADCx_Init17:
;__Lib_ADC_123_32F20x_16ch.c, 108 :: 		
0x1862	0x1D23    ADDS	R3, R4, #4
0x1864	0x681A    LDR	R2, [R3, #0]
0x1866	0x4928    LDR	R1, [PC, #160]
0x1868	0xEA020101  AND	R1, R2, R1, LSL #0
0x186C	0x6019    STR	R1, [R3, #0]
;__Lib_ADC_123_32F20x_16ch.c, 110 :: 		
0x186E	0xF2040308  ADDW	R3, R4, #8
0x1872	0x681A    LDR	R2, [R3, #0]
0x1874	0x4925    LDR	R1, [PC, #148]
0x1876	0xEA020101  AND	R1, R2, R1, LSL #0
0x187A	0x6019    STR	R1, [R3, #0]
;__Lib_ADC_123_32F20x_16ch.c, 118 :: 		
0x187C	0x1D23    ADDS	R3, R4, #4
0x187E	0x2200    MOVS	R2, #0
0x1880	0x6819    LDR	R1, [R3, #0]
0x1882	0xF3622108  BFI	R1, R2, #8, #1
0x1886	0x6019    STR	R1, [R3, #0]
;__Lib_ADC_123_32F20x_16ch.c, 121 :: 		
0x1888	0xF2040308  ADDW	R3, R4, #8
0x188C	0x2200    MOVS	R2, #0
0x188E	0x6819    LDR	R1, [R3, #0]
0x1890	0xF3620141  BFI	R1, R2, #1, #1
0x1894	0x6019    STR	R1, [R3, #0]
;__Lib_ADC_123_32F20x_16ch.c, 123 :: 		
0x1896	0xF2040308  ADDW	R3, R4, #8
0x189A	0x2200    MOVS	R2, #0
0x189C	0x6819    LDR	R1, [R3, #0]
0x189E	0xF36221CB  BFI	R1, R2, #11, #1
0x18A2	0x6019    STR	R1, [R3, #0]
;__Lib_ADC_123_32F20x_16ch.c, 131 :: 		
0x18A4	0xF204032C  ADDW	R3, R4, #44
0x18A8	0x2200    MOVS	R2, #0
0x18AA	0x6819    LDR	R1, [R3, #0]
0x18AC	0xF3625114  BFI	R1, R2, #20, #1
0x18B0	0x6019    STR	R1, [R3, #0]
;__Lib_ADC_123_32F20x_16ch.c, 132 :: 		
0x18B2	0xF204032C  ADDW	R3, R4, #44
0x18B6	0x2200    MOVS	R2, #0
0x18B8	0x6819    LDR	R1, [R3, #0]
0x18BA	0xF3625155  BFI	R1, R2, #21, #1
0x18BE	0x6019    STR	R1, [R3, #0]
;__Lib_ADC_123_32F20x_16ch.c, 133 :: 		
0x18C0	0xF204032C  ADDW	R3, R4, #44
0x18C4	0x2200    MOVS	R2, #0
0x18C6	0x6819    LDR	R1, [R3, #0]
0x18C8	0xF3625196  BFI	R1, R2, #22, #1
0x18CC	0x6019    STR	R1, [R3, #0]
;__Lib_ADC_123_32F20x_16ch.c, 134 :: 		
0x18CE	0xF204032C  ADDW	R3, R4, #44
0x18D2	0x2200    MOVS	R2, #0
0x18D4	0x6819    LDR	R1, [R3, #0]
0x18D6	0xF36251D7  BFI	R1, R2, #23, #1
0x18DA	0x6019    STR	R1, [R3, #0]
;__Lib_ADC_123_32F20x_16ch.c, 138 :: 		
0x18DC	0xF2040308  ADDW	R3, R4, #8
; base end address is: 16 (R4)
0x18E0	0x2201    MOVS	R2, #1
0x18E2	0x6819    LDR	R1, [R3, #0]
0x18E4	0xF3620100  BFI	R1, R2, #0, #1
0x18E8	0x6019    STR	R1, [R3, #0]
;__Lib_ADC_123_32F20x_16ch.c, 149 :: 		
L_end_ADCx_Init:
0x18EA	0xF8DDE000  LDR	LR, [SP, #0]
0x18EE	0xB006    ADD	SP, SP, #24
0x18F0	0x4770    BX	LR
0x18F2	0xBF00    NOP
0x18F4	0x95000ABA  	#180000000
0x18F8	0x60C04224  	ADC_CCR+0
0x18FC	0x60C44224  	ADC_CCR+0
0x1900	0x0E000727  	#120000000
0x1904	0x87000393  	#60000000
0x1908	0xFEFFFFF0  	#-983297
0x190C	0xF7FDFFF1  	#-919555
; end of __Lib_ADC_123_32F20x_16ch_ADCx_Init
_uart4Battery1Level0:
;uartSend.c, 389 :: 		void uart4Battery1Level0(){
0x24C4	0xB081    SUB	SP, SP, #4
0x24C6	0xF8CDE000  STR	LR, [SP, #0]
;uartSend.c, 391 :: 		UART4_Write(0x5A);
0x24CA	0x205A    MOVS	R0, #90
0x24CC	0xF7FEFA5C  BL	_UART4_Write+0
;uartSend.c, 392 :: 		UART4_Write(0xA5);
0x24D0	0x20A5    MOVS	R0, #165
0x24D2	0xF7FEFA59  BL	_UART4_Write+0
;uartSend.c, 393 :: 		UART4_Write(0x05);
0x24D6	0x2005    MOVS	R0, #5
0x24D8	0xF7FEFA56  BL	_UART4_Write+0
;uartSend.c, 394 :: 		UART4_Write(0x82);
0x24DC	0x2082    MOVS	R0, #130
0x24DE	0xF7FEFA53  BL	_UART4_Write+0
;uartSend.c, 395 :: 		UART4_Write(0x51);
0x24E2	0x2051    MOVS	R0, #81
0x24E4	0xF7FEFA50  BL	_UART4_Write+0
;uartSend.c, 396 :: 		UART4_Write(0x25);
0x24E8	0x2025    MOVS	R0, #37
0x24EA	0xF7FEFA4D  BL	_UART4_Write+0
;uartSend.c, 397 :: 		UART4_Write(0x00);
0x24EE	0x2000    MOVS	R0, #0
0x24F0	0xF7FEFA4A  BL	_UART4_Write+0
;uartSend.c, 398 :: 		UART4_Write(0x00);
0x24F4	0x2000    MOVS	R0, #0
0x24F6	0xF7FEFA47  BL	_UART4_Write+0
;uartSend.c, 400 :: 		UART4_Write(0x5A);
0x24FA	0x205A    MOVS	R0, #90
0x24FC	0xF7FEFA44  BL	_UART4_Write+0
;uartSend.c, 401 :: 		UART4_Write(0xA5);
0x2500	0x20A5    MOVS	R0, #165
0x2502	0xF7FEFA41  BL	_UART4_Write+0
;uartSend.c, 402 :: 		UART4_Write(0x05);
0x2506	0x2005    MOVS	R0, #5
0x2508	0xF7FEFA3E  BL	_UART4_Write+0
;uartSend.c, 403 :: 		UART4_Write(0x82);
0x250C	0x2082    MOVS	R0, #130
0x250E	0xF7FEFA3B  BL	_UART4_Write+0
;uartSend.c, 404 :: 		UART4_Write(0x51);
0x2512	0x2051    MOVS	R0, #81
0x2514	0xF7FEFA38  BL	_UART4_Write+0
;uartSend.c, 405 :: 		UART4_Write(0x45);
0x2518	0x2045    MOVS	R0, #69
0x251A	0xF7FEFA35  BL	_UART4_Write+0
;uartSend.c, 406 :: 		UART4_Write(0x00);
0x251E	0x2000    MOVS	R0, #0
0x2520	0xF7FEFA32  BL	_UART4_Write+0
;uartSend.c, 407 :: 		UART4_Write(0x02);
0x2524	0x2002    MOVS	R0, #2
0x2526	0xF7FEFA2F  BL	_UART4_Write+0
;uartSend.c, 409 :: 		UART4_Write(0x5A);
0x252A	0x205A    MOVS	R0, #90
0x252C	0xF7FEFA2C  BL	_UART4_Write+0
;uartSend.c, 410 :: 		UART4_Write(0xA5);
0x2530	0x20A5    MOVS	R0, #165
0x2532	0xF7FEFA29  BL	_UART4_Write+0
;uartSend.c, 411 :: 		UART4_Write(0x05);
0x2536	0x2005    MOVS	R0, #5
0x2538	0xF7FEFA26  BL	_UART4_Write+0
;uartSend.c, 412 :: 		UART4_Write(0x82);
0x253C	0x2082    MOVS	R0, #130
0x253E	0xF7FEFA23  BL	_UART4_Write+0
;uartSend.c, 413 :: 		UART4_Write(0x51);
0x2542	0x2051    MOVS	R0, #81
0x2544	0xF7FEFA20  BL	_UART4_Write+0
;uartSend.c, 414 :: 		UART4_Write(0x65);
0x2548	0x2065    MOVS	R0, #101
0x254A	0xF7FEFA1D  BL	_UART4_Write+0
;uartSend.c, 415 :: 		UART4_Write(0x00);
0x254E	0x2000    MOVS	R0, #0
0x2550	0xF7FEFA1A  BL	_UART4_Write+0
;uartSend.c, 416 :: 		UART4_Write(0x04);
0x2554	0x2004    MOVS	R0, #4
0x2556	0xF7FEFA17  BL	_UART4_Write+0
;uartSend.c, 418 :: 		UART4_Write(0x5A);
0x255A	0x205A    MOVS	R0, #90
0x255C	0xF7FEFA14  BL	_UART4_Write+0
;uartSend.c, 419 :: 		UART4_Write(0xA5);
0x2560	0x20A5    MOVS	R0, #165
0x2562	0xF7FEFA11  BL	_UART4_Write+0
;uartSend.c, 420 :: 		UART4_Write(0x05);
0x2566	0x2005    MOVS	R0, #5
0x2568	0xF7FEFA0E  BL	_UART4_Write+0
;uartSend.c, 421 :: 		UART4_Write(0x82);
0x256C	0x2082    MOVS	R0, #130
0x256E	0xF7FEFA0B  BL	_UART4_Write+0
;uartSend.c, 422 :: 		UART4_Write(0x51);
0x2572	0x2051    MOVS	R0, #81
0x2574	0xF7FEFA08  BL	_UART4_Write+0
;uartSend.c, 423 :: 		UART4_Write(0x85);
0x2578	0x2085    MOVS	R0, #133
0x257A	0xF7FEFA05  BL	_UART4_Write+0
;uartSend.c, 424 :: 		UART4_Write(0x00);
0x257E	0x2000    MOVS	R0, #0
0x2580	0xF7FEFA02  BL	_UART4_Write+0
;uartSend.c, 425 :: 		UART4_Write(0x06);
0x2584	0x2006    MOVS	R0, #6
0x2586	0xF7FEF9FF  BL	_UART4_Write+0
;uartSend.c, 426 :: 		}
L_end_uart4Battery1Level0:
0x258A	0xF8DDE000  LDR	LR, [SP, #0]
0x258E	0xB001    ADD	SP, SP, #4
0x2590	0x4770    BX	LR
; end of _uart4Battery1Level0
_UART4_Write:
;__Lib_UART_123_45_6.c, 53 :: 		
; _data start address is: 0 (R0)
0x0988	0xB081    SUB	SP, SP, #4
0x098A	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45_6.c, 54 :: 		
0x098E	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x0990	0x4803    LDR	R0, [PC, #12]
0x0992	0xF7FFFEBB  BL	__Lib_UART_123_45_6_UARTx_Write+0
;__Lib_UART_123_45_6.c, 55 :: 		
L_end_UART4_Write:
0x0996	0xF8DDE000  LDR	LR, [SP, #0]
0x099A	0xB001    ADD	SP, SP, #4
0x099C	0x4770    BX	LR
0x099E	0xBF00    NOP
0x09A0	0x4C004000  	UART4_SR+0
; end of _UART4_Write
__Lib_UART_123_45_6_UARTx_Write:
;__Lib_UART_123_45_6.c, 35 :: 		
; _data start address is: 4 (R1)
; UART_Base start address is: 0 (R0)
0x070C	0xB081    SUB	SP, SP, #4
; _data end address is: 4 (R1)
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 0 (R0)
; _data start address is: 4 (R1)
0x070E	0xF8AD1000  STRH	R1, [SP, #0]
; UART_Base end address is: 0 (R0)
; _data end address is: 4 (R1)
0x0712	0x4601    MOV	R1, R0
0x0714	0xF8BD0000  LDRH	R0, [SP, #0]
;__Lib_UART_123_45_6.c, 36 :: 		
L___Lib_UART_123_45_6_UARTx_Write0:
; _data start address is: 0 (R0)
; UART_Base start address is: 4 (R1)
0x0718	0x680B    LDR	R3, [R1, #0]
0x071A	0xF3C312C0  UBFX	R2, R3, #7, #1
0x071E	0xB902    CBNZ	R2, L___Lib_UART_123_45_6_UARTx_Write1
;__Lib_UART_123_45_6.c, 37 :: 		
0x0720	0xE7FA    B	L___Lib_UART_123_45_6_UARTx_Write0
L___Lib_UART_123_45_6_UARTx_Write1:
;__Lib_UART_123_45_6.c, 38 :: 		
0x0722	0x1D0A    ADDS	R2, R1, #4
; UART_Base end address is: 4 (R1)
0x0724	0x6010    STR	R0, [R2, #0]
; _data end address is: 0 (R0)
;__Lib_UART_123_45_6.c, 39 :: 		
L_end_UARTx_Write:
0x0726	0xB001    ADD	SP, SP, #4
0x0728	0x4770    BX	LR
; end of __Lib_UART_123_45_6_UARTx_Write
_uart4Battery2Level0:
;uartSend.c, 586 :: 		void uart4Battery2Level0(){
0x2594	0xB081    SUB	SP, SP, #4
0x2596	0xF8CDE000  STR	LR, [SP, #0]
;uartSend.c, 588 :: 		UART4_Write(0x5A);
0x259A	0x205A    MOVS	R0, #90
0x259C	0xF7FEF9F4  BL	_UART4_Write+0
;uartSend.c, 589 :: 		UART4_Write(0xA5);
0x25A0	0x20A5    MOVS	R0, #165
0x25A2	0xF7FEF9F1  BL	_UART4_Write+0
;uartSend.c, 590 :: 		UART4_Write(0x05);
0x25A6	0x2005    MOVS	R0, #5
0x25A8	0xF7FEF9EE  BL	_UART4_Write+0
;uartSend.c, 591 :: 		UART4_Write(0x82);
0x25AC	0x2082    MOVS	R0, #130
0x25AE	0xF7FEF9EB  BL	_UART4_Write+0
;uartSend.c, 592 :: 		UART4_Write(0x51);
0x25B2	0x2051    MOVS	R0, #81
0x25B4	0xF7FEF9E8  BL	_UART4_Write+0
;uartSend.c, 593 :: 		UART4_Write(0xA5);
0x25B8	0x20A5    MOVS	R0, #165
0x25BA	0xF7FEF9E5  BL	_UART4_Write+0
;uartSend.c, 594 :: 		UART4_Write(0x00);
0x25BE	0x2000    MOVS	R0, #0
0x25C0	0xF7FEF9E2  BL	_UART4_Write+0
;uartSend.c, 595 :: 		UART4_Write(0x08);
0x25C4	0x2008    MOVS	R0, #8
0x25C6	0xF7FEF9DF  BL	_UART4_Write+0
;uartSend.c, 597 :: 		UART4_Write(0x5A);
0x25CA	0x205A    MOVS	R0, #90
0x25CC	0xF7FEF9DC  BL	_UART4_Write+0
;uartSend.c, 598 :: 		UART4_Write(0xA5);
0x25D0	0x20A5    MOVS	R0, #165
0x25D2	0xF7FEF9D9  BL	_UART4_Write+0
;uartSend.c, 599 :: 		UART4_Write(0x05);
0x25D6	0x2005    MOVS	R0, #5
0x25D8	0xF7FEF9D6  BL	_UART4_Write+0
;uartSend.c, 600 :: 		UART4_Write(0x82);
0x25DC	0x2082    MOVS	R0, #130
0x25DE	0xF7FEF9D3  BL	_UART4_Write+0
;uartSend.c, 601 :: 		UART4_Write(0x51);
0x25E2	0x2051    MOVS	R0, #81
0x25E4	0xF7FEF9D0  BL	_UART4_Write+0
;uartSend.c, 602 :: 		UART4_Write(0xC5);
0x25E8	0x20C5    MOVS	R0, #197
0x25EA	0xF7FEF9CD  BL	_UART4_Write+0
;uartSend.c, 603 :: 		UART4_Write(0x00);
0x25EE	0x2000    MOVS	R0, #0
0x25F0	0xF7FEF9CA  BL	_UART4_Write+0
;uartSend.c, 604 :: 		UART4_Write(0x0A);
0x25F4	0x200A    MOVS	R0, #10
0x25F6	0xF7FEF9C7  BL	_UART4_Write+0
;uartSend.c, 606 :: 		UART4_Write(0x5A);
0x25FA	0x205A    MOVS	R0, #90
0x25FC	0xF7FEF9C4  BL	_UART4_Write+0
;uartSend.c, 607 :: 		UART4_Write(0xA5);
0x2600	0x20A5    MOVS	R0, #165
0x2602	0xF7FEF9C1  BL	_UART4_Write+0
;uartSend.c, 608 :: 		UART4_Write(0x05);
0x2606	0x2005    MOVS	R0, #5
0x2608	0xF7FEF9BE  BL	_UART4_Write+0
;uartSend.c, 609 :: 		UART4_Write(0x82);
0x260C	0x2082    MOVS	R0, #130
0x260E	0xF7FEF9BB  BL	_UART4_Write+0
;uartSend.c, 610 :: 		UART4_Write(0x51);
0x2612	0x2051    MOVS	R0, #81
0x2614	0xF7FEF9B8  BL	_UART4_Write+0
;uartSend.c, 611 :: 		UART4_Write(0xE5);
0x2618	0x20E5    MOVS	R0, #229
0x261A	0xF7FEF9B5  BL	_UART4_Write+0
;uartSend.c, 612 :: 		UART4_Write(0x00);
0x261E	0x2000    MOVS	R0, #0
0x2620	0xF7FEF9B2  BL	_UART4_Write+0
;uartSend.c, 613 :: 		UART4_Write(0x0C);
0x2624	0x200C    MOVS	R0, #12
0x2626	0xF7FEF9AF  BL	_UART4_Write+0
;uartSend.c, 615 :: 		UART4_Write(0x5A);
0x262A	0x205A    MOVS	R0, #90
0x262C	0xF7FEF9AC  BL	_UART4_Write+0
;uartSend.c, 616 :: 		UART4_Write(0xA5);
0x2630	0x20A5    MOVS	R0, #165
0x2632	0xF7FEF9A9  BL	_UART4_Write+0
;uartSend.c, 617 :: 		UART4_Write(0x05);
0x2636	0x2005    MOVS	R0, #5
0x2638	0xF7FEF9A6  BL	_UART4_Write+0
;uartSend.c, 618 :: 		UART4_Write(0x82);
0x263C	0x2082    MOVS	R0, #130
0x263E	0xF7FEF9A3  BL	_UART4_Write+0
;uartSend.c, 619 :: 		UART4_Write(0x52);
0x2642	0x2052    MOVS	R0, #82
0x2644	0xF7FEF9A0  BL	_UART4_Write+0
;uartSend.c, 620 :: 		UART4_Write(0x05);
0x2648	0x2005    MOVS	R0, #5
0x264A	0xF7FEF99D  BL	_UART4_Write+0
;uartSend.c, 621 :: 		UART4_Write(0x00);
0x264E	0x2000    MOVS	R0, #0
0x2650	0xF7FEF99A  BL	_UART4_Write+0
;uartSend.c, 622 :: 		UART4_Write(0x0E);
0x2654	0x200E    MOVS	R0, #14
0x2656	0xF7FEF997  BL	_UART4_Write+0
;uartSend.c, 623 :: 		}
L_end_uart4Battery2Level0:
0x265A	0xF8DDE000  LDR	LR, [SP, #0]
0x265E	0xB001    ADD	SP, SP, #4
0x2660	0x4770    BX	LR
; end of _uart4Battery2Level0
_uart4Battery1TurnedOff:
;uartSend.c, 151 :: 		void uart4Battery1TurnedOff(){
0x2834	0xB081    SUB	SP, SP, #4
0x2836	0xF8CDE000  STR	LR, [SP, #0]
;uartSend.c, 153 :: 		UART4_Write(0x5A);
0x283A	0x205A    MOVS	R0, #90
0x283C	0xF7FEF8A4  BL	_UART4_Write+0
;uartSend.c, 154 :: 		UART4_Write(0xA5);
0x2840	0x20A5    MOVS	R0, #165
0x2842	0xF7FEF8A1  BL	_UART4_Write+0
;uartSend.c, 155 :: 		UART4_Write(0x05);
0x2846	0x2005    MOVS	R0, #5
0x2848	0xF7FEF89E  BL	_UART4_Write+0
;uartSend.c, 156 :: 		UART4_Write(0x82);
0x284C	0x2082    MOVS	R0, #130
0x284E	0xF7FEF89B  BL	_UART4_Write+0
;uartSend.c, 157 :: 		UART4_Write(0x16);
0x2852	0x2016    MOVS	R0, #22
0x2854	0xF7FEF898  BL	_UART4_Write+0
;uartSend.c, 158 :: 		UART4_Write(0x40);
0x2858	0x2040    MOVS	R0, #64
0x285A	0xF7FEF895  BL	_UART4_Write+0
;uartSend.c, 159 :: 		UART4_Write(0x00);
0x285E	0x2000    MOVS	R0, #0
0x2860	0xF7FEF892  BL	_UART4_Write+0
;uartSend.c, 160 :: 		UART4_Write(0x01);
0x2864	0x2001    MOVS	R0, #1
0x2866	0xF7FEF88F  BL	_UART4_Write+0
;uartSend.c, 161 :: 		}
L_end_uart4Battery1TurnedOff:
0x286A	0xF8DDE000  LDR	LR, [SP, #0]
0x286E	0xB001    ADD	SP, SP, #4
0x2870	0x4770    BX	LR
; end of _uart4Battery1TurnedOff
_uart4Battery2TurnedOff:
;uartSend.c, 175 :: 		void uart4Battery2TurnedOff(){
0x2F74	0xB081    SUB	SP, SP, #4
0x2F76	0xF8CDE000  STR	LR, [SP, #0]
;uartSend.c, 177 :: 		UART4_Write(0x5A);
0x2F7A	0x205A    MOVS	R0, #90
0x2F7C	0xF7FDFD04  BL	_UART4_Write+0
;uartSend.c, 178 :: 		UART4_Write(0xA5);
0x2F80	0x20A5    MOVS	R0, #165
0x2F82	0xF7FDFD01  BL	_UART4_Write+0
;uartSend.c, 179 :: 		UART4_Write(0x05);
0x2F86	0x2005    MOVS	R0, #5
0x2F88	0xF7FDFCFE  BL	_UART4_Write+0
;uartSend.c, 180 :: 		UART4_Write(0x82);
0x2F8C	0x2082    MOVS	R0, #130
0x2F8E	0xF7FDFCFB  BL	_UART4_Write+0
;uartSend.c, 181 :: 		UART4_Write(0x16);
0x2F92	0x2016    MOVS	R0, #22
0x2F94	0xF7FDFCF8  BL	_UART4_Write+0
;uartSend.c, 182 :: 		UART4_Write(0x60);
0x2F98	0x2060    MOVS	R0, #96
0x2F9A	0xF7FDFCF5  BL	_UART4_Write+0
;uartSend.c, 183 :: 		UART4_Write(0x00);
0x2F9E	0x2000    MOVS	R0, #0
0x2FA0	0xF7FDFCF2  BL	_UART4_Write+0
;uartSend.c, 184 :: 		UART4_Write(0x01);
0x2FA4	0x2001    MOVS	R0, #1
0x2FA6	0xF7FDFCEF  BL	_UART4_Write+0
;uartSend.c, 185 :: 		}
L_end_uart4Battery2TurnedOff:
0x2FAA	0xF8DDE000  LDR	LR, [SP, #0]
0x2FAE	0xB001    ADD	SP, SP, #4
0x2FB0	0x4770    BX	LR
; end of _uart4Battery2TurnedOff
_uart4InteriorLightTurnedOff:
;uartSend.c, 126 :: 		void uart4InteriorLightTurnedOff(){
0x2FB4	0xB081    SUB	SP, SP, #4
0x2FB6	0xF8CDE000  STR	LR, [SP, #0]
;uartSend.c, 128 :: 		UART4_Write(0x5A);
0x2FBA	0x205A    MOVS	R0, #90
0x2FBC	0xF7FDFCE4  BL	_UART4_Write+0
;uartSend.c, 129 :: 		UART4_Write(0xA5);
0x2FC0	0x20A5    MOVS	R0, #165
0x2FC2	0xF7FDFCE1  BL	_UART4_Write+0
;uartSend.c, 130 :: 		UART4_Write(0x05);
0x2FC6	0x2005    MOVS	R0, #5
0x2FC8	0xF7FDFCDE  BL	_UART4_Write+0
;uartSend.c, 131 :: 		UART4_Write(0x82);
0x2FCC	0x2082    MOVS	R0, #130
0x2FCE	0xF7FDFCDB  BL	_UART4_Write+0
;uartSend.c, 132 :: 		UART4_Write(0x16);
0x2FD2	0x2016    MOVS	R0, #22
0x2FD4	0xF7FDFCD8  BL	_UART4_Write+0
;uartSend.c, 133 :: 		UART4_Write(0x20);
0x2FD8	0x2020    MOVS	R0, #32
0x2FDA	0xF7FDFCD5  BL	_UART4_Write+0
;uartSend.c, 134 :: 		UART4_Write(0x00);
0x2FDE	0x2000    MOVS	R0, #0
0x2FE0	0xF7FDFCD2  BL	_UART4_Write+0
;uartSend.c, 135 :: 		UART4_Write(0x01);
0x2FE4	0x2001    MOVS	R0, #1
0x2FE6	0xF7FDFCCF  BL	_UART4_Write+0
;uartSend.c, 136 :: 		}
L_end_uart4InteriorLightTurnedOff:
0x2FEA	0xF8DDE000  LDR	LR, [SP, #0]
0x2FEE	0xB001    ADD	SP, SP, #4
0x2FF0	0x4770    BX	LR
; end of _uart4InteriorLightTurnedOff
_uart4NavigationLightTurnedOff:
;uartSend.c, 102 :: 		void uart4NavigationLightTurnedOff(){
0x2FF4	0xB081    SUB	SP, SP, #4
0x2FF6	0xF8CDE000  STR	LR, [SP, #0]
;uartSend.c, 104 :: 		UART4_Write(0x5A);
0x2FFA	0x205A    MOVS	R0, #90
0x2FFC	0xF7FDFCC4  BL	_UART4_Write+0
;uartSend.c, 105 :: 		UART4_Write(0xA5);
0x3000	0x20A5    MOVS	R0, #165
0x3002	0xF7FDFCC1  BL	_UART4_Write+0
;uartSend.c, 106 :: 		UART4_Write(0x05);
0x3006	0x2005    MOVS	R0, #5
0x3008	0xF7FDFCBE  BL	_UART4_Write+0
;uartSend.c, 107 :: 		UART4_Write(0x82);
0x300C	0x2082    MOVS	R0, #130
0x300E	0xF7FDFCBB  BL	_UART4_Write+0
;uartSend.c, 108 :: 		UART4_Write(0x16);
0x3012	0x2016    MOVS	R0, #22
0x3014	0xF7FDFCB8  BL	_UART4_Write+0
;uartSend.c, 109 :: 		UART4_Write(0x00);
0x3018	0x2000    MOVS	R0, #0
0x301A	0xF7FDFCB5  BL	_UART4_Write+0
;uartSend.c, 110 :: 		UART4_Write(0x00);
0x301E	0x2000    MOVS	R0, #0
0x3020	0xF7FDFCB2  BL	_UART4_Write+0
;uartSend.c, 111 :: 		UART4_Write(0x01);
0x3024	0x2001    MOVS	R0, #1
0x3026	0xF7FDFCAF  BL	_UART4_Write+0
;uartSend.c, 112 :: 		}
L_end_uart4NavigationLightTurnedOff:
0x302A	0xF8DDE000  LDR	LR, [SP, #0]
0x302E	0xB001    ADD	SP, SP, #4
0x3030	0x4770    BX	LR
; end of _uart4NavigationLightTurnedOff
_uart4LightingTurnedOff:
;uartSend.c, 210 :: 		void uart4LightingTurnedOff(){
0x2F34	0xB081    SUB	SP, SP, #4
0x2F36	0xF8CDE000  STR	LR, [SP, #0]
;uartSend.c, 222 :: 		UART4_Write(0x5A);
0x2F3A	0x205A    MOVS	R0, #90
0x2F3C	0xF7FDFD24  BL	_UART4_Write+0
;uartSend.c, 223 :: 		UART4_Write(0xA5);
0x2F40	0x20A5    MOVS	R0, #165
0x2F42	0xF7FDFD21  BL	_UART4_Write+0
;uartSend.c, 224 :: 		UART4_Write(0x05);
0x2F46	0x2005    MOVS	R0, #5
0x2F48	0xF7FDFD1E  BL	_UART4_Write+0
;uartSend.c, 225 :: 		UART4_Write(0x82);
0x2F4C	0x2082    MOVS	R0, #130
0x2F4E	0xF7FDFD1B  BL	_UART4_Write+0
;uartSend.c, 226 :: 		UART4_Write(0x13);
0x2F52	0x2013    MOVS	R0, #19
0x2F54	0xF7FDFD18  BL	_UART4_Write+0
;uartSend.c, 227 :: 		UART4_Write(0x00);
0x2F58	0x2000    MOVS	R0, #0
0x2F5A	0xF7FDFD15  BL	_UART4_Write+0
;uartSend.c, 228 :: 		UART4_Write(0x00);
0x2F5E	0x2000    MOVS	R0, #0
0x2F60	0xF7FDFD12  BL	_UART4_Write+0
;uartSend.c, 229 :: 		UART4_Write(0x01);
0x2F64	0x2001    MOVS	R0, #1
0x2F66	0xF7FDFD0F  BL	_UART4_Write+0
;uartSend.c, 230 :: 		}
L_end_uart4LightingTurnedOff:
0x2F6A	0xF8DDE000  LDR	LR, [SP, #0]
0x2F6E	0xB001    ADD	SP, SP, #4
0x2F70	0x4770    BX	LR
; end of _uart4LightingTurnedOff
_InitTimer2:
;timers.h, 3 :: 		void InitTimer2(){
0x3198	0xB081    SUB	SP, SP, #4
0x319A	0xF8CDE000  STR	LR, [SP, #0]
;timers.h, 4 :: 		RCC_APB1ENR.TIM2EN = 1;
0x319E	0x2101    MOVS	R1, #1
0x31A0	0xB249    SXTB	R1, R1
0x31A2	0x480D    LDR	R0, [PC, #52]
0x31A4	0x6001    STR	R1, [R0, #0]
;timers.h, 5 :: 		TIM2_CR1.CEN = 0;
0x31A6	0x2100    MOVS	R1, #0
0x31A8	0xB249    SXTB	R1, R1
0x31AA	0x480C    LDR	R0, [PC, #48]
0x31AC	0x6001    STR	R1, [R0, #0]
;timers.h, 6 :: 		TIM2_PSC = 13;
0x31AE	0x210D    MOVS	R1, #13
0x31B0	0x480B    LDR	R0, [PC, #44]
0x31B2	0x6001    STR	R1, [R0, #0]
;timers.h, 7 :: 		TIM2_ARR = 59999;
0x31B4	0xF64E215F  MOVW	R1, #59999
0x31B8	0x480A    LDR	R0, [PC, #40]
0x31BA	0x6001    STR	R1, [R0, #0]
;timers.h, 8 :: 		NVIC_IntEnable(IVT_INT_TIM2);
0x31BC	0xF240002C  MOVW	R0, #44
0x31C0	0xF7FFFAA8  BL	_NVIC_IntEnable+0
;timers.h, 9 :: 		TIM2_DIER.UIE = 1;
0x31C4	0x2101    MOVS	R1, #1
0x31C6	0xB249    SXTB	R1, R1
0x31C8	0x4807    LDR	R0, [PC, #28]
0x31CA	0x6001    STR	R1, [R0, #0]
;timers.h, 10 :: 		TIM2_CR1.CEN = 1;
0x31CC	0x4803    LDR	R0, [PC, #12]
0x31CE	0x6001    STR	R1, [R0, #0]
;timers.h, 11 :: 		}
L_end_InitTimer2:
0x31D0	0xF8DDE000  LDR	LR, [SP, #0]
0x31D4	0xB001    ADD	SP, SP, #4
0x31D6	0x4770    BX	LR
0x31D8	0x08004247  	RCC_APB1ENR+0
0x31DC	0x00004200  	TIM2_CR1+0
0x31E0	0x00284000  	TIM2_PSC+0
0x31E4	0x002C4000  	TIM2_ARR+0
0x31E8	0x01804200  	TIM2_DIER+0
; end of _InitTimer2
_InitTimer4:
;timers.h, 15 :: 		void InitTimer4(){
0x31EC	0xB081    SUB	SP, SP, #4
0x31EE	0xF8CDE000  STR	LR, [SP, #0]
;timers.h, 16 :: 		RCC_APB1ENR.TIM4EN = 1;
0x31F2	0x2101    MOVS	R1, #1
0x31F4	0xB249    SXTB	R1, R1
0x31F6	0x480D    LDR	R0, [PC, #52]
0x31F8	0x6001    STR	R1, [R0, #0]
;timers.h, 17 :: 		TIM4_CR1.CEN = 0;
0x31FA	0x2100    MOVS	R1, #0
0x31FC	0xB249    SXTB	R1, R1
0x31FE	0x480C    LDR	R0, [PC, #48]
0x3200	0x6001    STR	R1, [R0, #0]
;timers.h, 18 :: 		TIM4_PSC = 69;
0x3202	0x2145    MOVS	R1, #69
0x3204	0x480B    LDR	R0, [PC, #44]
0x3206	0x6001    STR	R1, [R0, #0]
;timers.h, 19 :: 		TIM4_ARR = 59999;
0x3208	0xF64E215F  MOVW	R1, #59999
0x320C	0x480A    LDR	R0, [PC, #40]
0x320E	0x6001    STR	R1, [R0, #0]
;timers.h, 20 :: 		NVIC_IntEnable(IVT_INT_TIM4);
0x3210	0xF240002E  MOVW	R0, #46
0x3214	0xF7FFFA7E  BL	_NVIC_IntEnable+0
;timers.h, 21 :: 		TIM4_DIER.UIE = 1;
0x3218	0x2101    MOVS	R1, #1
0x321A	0xB249    SXTB	R1, R1
0x321C	0x4807    LDR	R0, [PC, #28]
0x321E	0x6001    STR	R1, [R0, #0]
;timers.h, 22 :: 		TIM4_CR1.CEN = 1;
0x3220	0x4803    LDR	R0, [PC, #12]
0x3222	0x6001    STR	R1, [R0, #0]
;timers.h, 23 :: 		}
L_end_InitTimer4:
0x3224	0xF8DDE000  LDR	LR, [SP, #0]
0x3228	0xB001    ADD	SP, SP, #4
0x322A	0x4770    BX	LR
0x322C	0x08084247  	RCC_APB1ENR+0
0x3230	0x00004201  	TIM4_CR1+0
0x3234	0x08284000  	TIM4_PSC+0
0x3238	0x082C4000  	TIM4_ARR+0
0x323C	0x01804201  	TIM4_DIER+0
; end of _InitTimer4
_change_velocity_mode:
;gearVelocity.c, 6 :: 		void change_velocity_mode(unsigned int mode){
; mode start address is: 0 (R0)
0x3034	0xB081    SUB	SP, SP, #4
0x3036	0xF8CDE000  STR	LR, [SP, #0]
; mode end address is: 0 (R0)
; mode start address is: 0 (R0)
;gearVelocity.c, 7 :: 		switch(mode){
0x303A	0xE077    B	L_change_velocity_mode0
; mode end address is: 0 (R0)
;gearVelocity.c, 8 :: 		case 0:
L_change_velocity_mode2:
;gearVelocity.c, 9 :: 		velocity_gear1 = GEAR_VELOCITY_1_TURTLE;
0x303C	0x221B    MOVS	R2, #27
0x303E	0x4942    LDR	R1, [PC, #264]
0x3040	0x800A    STRH	R2, [R1, #0]
;gearVelocity.c, 10 :: 		velocity_gear2 = GEAR_VELOCITY_2_TURTLE;
0x3042	0x2226    MOVS	R2, #38
0x3044	0x4941    LDR	R1, [PC, #260]
0x3046	0x800A    STRH	R2, [R1, #0]
;gearVelocity.c, 11 :: 		velocity_gear3 = GEAR_VELOCITY_3_TURTLE;
0x3048	0x223B    MOVS	R2, #59
0x304A	0x4941    LDR	R1, [PC, #260]
0x304C	0x800A    STRH	R2, [R1, #0]
;gearVelocity.c, 12 :: 		velocity_gearR = GEAR_VELOCITY_R_TURTLE;
0x304E	0x2235    MOVS	R2, #53
0x3050	0x4940    LDR	R1, [PC, #256]
0x3052	0x800A    STRH	R2, [R1, #0]
;gearVelocity.c, 13 :: 		velocity_gearS = GEAR_VELOCITY_S;
0x3054	0x2200    MOVS	R2, #0
0x3056	0x4940    LDR	R1, [PC, #256]
0x3058	0x800A    STRH	R2, [R1, #0]
;gearVelocity.c, 15 :: 		velocity_mode_send = 0x01;
0x305A	0x2201    MOVS	R2, #1
0x305C	0x493F    LDR	R1, [PC, #252]
0x305E	0x800A    STRH	R2, [R1, #0]
;gearVelocity.c, 17 :: 		uart4TurtleTurnedOn();
0x3060	0xF7FDFCEE  BL	_uart4TurtleTurnedOn+0
;gearVelocity.c, 18 :: 		uart4RabbitTurnedOff();
0x3064	0xF7FDFCCC  BL	_uart4RabbitTurnedOff+0
;gearVelocity.c, 19 :: 		uart4LeopardTurnedOff();
0x3068	0xF7FDFD2A  BL	_uart4LeopardTurnedOff+0
;gearVelocity.c, 20 :: 		uart4SpeedModeTurtle();
0x306C	0xF7FDFD08  BL	_uart4SpeedModeTurtle+0
;gearVelocity.c, 22 :: 		velocity_mode = 0;
0x3070	0x2200    MOVS	R2, #0
0x3072	0x493B    LDR	R1, [PC, #236]
0x3074	0x800A    STRH	R2, [R1, #0]
;gearVelocity.c, 23 :: 		break;
0x3076	0xE062    B	L_change_velocity_mode1
;gearVelocity.c, 24 :: 		case 1:
L_change_velocity_mode3:
;gearVelocity.c, 25 :: 		velocity_gear1 = GEAR_VELOCITY_1_RABBIT;
0x3078	0x2220    MOVS	R2, #32
0x307A	0x4933    LDR	R1, [PC, #204]
0x307C	0x800A    STRH	R2, [R1, #0]
;gearVelocity.c, 26 :: 		velocity_gear2 = GEAR_VELOCITY_2_RABBIT;
0x307E	0x2230    MOVS	R2, #48
0x3080	0x4932    LDR	R1, [PC, #200]
0x3082	0x800A    STRH	R2, [R1, #0]
;gearVelocity.c, 27 :: 		velocity_gear3 = GEAR_VELOCITY_3_RABBIT;
0x3084	0x224A    MOVS	R2, #74
0x3086	0x4932    LDR	R1, [PC, #200]
0x3088	0x800A    STRH	R2, [R1, #0]
;gearVelocity.c, 28 :: 		velocity_gearR = GEAR_VELOCITY_R_RABBIT;
0x308A	0x2235    MOVS	R2, #53
0x308C	0x4931    LDR	R1, [PC, #196]
0x308E	0x800A    STRH	R2, [R1, #0]
;gearVelocity.c, 29 :: 		velocity_gearS = GEAR_VELOCITY_S;
0x3090	0x2200    MOVS	R2, #0
0x3092	0x4931    LDR	R1, [PC, #196]
0x3094	0x800A    STRH	R2, [R1, #0]
;gearVelocity.c, 31 :: 		velocity_mode_send = 0x02;
0x3096	0x2202    MOVS	R2, #2
0x3098	0x4930    LDR	R1, [PC, #192]
0x309A	0x800A    STRH	R2, [R1, #0]
;gearVelocity.c, 33 :: 		uart4TurtleTurnedOff();
0x309C	0xF7FDFC54  BL	_uart4TurtleTurnedOff+0
;gearVelocity.c, 34 :: 		uart4RabbitTurnedOn();
0x30A0	0xF7FDFC80  BL	_uart4RabbitTurnedOn+0
;gearVelocity.c, 35 :: 		uart4LeopardTurnedOff();
0x30A4	0xF7FDFD0C  BL	_uart4LeopardTurnedOff+0
;gearVelocity.c, 36 :: 		uart4SpeedModeRabbit();
0x30A8	0xF7FDFC0E  BL	_uart4SpeedModeRabbit+0
;gearVelocity.c, 38 :: 		velocity_mode = 1;
0x30AC	0x2201    MOVS	R2, #1
0x30AE	0x492C    LDR	R1, [PC, #176]
0x30B0	0x800A    STRH	R2, [R1, #0]
;gearVelocity.c, 40 :: 		break;
0x30B2	0xE044    B	L_change_velocity_mode1
;gearVelocity.c, 41 :: 		case 2:
L_change_velocity_mode4:
;gearVelocity.c, 42 :: 		velocity_gear1 = GEAR_VELOCITY_1_LEOPARD;
0x30B4	0x2235    MOVS	R2, #53
0x30B6	0x4924    LDR	R1, [PC, #144]
0x30B8	0x800A    STRH	R2, [R1, #0]
;gearVelocity.c, 43 :: 		velocity_gear2 = GEAR_VELOCITY_2_LEOPARD;
0x30BA	0x2250    MOVS	R2, #80
0x30BC	0x4923    LDR	R1, [PC, #140]
0x30BE	0x800A    STRH	R2, [R1, #0]
;gearVelocity.c, 44 :: 		velocity_gear3 = GEAR_VELOCITY_3_LEOPARD;
0x30C0	0x2265    MOVS	R2, #101
0x30C2	0x4923    LDR	R1, [PC, #140]
0x30C4	0x800A    STRH	R2, [R1, #0]
;gearVelocity.c, 45 :: 		velocity_gearR = GEAR_VELOCITY_R_LEOPARD;
0x30C6	0x2235    MOVS	R2, #53
0x30C8	0x4922    LDR	R1, [PC, #136]
0x30CA	0x800A    STRH	R2, [R1, #0]
;gearVelocity.c, 46 :: 		velocity_gearS = GEAR_VELOCITY_S;
0x30CC	0x2200    MOVS	R2, #0
0x30CE	0x4922    LDR	R1, [PC, #136]
0x30D0	0x800A    STRH	R2, [R1, #0]
;gearVelocity.c, 48 :: 		velocity_mode_send = 0x04;
0x30D2	0x2204    MOVS	R2, #4
0x30D4	0x4921    LDR	R1, [PC, #132]
0x30D6	0x800A    STRH	R2, [R1, #0]
;gearVelocity.c, 50 :: 		uart4TurtleTurnedOff();
0x30D8	0xF7FDFC36  BL	_uart4TurtleTurnedOff+0
;gearVelocity.c, 51 :: 		uart4RabbitTurnedOff();
0x30DC	0xF7FDFC90  BL	_uart4RabbitTurnedOff+0
;gearVelocity.c, 52 :: 		uart4LeopardTurnedOn();
0x30E0	0xF7FDFC12  BL	_uart4LeopardTurnedOn+0
;gearVelocity.c, 53 :: 		uart4SpeedModeLeopard();
0x30E4	0xF7FEFB6A  BL	_uart4SpeedModeLeopard+0
;gearVelocity.c, 54 :: 		velocity_mode = 2;
0x30E8	0x2202    MOVS	R2, #2
0x30EA	0x491D    LDR	R1, [PC, #116]
0x30EC	0x800A    STRH	R2, [R1, #0]
;gearVelocity.c, 55 :: 		break;
0x30EE	0xE026    B	L_change_velocity_mode1
;gearVelocity.c, 56 :: 		default:
L_change_velocity_mode5:
;gearVelocity.c, 57 :: 		velocity_gear1 = GEAR_VELOCITY_1_RABBIT;
0x30F0	0x2220    MOVS	R2, #32
0x30F2	0x4915    LDR	R1, [PC, #84]
0x30F4	0x800A    STRH	R2, [R1, #0]
;gearVelocity.c, 58 :: 		velocity_gear2 = GEAR_VELOCITY_2_RABBIT;
0x30F6	0x2230    MOVS	R2, #48
0x30F8	0x4914    LDR	R1, [PC, #80]
0x30FA	0x800A    STRH	R2, [R1, #0]
;gearVelocity.c, 59 :: 		velocity_gear3 = GEAR_VELOCITY_3_RABBIT;
0x30FC	0x224A    MOVS	R2, #74
0x30FE	0x4914    LDR	R1, [PC, #80]
0x3100	0x800A    STRH	R2, [R1, #0]
;gearVelocity.c, 60 :: 		velocity_gearR = GEAR_VELOCITY_R_RABBIT;
0x3102	0x2235    MOVS	R2, #53
0x3104	0x4913    LDR	R1, [PC, #76]
0x3106	0x800A    STRH	R2, [R1, #0]
;gearVelocity.c, 61 :: 		velocity_gearS = GEAR_VELOCITY_S;
0x3108	0x2200    MOVS	R2, #0
0x310A	0x4913    LDR	R1, [PC, #76]
0x310C	0x800A    STRH	R2, [R1, #0]
;gearVelocity.c, 63 :: 		velocity_mode_send = 0x02;
0x310E	0x2202    MOVS	R2, #2
0x3110	0x4912    LDR	R1, [PC, #72]
0x3112	0x800A    STRH	R2, [R1, #0]
;gearVelocity.c, 65 :: 		uart4TurtleTurnedOff();
0x3114	0xF7FDFC18  BL	_uart4TurtleTurnedOff+0
;gearVelocity.c, 66 :: 		uart4RabbitTurnedOn();
0x3118	0xF7FDFC44  BL	_uart4RabbitTurnedOn+0
;gearVelocity.c, 67 :: 		uart4LeopardTurnedOff();
0x311C	0xF7FDFCD0  BL	_uart4LeopardTurnedOff+0
;gearVelocity.c, 68 :: 		uart4SpeedModeRabbit();
0x3120	0xF7FDFBD2  BL	_uart4SpeedModeRabbit+0
;gearVelocity.c, 70 :: 		velocity_mode = 1;
0x3124	0x2201    MOVS	R2, #1
0x3126	0x490E    LDR	R1, [PC, #56]
0x3128	0x800A    STRH	R2, [R1, #0]
;gearVelocity.c, 72 :: 		break;
0x312A	0xE008    B	L_change_velocity_mode1
;gearVelocity.c, 73 :: 		}
L_change_velocity_mode0:
; mode start address is: 0 (R0)
0x312C	0x2800    CMP	R0, #0
0x312E	0xF43FAF85  BEQ	L_change_velocity_mode2
0x3132	0x2801    CMP	R0, #1
0x3134	0xF43FAFA0  BEQ	L_change_velocity_mode3
0x3138	0x2802    CMP	R0, #2
0x313A	0xD0BB    BEQ	L_change_velocity_mode4
; mode end address is: 0 (R0)
0x313C	0xE7D8    B	L_change_velocity_mode5
L_change_velocity_mode1:
;gearVelocity.c, 74 :: 		}
L_end_change_velocity_mode:
0x313E	0xF8DDE000  LDR	LR, [SP, #0]
0x3142	0xB001    ADD	SP, SP, #4
0x3144	0x4770    BX	LR
0x3146	0xBF00    NOP
0x3148	0x09F42000  	_velocity_gear1+0
0x314C	0x09F62000  	_velocity_gear2+0
0x3150	0x09F82000  	_velocity_gear3+0
0x3154	0x09FA2000  	_velocity_gearR+0
0x3158	0x09FC2000  	_velocity_gearS+0
0x315C	0x002A2000  	_velocity_mode_send+0
0x3160	0x09FE2000  	_velocity_mode+0
; end of _change_velocity_mode
_uart4TurtleTurnedOn:
;uartSend.c, 658 :: 		void uart4TurtleTurnedOn(){
0x0A40	0xB081    SUB	SP, SP, #4
0x0A42	0xF8CDE000  STR	LR, [SP, #0]
;uartSend.c, 659 :: 		UART4_Write(0x5A);
0x0A46	0x205A    MOVS	R0, #90
0x0A48	0xF7FFFF9E  BL	_UART4_Write+0
;uartSend.c, 660 :: 		UART4_Write(0xA5);
0x0A4C	0x20A5    MOVS	R0, #165
0x0A4E	0xF7FFFF9B  BL	_UART4_Write+0
;uartSend.c, 661 :: 		UART4_Write(0x05);
0x0A52	0x2005    MOVS	R0, #5
0x0A54	0xF7FFFF98  BL	_UART4_Write+0
;uartSend.c, 662 :: 		UART4_Write(0x82);
0x0A58	0x2082    MOVS	R0, #130
0x0A5A	0xF7FFFF95  BL	_UART4_Write+0
;uartSend.c, 663 :: 		UART4_Write(0x18);
0x0A5E	0x2018    MOVS	R0, #24
0x0A60	0xF7FFFF92  BL	_UART4_Write+0
;uartSend.c, 664 :: 		UART4_Write(0x00);
0x0A64	0x2000    MOVS	R0, #0
0x0A66	0xF7FFFF8F  BL	_UART4_Write+0
;uartSend.c, 665 :: 		UART4_Write(0x00);
0x0A6A	0x2000    MOVS	R0, #0
0x0A6C	0xF7FFFF8C  BL	_UART4_Write+0
;uartSend.c, 666 :: 		UART4_Write(0x00);
0x0A70	0x2000    MOVS	R0, #0
0x0A72	0xF7FFFF89  BL	_UART4_Write+0
;uartSend.c, 667 :: 		}
L_end_uart4TurtleTurnedOn:
0x0A76	0xF8DDE000  LDR	LR, [SP, #0]
0x0A7A	0xB001    ADD	SP, SP, #4
0x0A7C	0x4770    BX	LR
; end of _uart4TurtleTurnedOn
_uart4RabbitTurnedOff:
;uartSend.c, 691 :: 		void uart4RabbitTurnedOff(){
0x0A00	0xB081    SUB	SP, SP, #4
0x0A02	0xF8CDE000  STR	LR, [SP, #0]
;uartSend.c, 692 :: 		UART4_Write(0x5A);
0x0A06	0x205A    MOVS	R0, #90
0x0A08	0xF7FFFFBE  BL	_UART4_Write+0
;uartSend.c, 693 :: 		UART4_Write(0xA5);
0x0A0C	0x20A5    MOVS	R0, #165
0x0A0E	0xF7FFFFBB  BL	_UART4_Write+0
;uartSend.c, 694 :: 		UART4_Write(0x05);
0x0A12	0x2005    MOVS	R0, #5
0x0A14	0xF7FFFFB8  BL	_UART4_Write+0
;uartSend.c, 695 :: 		UART4_Write(0x82);
0x0A18	0x2082    MOVS	R0, #130
0x0A1A	0xF7FFFFB5  BL	_UART4_Write+0
;uartSend.c, 696 :: 		UART4_Write(0x18);
0x0A1E	0x2018    MOVS	R0, #24
0x0A20	0xF7FFFFB2  BL	_UART4_Write+0
;uartSend.c, 697 :: 		UART4_Write(0x20);
0x0A24	0x2020    MOVS	R0, #32
0x0A26	0xF7FFFFAF  BL	_UART4_Write+0
;uartSend.c, 698 :: 		UART4_Write(0x00);
0x0A2A	0x2000    MOVS	R0, #0
0x0A2C	0xF7FFFFAC  BL	_UART4_Write+0
;uartSend.c, 699 :: 		UART4_Write(0x01);
0x0A30	0x2001    MOVS	R0, #1
0x0A32	0xF7FFFFA9  BL	_UART4_Write+0
;uartSend.c, 700 :: 		}
L_end_uart4RabbitTurnedOff:
0x0A36	0xF8DDE000  LDR	LR, [SP, #0]
0x0A3A	0xB001    ADD	SP, SP, #4
0x0A3C	0x4770    BX	LR
; end of _uart4RabbitTurnedOff
_uart4LeopardTurnedOff:
;uartSend.c, 713 :: 		void uart4LeopardTurnedOff(){
0x0AC0	0xB081    SUB	SP, SP, #4
0x0AC2	0xF8CDE000  STR	LR, [SP, #0]
;uartSend.c, 714 :: 		UART4_Write(0x5A);
0x0AC6	0x205A    MOVS	R0, #90
0x0AC8	0xF7FFFF5E  BL	_UART4_Write+0
;uartSend.c, 715 :: 		UART4_Write(0xA5);
0x0ACC	0x20A5    MOVS	R0, #165
0x0ACE	0xF7FFFF5B  BL	_UART4_Write+0
;uartSend.c, 716 :: 		UART4_Write(0x05);
0x0AD2	0x2005    MOVS	R0, #5
0x0AD4	0xF7FFFF58  BL	_UART4_Write+0
;uartSend.c, 717 :: 		UART4_Write(0x82);
0x0AD8	0x2082    MOVS	R0, #130
0x0ADA	0xF7FFFF55  BL	_UART4_Write+0
;uartSend.c, 718 :: 		UART4_Write(0x18);
0x0ADE	0x2018    MOVS	R0, #24
0x0AE0	0xF7FFFF52  BL	_UART4_Write+0
;uartSend.c, 719 :: 		UART4_Write(0x40);
0x0AE4	0x2040    MOVS	R0, #64
0x0AE6	0xF7FFFF4F  BL	_UART4_Write+0
;uartSend.c, 720 :: 		UART4_Write(0x00);
0x0AEA	0x2000    MOVS	R0, #0
0x0AEC	0xF7FFFF4C  BL	_UART4_Write+0
;uartSend.c, 721 :: 		UART4_Write(0x01);
0x0AF0	0x2001    MOVS	R0, #1
0x0AF2	0xF7FFFF49  BL	_UART4_Write+0
;uartSend.c, 722 :: 		}
L_end_uart4LeopardTurnedOff:
0x0AF6	0xF8DDE000  LDR	LR, [SP, #0]
0x0AFA	0xB001    ADD	SP, SP, #4
0x0AFC	0x4770    BX	LR
; end of _uart4LeopardTurnedOff
_uart4SpeedModeTurtle:
;uartSend.c, 724 :: 		void uart4SpeedModeTurtle(){
0x0A80	0xB081    SUB	SP, SP, #4
0x0A82	0xF8CDE000  STR	LR, [SP, #0]
;uartSend.c, 725 :: 		UART4_Write(0x5A);
0x0A86	0x205A    MOVS	R0, #90
0x0A88	0xF7FFFF7E  BL	_UART4_Write+0
;uartSend.c, 726 :: 		UART4_Write(0xA5);
0x0A8C	0x20A5    MOVS	R0, #165
0x0A8E	0xF7FFFF7B  BL	_UART4_Write+0
;uartSend.c, 727 :: 		UART4_Write(0x05);
0x0A92	0x2005    MOVS	R0, #5
0x0A94	0xF7FFFF78  BL	_UART4_Write+0
;uartSend.c, 728 :: 		UART4_Write(0x82);
0x0A98	0x2082    MOVS	R0, #130
0x0A9A	0xF7FFFF75  BL	_UART4_Write+0
;uartSend.c, 729 :: 		UART4_Write(0x54);
0x0A9E	0x2054    MOVS	R0, #84
0x0AA0	0xF7FFFF72  BL	_UART4_Write+0
;uartSend.c, 730 :: 		UART4_Write(0x65);
0x0AA4	0x2065    MOVS	R0, #101
0x0AA6	0xF7FFFF6F  BL	_UART4_Write+0
;uartSend.c, 731 :: 		UART4_Write(0x00);
0x0AAA	0x2000    MOVS	R0, #0
0x0AAC	0xF7FFFF6C  BL	_UART4_Write+0
;uartSend.c, 732 :: 		UART4_Write(0x00);
0x0AB0	0x2000    MOVS	R0, #0
0x0AB2	0xF7FFFF69  BL	_UART4_Write+0
;uartSend.c, 733 :: 		}
L_end_uart4SpeedModeTurtle:
0x0AB6	0xF8DDE000  LDR	LR, [SP, #0]
0x0ABA	0xB001    ADD	SP, SP, #4
0x0ABC	0x4770    BX	LR
; end of _uart4SpeedModeTurtle
_uart4TurtleTurnedOff:
;uartSend.c, 669 :: 		void uart4TurtleTurnedOff(){
0x0948	0xB081    SUB	SP, SP, #4
0x094A	0xF8CDE000  STR	LR, [SP, #0]
;uartSend.c, 670 :: 		UART4_Write(0x5A);
0x094E	0x205A    MOVS	R0, #90
0x0950	0xF000F81A  BL	_UART4_Write+0
;uartSend.c, 671 :: 		UART4_Write(0xA5);
0x0954	0x20A5    MOVS	R0, #165
0x0956	0xF000F817  BL	_UART4_Write+0
;uartSend.c, 672 :: 		UART4_Write(0x05);
0x095A	0x2005    MOVS	R0, #5
0x095C	0xF000F814  BL	_UART4_Write+0
;uartSend.c, 673 :: 		UART4_Write(0x82);
0x0960	0x2082    MOVS	R0, #130
0x0962	0xF000F811  BL	_UART4_Write+0
;uartSend.c, 674 :: 		UART4_Write(0x18);
0x0966	0x2018    MOVS	R0, #24
0x0968	0xF000F80E  BL	_UART4_Write+0
;uartSend.c, 675 :: 		UART4_Write(0x00);
0x096C	0x2000    MOVS	R0, #0
0x096E	0xF000F80B  BL	_UART4_Write+0
;uartSend.c, 676 :: 		UART4_Write(0x00);
0x0972	0x2000    MOVS	R0, #0
0x0974	0xF000F808  BL	_UART4_Write+0
;uartSend.c, 677 :: 		UART4_Write(0x01);
0x0978	0x2001    MOVS	R0, #1
0x097A	0xF000F805  BL	_UART4_Write+0
;uartSend.c, 678 :: 		}
L_end_uart4TurtleTurnedOff:
0x097E	0xF8DDE000  LDR	LR, [SP, #0]
0x0982	0xB001    ADD	SP, SP, #4
0x0984	0x4770    BX	LR
; end of _uart4TurtleTurnedOff
_uart4RabbitTurnedOn:
;uartSend.c, 680 :: 		void uart4RabbitTurnedOn(){
0x09A4	0xB081    SUB	SP, SP, #4
0x09A6	0xF8CDE000  STR	LR, [SP, #0]
;uartSend.c, 681 :: 		UART4_Write(0x5A);
0x09AA	0x205A    MOVS	R0, #90
0x09AC	0xF7FFFFEC  BL	_UART4_Write+0
;uartSend.c, 682 :: 		UART4_Write(0xA5);
0x09B0	0x20A5    MOVS	R0, #165
0x09B2	0xF7FFFFE9  BL	_UART4_Write+0
;uartSend.c, 683 :: 		UART4_Write(0x05);
0x09B6	0x2005    MOVS	R0, #5
0x09B8	0xF7FFFFE6  BL	_UART4_Write+0
;uartSend.c, 684 :: 		UART4_Write(0x82);
0x09BC	0x2082    MOVS	R0, #130
0x09BE	0xF7FFFFE3  BL	_UART4_Write+0
;uartSend.c, 685 :: 		UART4_Write(0x18);
0x09C2	0x2018    MOVS	R0, #24
0x09C4	0xF7FFFFE0  BL	_UART4_Write+0
;uartSend.c, 686 :: 		UART4_Write(0x20);
0x09C8	0x2020    MOVS	R0, #32
0x09CA	0xF7FFFFDD  BL	_UART4_Write+0
;uartSend.c, 687 :: 		UART4_Write(0x00);
0x09CE	0x2000    MOVS	R0, #0
0x09D0	0xF7FFFFDA  BL	_UART4_Write+0
;uartSend.c, 688 :: 		UART4_Write(0x00);
0x09D4	0x2000    MOVS	R0, #0
0x09D6	0xF7FFFFD7  BL	_UART4_Write+0
;uartSend.c, 689 :: 		}
L_end_uart4RabbitTurnedOn:
0x09DA	0xF8DDE000  LDR	LR, [SP, #0]
0x09DE	0xB001    ADD	SP, SP, #4
0x09E0	0x4770    BX	LR
; end of _uart4RabbitTurnedOn
_uart4SpeedModeRabbit:
;uartSend.c, 735 :: 		void uart4SpeedModeRabbit(){
0x08C8	0xB081    SUB	SP, SP, #4
0x08CA	0xF8CDE000  STR	LR, [SP, #0]
;uartSend.c, 736 :: 		UART4_Write(0x5A);
0x08CE	0x205A    MOVS	R0, #90
0x08D0	0xF000F85A  BL	_UART4_Write+0
;uartSend.c, 737 :: 		UART4_Write(0xA5);
0x08D4	0x20A5    MOVS	R0, #165
0x08D6	0xF000F857  BL	_UART4_Write+0
;uartSend.c, 738 :: 		UART4_Write(0x05);
0x08DA	0x2005    MOVS	R0, #5
0x08DC	0xF000F854  BL	_UART4_Write+0
;uartSend.c, 739 :: 		UART4_Write(0x82);
0x08E0	0x2082    MOVS	R0, #130
0x08E2	0xF000F851  BL	_UART4_Write+0
;uartSend.c, 740 :: 		UART4_Write(0x54);
0x08E6	0x2054    MOVS	R0, #84
0x08E8	0xF000F84E  BL	_UART4_Write+0
;uartSend.c, 741 :: 		UART4_Write(0x65);
0x08EC	0x2065    MOVS	R0, #101
0x08EE	0xF000F84B  BL	_UART4_Write+0
;uartSend.c, 742 :: 		UART4_Write(0x00);
0x08F2	0x2000    MOVS	R0, #0
0x08F4	0xF000F848  BL	_UART4_Write+0
;uartSend.c, 743 :: 		UART4_Write(0x01);
0x08F8	0x2001    MOVS	R0, #1
0x08FA	0xF000F845  BL	_UART4_Write+0
;uartSend.c, 744 :: 		}
L_end_uart4SpeedModeRabbit:
0x08FE	0xF8DDE000  LDR	LR, [SP, #0]
0x0902	0xB001    ADD	SP, SP, #4
0x0904	0x4770    BX	LR
; end of _uart4SpeedModeRabbit
_uart4LeopardTurnedOn:
;uartSend.c, 702 :: 		void uart4LeopardTurnedOn(){
0x0908	0xB081    SUB	SP, SP, #4
0x090A	0xF8CDE000  STR	LR, [SP, #0]
;uartSend.c, 703 :: 		UART4_Write(0x5A);
0x090E	0x205A    MOVS	R0, #90
0x0910	0xF000F83A  BL	_UART4_Write+0
;uartSend.c, 704 :: 		UART4_Write(0xA5);
0x0914	0x20A5    MOVS	R0, #165
0x0916	0xF000F837  BL	_UART4_Write+0
;uartSend.c, 705 :: 		UART4_Write(0x05);
0x091A	0x2005    MOVS	R0, #5
0x091C	0xF000F834  BL	_UART4_Write+0
;uartSend.c, 706 :: 		UART4_Write(0x82);
0x0920	0x2082    MOVS	R0, #130
0x0922	0xF000F831  BL	_UART4_Write+0
;uartSend.c, 707 :: 		UART4_Write(0x18);
0x0926	0x2018    MOVS	R0, #24
0x0928	0xF000F82E  BL	_UART4_Write+0
;uartSend.c, 708 :: 		UART4_Write(0x40);
0x092C	0x2040    MOVS	R0, #64
0x092E	0xF000F82B  BL	_UART4_Write+0
;uartSend.c, 709 :: 		UART4_Write(0x00);
0x0932	0x2000    MOVS	R0, #0
0x0934	0xF000F828  BL	_UART4_Write+0
;uartSend.c, 710 :: 		UART4_Write(0x00);
0x0938	0x2000    MOVS	R0, #0
0x093A	0xF000F825  BL	_UART4_Write+0
;uartSend.c, 711 :: 		}
L_end_uart4LeopardTurnedOn:
0x093E	0xF8DDE000  LDR	LR, [SP, #0]
0x0942	0xB001    ADD	SP, SP, #4
0x0944	0x4770    BX	LR
; end of _uart4LeopardTurnedOn
_uart4SpeedModeLeopard:
;uartSend.c, 746 :: 		void uart4SpeedModeLeopard(){
0x17BC	0xB081    SUB	SP, SP, #4
0x17BE	0xF8CDE000  STR	LR, [SP, #0]
;uartSend.c, 747 :: 		UART4_Write(0x5A);
0x17C2	0x205A    MOVS	R0, #90
0x17C4	0xF7FFF8E0  BL	_UART4_Write+0
;uartSend.c, 748 :: 		UART4_Write(0xA5);
0x17C8	0x20A5    MOVS	R0, #165
0x17CA	0xF7FFF8DD  BL	_UART4_Write+0
;uartSend.c, 749 :: 		UART4_Write(0x05);
0x17CE	0x2005    MOVS	R0, #5
0x17D0	0xF7FFF8DA  BL	_UART4_Write+0
;uartSend.c, 750 :: 		UART4_Write(0x82);
0x17D4	0x2082    MOVS	R0, #130
0x17D6	0xF7FFF8D7  BL	_UART4_Write+0
;uartSend.c, 751 :: 		UART4_Write(0x54);
0x17DA	0x2054    MOVS	R0, #84
0x17DC	0xF7FFF8D4  BL	_UART4_Write+0
;uartSend.c, 752 :: 		UART4_Write(0x65);
0x17E0	0x2065    MOVS	R0, #101
0x17E2	0xF7FFF8D1  BL	_UART4_Write+0
;uartSend.c, 753 :: 		UART4_Write(0x00);
0x17E6	0x2000    MOVS	R0, #0
0x17E8	0xF7FFF8CE  BL	_UART4_Write+0
;uartSend.c, 754 :: 		UART4_Write(0x02);
0x17EC	0x2002    MOVS	R0, #2
0x17EE	0xF7FFF8CB  BL	_UART4_Write+0
;uartSend.c, 755 :: 		}
L_end_uart4SpeedModeLeopard:
0x17F2	0xF8DDE000  LDR	LR, [SP, #0]
0x17F6	0xB001    ADD	SP, SP, #4
0x17F8	0x4770    BX	LR
; end of _uart4SpeedModeLeopard
_setup_IWDG:
;nest.c, 19 :: 		void setup_IWDG()
;nest.c, 21 :: 		IWDG_KR = 0x5555;    //Disable write protection of IWDG registers
0x3164	0xF2455155  MOVW	R1, #21845
0x3168	0x4808    LDR	R0, [PC, #32]
0x316A	0x6001    STR	R1, [R0, #0]
;nest.c, 22 :: 		IWDG_PR = 0x06;      //Set PR value
0x316C	0x2106    MOVS	R1, #6
0x316E	0x4808    LDR	R0, [PC, #32]
0x3170	0x6001    STR	R1, [R0, #0]
;nest.c, 23 :: 		IWDG_RLR = 0x1FF;     //Set RLR value
0x3172	0xF24011FF  MOVW	R1, #511
0x3176	0x4807    LDR	R0, [PC, #28]
0x3178	0x6001    STR	R1, [R0, #0]
;nest.c, 24 :: 		IWDG_KR = 0xAAAA;    //Reload IWDG
0x317A	0xF64A21AA  MOVW	R1, #43690
0x317E	0x4803    LDR	R0, [PC, #12]
0x3180	0x6001    STR	R1, [R0, #0]
;nest.c, 25 :: 		IWDG_KR = 0xCCCC;    //Start IWDG
0x3182	0xF64C41CC  MOVW	R1, #52428
0x3186	0x4801    LDR	R0, [PC, #4]
0x3188	0x6001    STR	R1, [R0, #0]
;nest.c, 26 :: 		}
L_end_setup_IWDG:
0x318A	0x4770    BX	LR
0x318C	0x30004000  	IWDG_KR+0
0x3190	0x30044000  	IWDG_PR+0
0x3194	0x30084000  	IWDG_RLR+0
; end of _setup_IWDG
_batteryChangeState:
;batteryChange.c, 5 :: 		void batteryChangeState(){
0x2974	0xB081    SUB	SP, SP, #4
0x2976	0xF8CDE000  STR	LR, [SP, #0]
;batteryChange.c, 6 :: 		if((battery_chosen != battery_chosen_old) || (battery_change)){
0x297A	0x4894    LDR	R0, [PC, #592]
0x297C	0xF9B01000  LDRSH	R1, [R0, #0]
0x2980	0x4893    LDR	R0, [PC, #588]
0x2982	0xF9B00000  LDRSH	R0, [R0, #0]
0x2986	0x4288    CMP	R0, R1
0x2988	0xD103    BNE	L__batteryChangeState37
0x298A	0x4992    LDR	R1, [PC, #584]
0x298C	0x6808    LDR	R0, [R1, #0]
0x298E	0xB900    CBNZ	R0, L__batteryChangeState36
0x2990	0xE158    B	L_batteryChangeState2
L__batteryChangeState37:
L__batteryChangeState36:
;batteryChange.c, 7 :: 		BUZZER_ALARM = 0;
0x2992	0x2100    MOVS	R1, #0
0x2994	0xB249    SXTB	R1, R1
0x2996	0x4890    LDR	R0, [PC, #576]
0x2998	0x6001    STR	R1, [R0, #0]
;batteryChange.c, 8 :: 		battery_change = 1;
0x299A	0x2101    MOVS	R1, #1
0x299C	0xB249    SXTB	R1, R1
0x299E	0x488D    LDR	R0, [PC, #564]
0x29A0	0x6001    STR	R1, [R0, #0]
;batteryChange.c, 9 :: 		battery_chosen_old = 3;
0x29A2	0x2103    MOVS	R1, #3
0x29A4	0xB209    SXTH	R1, R1
0x29A6	0x4889    LDR	R0, [PC, #548]
0x29A8	0x8001    STRH	R1, [R0, #0]
;batteryChange.c, 10 :: 		if(battery_change_count <=  10){
0x29AA	0x488C    LDR	R0, [PC, #560]
0x29AC	0xF9B00000  LDRSH	R0, [R0, #0]
0x29B0	0x280A    CMP	R0, #10
0x29B2	0xDC3D    BGT	L_batteryChangeState3
;batteryChange.c, 11 :: 		ACCUMULATOR1_ON = 0;
0x29B4	0x2200    MOVS	R2, #0
0x29B6	0xB252    SXTB	R2, R2
0x29B8	0x4889    LDR	R0, [PC, #548]
0x29BA	0x6002    STR	R2, [R0, #0]
;batteryChange.c, 12 :: 		ACCUMULATOR2_ON = 0;
0x29BC	0x4889    LDR	R0, [PC, #548]
0x29BE	0x6002    STR	R2, [R0, #0]
;batteryChange.c, 13 :: 		ACCUMULATORS_OFF = 1;
0x29C0	0x2101    MOVS	R1, #1
0x29C2	0xB249    SXTB	R1, R1
0x29C4	0x4888    LDR	R0, [PC, #544]
0x29C6	0x6001    STR	R1, [R0, #0]
;batteryChange.c, 14 :: 		BUZZER_ALARM = 0;
0x29C8	0x4883    LDR	R0, [PC, #524]
0x29CA	0x6002    STR	R2, [R0, #0]
;batteryChange.c, 15 :: 		if(battery_chosen == 1){
0x29CC	0x4880    LDR	R0, [PC, #512]
0x29CE	0xF9B00000  LDRSH	R0, [R0, #0]
0x29D2	0x2801    CMP	R0, #1
0x29D4	0xD108    BNE	L_batteryChangeState4
;batteryChange.c, 16 :: 		wannaBeActiveBattery2 = 0;
0x29D6	0x2100    MOVS	R1, #0
0x29D8	0x4884    LDR	R0, [PC, #528]
0x29DA	0x8001    STRH	R1, [R0, #0]
;batteryChange.c, 17 :: 		wannaBeActiveBattery2_old = 0;
0x29DC	0x2100    MOVS	R1, #0
0x29DE	0x4884    LDR	R0, [PC, #528]
0x29E0	0x8001    STRH	R1, [R0, #0]
;batteryChange.c, 18 :: 		uart4Battery2TurnedOff();
0x29E2	0xF000FAC7  BL	_uart4Battery2TurnedOff+0
;batteryChange.c, 19 :: 		}
0x29E6	0xE022    B	L_batteryChangeState5
L_batteryChangeState4:
;batteryChange.c, 20 :: 		else if(battery_chosen == 2){
0x29E8	0x4879    LDR	R0, [PC, #484]
0x29EA	0xF9B00000  LDRSH	R0, [R0, #0]
0x29EE	0x2802    CMP	R0, #2
0x29F0	0xD108    BNE	L_batteryChangeState6
;batteryChange.c, 21 :: 		wannaBeActiveBattery1 = 0;
0x29F2	0x2100    MOVS	R1, #0
0x29F4	0x487F    LDR	R0, [PC, #508]
0x29F6	0x8001    STRH	R1, [R0, #0]
;batteryChange.c, 22 :: 		wannaBeActiveBattery1_old = 0;
0x29F8	0x2100    MOVS	R1, #0
0x29FA	0x487F    LDR	R0, [PC, #508]
0x29FC	0x8001    STRH	R1, [R0, #0]
;batteryChange.c, 23 :: 		uart4Battery1TurnedOff();
0x29FE	0xF7FFFF19  BL	_uart4Battery1TurnedOff+0
;batteryChange.c, 24 :: 		}
0x2A02	0xE014    B	L_batteryChangeState7
L_batteryChangeState6:
;batteryChange.c, 26 :: 		wannaBeActiveBattery1 = 0;
0x2A04	0x2100    MOVS	R1, #0
0x2A06	0x487B    LDR	R0, [PC, #492]
0x2A08	0x8001    STRH	R1, [R0, #0]
;batteryChange.c, 27 :: 		wannaBeActiveBattery1_old = 0;
0x2A0A	0x2100    MOVS	R1, #0
0x2A0C	0x487A    LDR	R0, [PC, #488]
0x2A0E	0x8001    STRH	R1, [R0, #0]
;batteryChange.c, 28 :: 		wannaBeActiveBattery2 = 0;
0x2A10	0x2100    MOVS	R1, #0
0x2A12	0x4876    LDR	R0, [PC, #472]
0x2A14	0x8001    STRH	R1, [R0, #0]
;batteryChange.c, 29 :: 		wannaBeActiveBattery2_old = 0;
0x2A16	0x2100    MOVS	R1, #0
0x2A18	0x4875    LDR	R0, [PC, #468]
0x2A1A	0x8001    STRH	R1, [R0, #0]
;batteryChange.c, 30 :: 		uart4Battery1TurnedOff();
0x2A1C	0xF7FFFF0A  BL	_uart4Battery1TurnedOff+0
;batteryChange.c, 31 :: 		uart4Battery2TurnedOff();
0x2A20	0xF000FAA8  BL	_uart4Battery2TurnedOff+0
;batteryChange.c, 32 :: 		uart4LightingTurnedOff();
0x2A24	0xF000FA86  BL	_uart4LightingTurnedOff+0
;batteryChange.c, 33 :: 		activeBattery = 0;
0x2A28	0x2100    MOVS	R1, #0
0x2A2A	0x4874    LDR	R0, [PC, #464]
0x2A2C	0x8001    STRH	R1, [R0, #0]
;batteryChange.c, 34 :: 		}
L_batteryChangeState7:
L_batteryChangeState5:
;batteryChange.c, 36 :: 		}
0x2A2E	0xE108    B	L_batteryChangeState8
L_batteryChangeState3:
;batteryChange.c, 37 :: 		else if((battery_change_count > 10) && (battery_change_count <= 20)){
0x2A30	0x486A    LDR	R0, [PC, #424]
0x2A32	0xF9B00000  LDRSH	R0, [R0, #0]
0x2A36	0x280A    CMP	R0, #10
0x2A38	0xDD0D    BLE	L__batteryChangeState39
0x2A3A	0x4868    LDR	R0, [PC, #416]
0x2A3C	0xF9B00000  LDRSH	R0, [R0, #0]
0x2A40	0x2814    CMP	R0, #20
0x2A42	0xDC08    BGT	L__batteryChangeState38
L__batteryChangeState34:
;batteryChange.c, 38 :: 		ACCUMULATOR1_ON = 0;
0x2A44	0x2100    MOVS	R1, #0
0x2A46	0xB249    SXTB	R1, R1
0x2A48	0x4865    LDR	R0, [PC, #404]
0x2A4A	0x6001    STR	R1, [R0, #0]
;batteryChange.c, 39 :: 		ACCUMULATOR2_ON = 0;
0x2A4C	0x4865    LDR	R0, [PC, #404]
0x2A4E	0x6001    STR	R1, [R0, #0]
;batteryChange.c, 40 :: 		ACCUMULATORS_OFF = 0;
0x2A50	0x4865    LDR	R0, [PC, #404]
0x2A52	0x6001    STR	R1, [R0, #0]
;batteryChange.c, 42 :: 		}
0x2A54	0xE0F5    B	L_batteryChangeState12
;batteryChange.c, 37 :: 		else if((battery_change_count > 10) && (battery_change_count <= 20)){
L__batteryChangeState39:
L__batteryChangeState38:
;batteryChange.c, 43 :: 		else if((battery_change_count > 20) && (battery_change_count <= 30)){
0x2A56	0x4861    LDR	R0, [PC, #388]
0x2A58	0xF9B00000  LDRSH	R0, [R0, #0]
0x2A5C	0x2814    CMP	R0, #20
0x2A5E	0xDD11    BLE	L__batteryChangeState41
0x2A60	0x485E    LDR	R0, [PC, #376]
0x2A62	0xF9B00000  LDRSH	R0, [R0, #0]
0x2A66	0x281E    CMP	R0, #30
0x2A68	0xDC0C    BGT	L__batteryChangeState40
L__batteryChangeState33:
;batteryChange.c, 44 :: 		if(!ACCUMULATOR_SENSE){
0x2A6A	0x4965    LDR	R1, [PC, #404]
0x2A6C	0x6808    LDR	R0, [R1, #0]
0x2A6E	0xB920    CBNZ	R0, L_batteryChangeState16
;batteryChange.c, 45 :: 		battery_change_continue = 1;
0x2A70	0x2101    MOVS	R1, #1
0x2A72	0xB249    SXTB	R1, R1
0x2A74	0x4863    LDR	R0, [PC, #396]
0x2A76	0x6001    STR	R1, [R0, #0]
;batteryChange.c, 46 :: 		}
0x2A78	0xE003    B	L_batteryChangeState17
L_batteryChangeState16:
;batteryChange.c, 48 :: 		battery_change_continue = 0;
0x2A7A	0x2100    MOVS	R1, #0
0x2A7C	0xB249    SXTB	R1, R1
0x2A7E	0x4861    LDR	R0, [PC, #388]
0x2A80	0x6001    STR	R1, [R0, #0]
;batteryChange.c, 49 :: 		}
L_batteryChangeState17:
;batteryChange.c, 50 :: 		}
0x2A82	0xE0DE    B	L_batteryChangeState18
;batteryChange.c, 43 :: 		else if((battery_change_count > 20) && (battery_change_count <= 30)){
L__batteryChangeState41:
L__batteryChangeState40:
;batteryChange.c, 51 :: 		else if((battery_change_count > 30) && (battery_change_count <= 80)){
0x2A84	0x4855    LDR	R0, [PC, #340]
0x2A86	0xF9B00000  LDRSH	R0, [R0, #0]
0x2A8A	0x281E    CMP	R0, #30
0x2A8C	0xF3408095  BLE	L__batteryChangeState43
0x2A90	0x4852    LDR	R0, [PC, #328]
0x2A92	0xF9B00000  LDRSH	R0, [R0, #0]
0x2A96	0x2850    CMP	R0, #80
0x2A98	0xF300808F  BGT	L__batteryChangeState42
L__batteryChangeState32:
;batteryChange.c, 52 :: 		if(battery_change_count <= 60){
0x2A9C	0x484F    LDR	R0, [PC, #316]
0x2A9E	0xF9B00000  LDRSH	R0, [R0, #0]
0x2AA2	0x283C    CMP	R0, #60
0x2AA4	0xF3008079  BGT	L_batteryChangeState22
;batteryChange.c, 54 :: 		if(battery_change_continue){
0x2AA8	0x4956    LDR	R1, [PC, #344]
0x2AAA	0x6808    LDR	R0, [R1, #0]
0x2AAC	0x2800    CMP	R0, #0
0x2AAE	0xF000804C  BEQ	L_batteryChangeState23
;batteryChange.c, 55 :: 		if(battery_chosen == 1){
0x2AB2	0x4847    LDR	R0, [PC, #284]
0x2AB4	0xF9B00000  LDRSH	R0, [R0, #0]
0x2AB8	0x2801    CMP	R0, #1
0x2ABA	0xD11A    BNE	L_batteryChangeState24
;batteryChange.c, 56 :: 		ACCUMULATOR1_ON = 1;
0x2ABC	0x2101    MOVS	R1, #1
0x2ABE	0xB249    SXTB	R1, R1
0x2AC0	0x4847    LDR	R0, [PC, #284]
0x2AC2	0x6001    STR	R1, [R0, #0]
;batteryChange.c, 57 :: 		ACCUMULATOR2_ON = 0;
0x2AC4	0x2100    MOVS	R1, #0
0x2AC6	0xB249    SXTB	R1, R1
0x2AC8	0x4846    LDR	R0, [PC, #280]
0x2ACA	0x6001    STR	R1, [R0, #0]
;batteryChange.c, 58 :: 		ACCUMULATORS_OFF = 0;
0x2ACC	0x4846    LDR	R0, [PC, #280]
0x2ACE	0x6001    STR	R1, [R0, #0]
;batteryChange.c, 62 :: 		uart4Battery1TurnedOn();
0x2AD0	0xF000F8E0  BL	_uart4Battery1TurnedOn+0
;batteryChange.c, 63 :: 		uart4Battery2TurnedOff();
0x2AD4	0xF000FA4E  BL	_uart4Battery2TurnedOff+0
;batteryChange.c, 64 :: 		uart4LightingTurnedOn();
0x2AD8	0xF7FFFF2C  BL	_uart4LightingTurnedOn+0
;batteryChange.c, 65 :: 		activeBattery = 1;
0x2ADC	0x2101    MOVS	R1, #1
0x2ADE	0x4847    LDR	R0, [PC, #284]
0x2AE0	0x8001    STRH	R1, [R0, #0]
;batteryChange.c, 67 :: 		bitBatteryChangeBlockCounter = 1;
0x2AE2	0x2101    MOVS	R1, #1
0x2AE4	0xB249    SXTB	R1, R1
0x2AE6	0x4848    LDR	R0, [PC, #288]
0x2AE8	0x6001    STR	R1, [R0, #0]
;batteryChange.c, 68 :: 		batteryChangeBlockCounter = 0;
0x2AEA	0x2100    MOVS	R1, #0
0x2AEC	0x4847    LDR	R0, [PC, #284]
0x2AEE	0x8001    STRH	R1, [R0, #0]
;batteryChange.c, 69 :: 		}
0x2AF0	0xE02A    B	L_batteryChangeState25
L_batteryChangeState24:
;batteryChange.c, 70 :: 		else if(battery_chosen == 2){
0x2AF2	0x4837    LDR	R0, [PC, #220]
0x2AF4	0xF9B00000  LDRSH	R0, [R0, #0]
0x2AF8	0x2802    CMP	R0, #2
0x2AFA	0xD11A    BNE	L_batteryChangeState26
;batteryChange.c, 71 :: 		ACCUMULATOR1_ON = 0;
0x2AFC	0x2200    MOVS	R2, #0
0x2AFE	0xB252    SXTB	R2, R2
0x2B00	0x4837    LDR	R0, [PC, #220]
0x2B02	0x6002    STR	R2, [R0, #0]
;batteryChange.c, 72 :: 		ACCUMULATOR2_ON = 1;
0x2B04	0x2101    MOVS	R1, #1
0x2B06	0xB249    SXTB	R1, R1
0x2B08	0x4836    LDR	R0, [PC, #216]
0x2B0A	0x6001    STR	R1, [R0, #0]
;batteryChange.c, 73 :: 		ACCUMULATORS_OFF = 0;
0x2B0C	0x4836    LDR	R0, [PC, #216]
0x2B0E	0x6002    STR	R2, [R0, #0]
;batteryChange.c, 77 :: 		uart4Battery1TurnedOff();
0x2B10	0xF7FFFE90  BL	_uart4Battery1TurnedOff+0
;batteryChange.c, 78 :: 		uart4Battery2TurnedOn();
0x2B14	0xF000F932  BL	_uart4Battery2TurnedOn+0
;batteryChange.c, 79 :: 		uart4LightingTurnedOn();
0x2B18	0xF7FFFF0C  BL	_uart4LightingTurnedOn+0
;batteryChange.c, 80 :: 		activeBattery = 2;
0x2B1C	0x2102    MOVS	R1, #2
0x2B1E	0x4837    LDR	R0, [PC, #220]
0x2B20	0x8001    STRH	R1, [R0, #0]
;batteryChange.c, 82 :: 		bitBatteryChangeBlockCounter = 1;
0x2B22	0x2101    MOVS	R1, #1
0x2B24	0xB249    SXTB	R1, R1
0x2B26	0x4838    LDR	R0, [PC, #224]
0x2B28	0x6001    STR	R1, [R0, #0]
;batteryChange.c, 83 :: 		batteryChangeBlockCounter = 0;
0x2B2A	0x2100    MOVS	R1, #0
0x2B2C	0x4837    LDR	R0, [PC, #220]
0x2B2E	0x8001    STRH	R1, [R0, #0]
;batteryChange.c, 84 :: 		}
0x2B30	0xE00A    B	L_batteryChangeState27
L_batteryChangeState26:
;batteryChange.c, 86 :: 		ACCUMULATOR1_ON = 0;
0x2B32	0x2100    MOVS	R1, #0
0x2B34	0xB249    SXTB	R1, R1
0x2B36	0x482A    LDR	R0, [PC, #168]
0x2B38	0x6001    STR	R1, [R0, #0]
;batteryChange.c, 87 :: 		ACCUMULATOR2_ON = 0;
0x2B3A	0x482A    LDR	R0, [PC, #168]
0x2B3C	0x6001    STR	R1, [R0, #0]
;batteryChange.c, 88 :: 		ACCUMULATORS_OFF = 0;
0x2B3E	0x482A    LDR	R0, [PC, #168]
0x2B40	0x6001    STR	R1, [R0, #0]
;batteryChange.c, 89 :: 		activeBattery = 0;
0x2B42	0x2100    MOVS	R1, #0
0x2B44	0x482D    LDR	R0, [PC, #180]
0x2B46	0x8001    STRH	R1, [R0, #0]
;batteryChange.c, 90 :: 		}
L_batteryChangeState27:
L_batteryChangeState25:
;batteryChange.c, 91 :: 		}
0x2B48	0xE026    B	L_batteryChangeState28
L_batteryChangeState23:
;batteryChange.c, 93 :: 		battery_change_count = 0;
0x2B4A	0x2100    MOVS	R1, #0
0x2B4C	0xB209    SXTH	R1, R1
0x2B4E	0x4823    LDR	R0, [PC, #140]
0x2B50	0x8001    STRH	R1, [R0, #0]
;batteryChange.c, 94 :: 		ACCUMULATOR1_ON = 0;
0x2B52	0x2100    MOVS	R1, #0
0x2B54	0xB249    SXTB	R1, R1
0x2B56	0x4822    LDR	R0, [PC, #136]
0x2B58	0x6001    STR	R1, [R0, #0]
;batteryChange.c, 95 :: 		ACCUMULATOR2_ON = 0;
0x2B5A	0x4822    LDR	R0, [PC, #136]
0x2B5C	0x6001    STR	R1, [R0, #0]
;batteryChange.c, 96 :: 		ACCUMULATORS_OFF = 0;
0x2B5E	0x4822    LDR	R0, [PC, #136]
0x2B60	0x6001    STR	R1, [R0, #0]
;batteryChange.c, 100 :: 		uart4Battery1TurnedOff();
0x2B62	0xF7FFFE67  BL	_uart4Battery1TurnedOff+0
;batteryChange.c, 101 :: 		uart4Battery2TurnedOff();
0x2B66	0xF000FA05  BL	_uart4Battery2TurnedOff+0
;batteryChange.c, 102 :: 		uart4LightingTurnedOff();
0x2B6A	0xF000F9E3  BL	_uart4LightingTurnedOff+0
;batteryChange.c, 103 :: 		activeBattery = 0;
0x2B6E	0x2100    MOVS	R1, #0
0x2B70	0x4822    LDR	R0, [PC, #136]
0x2B72	0x8001    STRH	R1, [R0, #0]
;batteryChange.c, 105 :: 		battery_change_continue = 0;
0x2B74	0x2100    MOVS	R1, #0
0x2B76	0xB249    SXTB	R1, R1
0x2B78	0x4822    LDR	R0, [PC, #136]
0x2B7A	0x6001    STR	R1, [R0, #0]
;batteryChange.c, 106 :: 		battery_change = 0;
0x2B7C	0x4815    LDR	R0, [PC, #84]
0x2B7E	0x6001    STR	R1, [R0, #0]
;batteryChange.c, 107 :: 		battery_change_count = 0;
0x2B80	0x2100    MOVS	R1, #0
0x2B82	0xB209    SXTH	R1, R1
0x2B84	0x4815    LDR	R0, [PC, #84]
0x2B86	0x8001    STRH	R1, [R0, #0]
;batteryChange.c, 109 :: 		battery_chosen = 0;
0x2B88	0x2100    MOVS	R1, #0
0x2B8A	0xB209    SXTH	R1, R1
0x2B8C	0x4810    LDR	R0, [PC, #64]
0x2B8E	0x8001    STRH	R1, [R0, #0]
;batteryChange.c, 110 :: 		battery_chosen_old = 0;
0x2B90	0x2100    MOVS	R1, #0
0x2B92	0xB209    SXTH	R1, R1
0x2B94	0x480D    LDR	R0, [PC, #52]
0x2B96	0x8001    STRH	R1, [R0, #0]
;batteryChange.c, 114 :: 		}
L_batteryChangeState28:
;batteryChange.c, 115 :: 		}
0x2B98	0xE00E    B	L_batteryChangeState29
L_batteryChangeState22:
;batteryChange.c, 117 :: 		ACCUMULATOR1_ON = 0;
0x2B9A	0x2100    MOVS	R1, #0
0x2B9C	0xB249    SXTB	R1, R1
0x2B9E	0x4810    LDR	R0, [PC, #64]
0x2BA0	0x6001    STR	R1, [R0, #0]
;batteryChange.c, 118 :: 		ACCUMULATOR2_ON = 0;
0x2BA2	0x4810    LDR	R0, [PC, #64]
0x2BA4	0x6001    STR	R1, [R0, #0]
;batteryChange.c, 119 :: 		ACCUMULATORS_OFF = 0;
0x2BA6	0x4810    LDR	R0, [PC, #64]
0x2BA8	0x6001    STR	R1, [R0, #0]
;batteryChange.c, 121 :: 		battry_percentage_check = 1;
0x2BAA	0x2101    MOVS	R1, #1
0x2BAC	0xB249    SXTB	R1, R1
0x2BAE	0x4818    LDR	R0, [PC, #96]
0x2BB0	0x6001    STR	R1, [R0, #0]
;batteryChange.c, 122 :: 		battry_percentage_check_counter = 0;
0x2BB2	0x2100    MOVS	R1, #0
0x2BB4	0x4817    LDR	R0, [PC, #92]
0x2BB6	0x8001    STRH	R1, [R0, #0]
;batteryChange.c, 124 :: 		}
L_batteryChangeState29:
;batteryChange.c, 125 :: 		}
0x2BB8	0xE043    B	L_batteryChangeState30
;batteryChange.c, 51 :: 		else if((battery_change_count > 30) && (battery_change_count <= 80)){
L__batteryChangeState43:
L__batteryChangeState42:
;batteryChange.c, 127 :: 		ACCUMULATOR1_ON = 0;
0x2BBA	0x2200    MOVS	R2, #0
0x2BBC	0xB252    SXTB	R2, R2
0x2BBE	0x4808    LDR	R0, [PC, #32]
0x2BC0	0x6002    STR	R2, [R0, #0]
;batteryChange.c, 128 :: 		ACCUMULATOR2_ON = 0;
0x2BC2	0x4808    LDR	R0, [PC, #32]
0x2BC4	0x6002    STR	R2, [R0, #0]
;batteryChange.c, 129 :: 		ACCUMULATORS_OFF = 0;
0x2BC6	0x4808    LDR	R0, [PC, #32]
0x2BC8	0xF000B826  B	#76
0x2BCC	0x00022000  	_battery_chosen_old+0
0x2BD0	0x00002000  	_battery_chosen+0
0x2BD4	0x0FA02200  	_battery_change+0
0x2BD8	0x82AC4241  	BUZZER_ALARM+0
0x2BDC	0x00042000  	_battery_change_count+0
0x2BE0	0x829C4241  	ACCUMULATOR1_ON+0
0x2BE4	0x82984241  	ACCUMULATOR2_ON+0
0x2BE8	0x82944241  	ACCUMULATORS_OFF+0
0x2BEC	0x00062000  	_wannaBeActiveBattery2+0
0x2BF0	0x00082000  	_wannaBeActiveBattery2_old+0
0x2BF4	0x000A2000  	_wannaBeActiveBattery1+0
0x2BF8	0x000C2000  	_wannaBeActiveBattery1_old+0
0x2BFC	0x000E2000  	_activeBattery+0
0x2C00	0x02184240  	ACCUMULATOR_SENSE+0
0x2C04	0x0FA42200  	_battery_change_continue+0
0x2C08	0x0FA82200  	_bitBatteryChangeBlockCounter+0
0x2C0C	0x00102000  	_batteryChangeBlockCounter+0
0x2C10	0x0FAC2200  	_battry_percentage_check+0
0x2C14	0x00122000  	_battry_percentage_check_counter+0
0x2C18	0x6002    STR	R2, [R0, #0]
;batteryChange.c, 131 :: 		battery_chosen_old = battery_chosen;
0x2C1A	0x4814    LDR	R0, [PC, #80]
0x2C1C	0xF9B01000  LDRSH	R1, [R0, #0]
0x2C20	0x4813    LDR	R0, [PC, #76]
0x2C22	0x8001    STRH	R1, [R0, #0]
;batteryChange.c, 132 :: 		battery_change_continue = 0;
0x2C24	0x4813    LDR	R0, [PC, #76]
0x2C26	0x6002    STR	R2, [R0, #0]
;batteryChange.c, 133 :: 		battery_change = 0;
0x2C28	0x4813    LDR	R0, [PC, #76]
0x2C2A	0x6002    STR	R2, [R0, #0]
;batteryChange.c, 134 :: 		battery_change_count = 0;
0x2C2C	0x2100    MOVS	R1, #0
0x2C2E	0xB209    SXTH	R1, R1
0x2C30	0x4812    LDR	R0, [PC, #72]
0x2C32	0x8001    STRH	R1, [R0, #0]
;batteryChange.c, 136 :: 		battry_percentage_check = 1;
0x2C34	0x2101    MOVS	R1, #1
0x2C36	0xB249    SXTB	R1, R1
0x2C38	0x4811    LDR	R0, [PC, #68]
0x2C3A	0x6001    STR	R1, [R0, #0]
;batteryChange.c, 137 :: 		battry_percentage_check_counter = 0;
0x2C3C	0x2100    MOVS	R1, #0
0x2C3E	0x4811    LDR	R0, [PC, #68]
0x2C40	0x8001    STRH	R1, [R0, #0]
;batteryChange.c, 140 :: 		}
L_batteryChangeState30:
L_batteryChangeState18:
L_batteryChangeState12:
L_batteryChangeState8:
;batteryChange.c, 141 :: 		}
0x2C42	0xE00F    B	L_batteryChangeState31
L_batteryChangeState2:
;batteryChange.c, 143 :: 		ACCUMULATOR1_ON = 0;
0x2C44	0x2100    MOVS	R1, #0
0x2C46	0xB249    SXTB	R1, R1
0x2C48	0x480F    LDR	R0, [PC, #60]
0x2C4A	0x6001    STR	R1, [R0, #0]
;batteryChange.c, 144 :: 		ACCUMULATOR2_ON = 0;
0x2C4C	0x480F    LDR	R0, [PC, #60]
0x2C4E	0x6001    STR	R1, [R0, #0]
;batteryChange.c, 145 :: 		ACCUMULATORS_OFF = 0;
0x2C50	0x480F    LDR	R0, [PC, #60]
0x2C52	0x6001    STR	R1, [R0, #0]
;batteryChange.c, 147 :: 		battery_change_continue = 0;
0x2C54	0x4807    LDR	R0, [PC, #28]
0x2C56	0x6001    STR	R1, [R0, #0]
;batteryChange.c, 148 :: 		battery_change = 0;
0x2C58	0x4807    LDR	R0, [PC, #28]
0x2C5A	0x6001    STR	R1, [R0, #0]
;batteryChange.c, 149 :: 		battery_change_count = 0;
0x2C5C	0x2100    MOVS	R1, #0
0x2C5E	0xB209    SXTH	R1, R1
0x2C60	0x4806    LDR	R0, [PC, #24]
0x2C62	0x8001    STRH	R1, [R0, #0]
;batteryChange.c, 151 :: 		}
L_batteryChangeState31:
;batteryChange.c, 152 :: 		}
L_end_batteryChangeState:
0x2C64	0xF8DDE000  LDR	LR, [SP, #0]
0x2C68	0xB001    ADD	SP, SP, #4
0x2C6A	0x4770    BX	LR
0x2C6C	0x00002000  	_battery_chosen+0
0x2C70	0x00022000  	_battery_chosen_old+0
0x2C74	0x0FA42200  	_battery_change_continue+0
0x2C78	0x0FA02200  	_battery_change+0
0x2C7C	0x00042000  	_battery_change_count+0
0x2C80	0x0FAC2200  	_battry_percentage_check+0
0x2C84	0x00122000  	_battry_percentage_check_counter+0
0x2C88	0x829C4241  	ACCUMULATOR1_ON+0
0x2C8C	0x82984241  	ACCUMULATOR2_ON+0
0x2C90	0x82944241  	ACCUMULATORS_OFF+0
; end of _batteryChangeState
_uart4Battery1TurnedOn:
;uartSend.c, 139 :: 		void uart4Battery1TurnedOn(){
0x2C94	0xB081    SUB	SP, SP, #4
0x2C96	0xF8CDE000  STR	LR, [SP, #0]
;uartSend.c, 141 :: 		UART4_Write(0x5A);
0x2C9A	0x205A    MOVS	R0, #90
0x2C9C	0xF7FDFE74  BL	_UART4_Write+0
;uartSend.c, 142 :: 		UART4_Write(0xA5);
0x2CA0	0x20A5    MOVS	R0, #165
0x2CA2	0xF7FDFE71  BL	_UART4_Write+0
;uartSend.c, 143 :: 		UART4_Write(0x05);
0x2CA6	0x2005    MOVS	R0, #5
0x2CA8	0xF7FDFE6E  BL	_UART4_Write+0
;uartSend.c, 144 :: 		UART4_Write(0x82);
0x2CAC	0x2082    MOVS	R0, #130
0x2CAE	0xF7FDFE6B  BL	_UART4_Write+0
;uartSend.c, 145 :: 		UART4_Write(0x16);
0x2CB2	0x2016    MOVS	R0, #22
0x2CB4	0xF7FDFE68  BL	_UART4_Write+0
;uartSend.c, 146 :: 		UART4_Write(0x40);
0x2CB8	0x2040    MOVS	R0, #64
0x2CBA	0xF7FDFE65  BL	_UART4_Write+0
;uartSend.c, 147 :: 		UART4_Write(0x00);
0x2CBE	0x2000    MOVS	R0, #0
0x2CC0	0xF7FDFE62  BL	_UART4_Write+0
;uartSend.c, 148 :: 		UART4_Write(0x00);
0x2CC4	0x2000    MOVS	R0, #0
0x2CC6	0xF7FDFE5F  BL	_UART4_Write+0
;uartSend.c, 149 :: 		}
L_end_uart4Battery1TurnedOn:
0x2CCA	0xF8DDE000  LDR	LR, [SP, #0]
0x2CCE	0xB001    ADD	SP, SP, #4
0x2CD0	0x4770    BX	LR
; end of _uart4Battery1TurnedOn
_uart4LightingTurnedOn:
;uartSend.c, 188 :: 		void uart4LightingTurnedOn(){
0x2934	0xB081    SUB	SP, SP, #4
0x2936	0xF8CDE000  STR	LR, [SP, #0]
;uartSend.c, 200 :: 		UART4_Write(0x5A);
0x293A	0x205A    MOVS	R0, #90
0x293C	0xF7FEF824  BL	_UART4_Write+0
;uartSend.c, 201 :: 		UART4_Write(0xA5);
0x2940	0x20A5    MOVS	R0, #165
0x2942	0xF7FEF821  BL	_UART4_Write+0
;uartSend.c, 202 :: 		UART4_Write(0x05);
0x2946	0x2005    MOVS	R0, #5
0x2948	0xF7FEF81E  BL	_UART4_Write+0
;uartSend.c, 203 :: 		UART4_Write(0x82);
0x294C	0x2082    MOVS	R0, #130
0x294E	0xF7FEF81B  BL	_UART4_Write+0
;uartSend.c, 204 :: 		UART4_Write(0x13);
0x2952	0x2013    MOVS	R0, #19
0x2954	0xF7FEF818  BL	_UART4_Write+0
;uartSend.c, 205 :: 		UART4_Write(0x00);
0x2958	0x2000    MOVS	R0, #0
0x295A	0xF7FEF815  BL	_UART4_Write+0
;uartSend.c, 206 :: 		UART4_Write(0x00);
0x295E	0x2000    MOVS	R0, #0
0x2960	0xF7FEF812  BL	_UART4_Write+0
;uartSend.c, 207 :: 		UART4_Write(0x00);
0x2964	0x2000    MOVS	R0, #0
0x2966	0xF7FEF80F  BL	_UART4_Write+0
;uartSend.c, 208 :: 		}
L_end_uart4LightingTurnedOn:
0x296A	0xF8DDE000  LDR	LR, [SP, #0]
0x296E	0xB001    ADD	SP, SP, #4
0x2970	0x4770    BX	LR
; end of _uart4LightingTurnedOn
_uart4Battery2TurnedOn:
;uartSend.c, 163 :: 		void uart4Battery2TurnedOn(){
0x2D7C	0xB081    SUB	SP, SP, #4
0x2D7E	0xF8CDE000  STR	LR, [SP, #0]
;uartSend.c, 165 :: 		UART4_Write(0x5A);
0x2D82	0x205A    MOVS	R0, #90
0x2D84	0xF7FDFE00  BL	_UART4_Write+0
;uartSend.c, 166 :: 		UART4_Write(0xA5);
0x2D88	0x20A5    MOVS	R0, #165
0x2D8A	0xF7FDFDFD  BL	_UART4_Write+0
;uartSend.c, 167 :: 		UART4_Write(0x05);
0x2D8E	0x2005    MOVS	R0, #5
0x2D90	0xF7FDFDFA  BL	_UART4_Write+0
;uartSend.c, 168 :: 		UART4_Write(0x82);
0x2D94	0x2082    MOVS	R0, #130
0x2D96	0xF7FDFDF7  BL	_UART4_Write+0
;uartSend.c, 169 :: 		UART4_Write(0x16);
0x2D9A	0x2016    MOVS	R0, #22
0x2D9C	0xF7FDFDF4  BL	_UART4_Write+0
;uartSend.c, 170 :: 		UART4_Write(0x60);
0x2DA0	0x2060    MOVS	R0, #96
0x2DA2	0xF7FDFDF1  BL	_UART4_Write+0
;uartSend.c, 171 :: 		UART4_Write(0x00);
0x2DA6	0x2000    MOVS	R0, #0
0x2DA8	0xF7FDFDEE  BL	_UART4_Write+0
;uartSend.c, 172 :: 		UART4_Write(0x00);
0x2DAC	0x2000    MOVS	R0, #0
0x2DAE	0xF7FDFDEB  BL	_UART4_Write+0
;uartSend.c, 173 :: 		}
L_end_uart4Battery2TurnedOn:
0x2DB2	0xF8DDE000  LDR	LR, [SP, #0]
0x2DB6	0xB001    ADD	SP, SP, #4
0x2DB8	0x4770    BX	LR
; end of _uart4Battery2TurnedOn
_lightControlSwitches:
;lightControl.c, 5 :: 		void lightControlSwitches(){
;lightControl.c, 38 :: 		if(navigationLightState_old != navigationLightState){
0x2EE0	0x480E    LDR	R0, [PC, #56]
0x2EE2	0x8801    LDRH	R1, [R0, #0]
0x2EE4	0x480E    LDR	R0, [PC, #56]
0x2EE6	0x8800    LDRH	R0, [R0, #0]
0x2EE8	0x4288    CMP	R0, R1
0x2EEA	0xD007    BEQ	L_lightControlSwitches0
;lightControl.c, 40 :: 		navigationLightState_old = navigationLightState;
0x2EEC	0x4A0B    LDR	R2, [PC, #44]
0x2EEE	0x8811    LDRH	R1, [R2, #0]
0x2EF0	0x480B    LDR	R0, [PC, #44]
0x2EF2	0x8001    STRH	R1, [R0, #0]
;lightControl.c, 41 :: 		LIGHT_NAVIGATION = navigationLightState;
0x2EF4	0x4610    MOV	R0, R2
0x2EF6	0x8801    LDRH	R1, [R0, #0]
0x2EF8	0x480A    LDR	R0, [PC, #40]
0x2EFA	0x6001    STR	R1, [R0, #0]
;lightControl.c, 44 :: 		}
L_lightControlSwitches0:
;lightControl.c, 47 :: 		if(interiorLightState_old != interiorLightState){
0x2EFC	0x480A    LDR	R0, [PC, #40]
0x2EFE	0x8801    LDRH	R1, [R0, #0]
0x2F00	0x480A    LDR	R0, [PC, #40]
0x2F02	0x8800    LDRH	R0, [R0, #0]
0x2F04	0x4288    CMP	R0, R1
0x2F06	0xD007    BEQ	L_lightControlSwitches1
;lightControl.c, 48 :: 		interiorLightState_old = interiorLightState;
0x2F08	0x4A07    LDR	R2, [PC, #28]
0x2F0A	0x8811    LDRH	R1, [R2, #0]
0x2F0C	0x4807    LDR	R0, [PC, #28]
0x2F0E	0x8001    STRH	R1, [R0, #0]
;lightControl.c, 49 :: 		LIGHT_INTERIOR = interiorLightState;
0x2F10	0x4610    MOV	R0, R2
0x2F12	0x8801    LDRH	R1, [R0, #0]
0x2F14	0x4806    LDR	R0, [PC, #24]
0x2F16	0x6001    STR	R1, [R0, #0]
;lightControl.c, 50 :: 		}
L_lightControlSwitches1:
;lightControl.c, 51 :: 		}
L_end_lightControlSwitches:
0x2F18	0x4770    BX	LR
0x2F1A	0xBF00    NOP
0x2F1C	0x003A2000  	_navigationLightState+0
0x2F20	0x00382000  	_navigationLightState_old+0
0x2F24	0x828C4241  	LIGHT_NAVIGATION+0
0x2F28	0x003E2000  	_interiorLightState+0
0x2F2C	0x003C2000  	_interiorLightState_old+0
0x2F30	0x82904241  	LIGHT_INTERIOR+0
; end of _lightControlSwitches
_batteryControlSwitches:
;batteryControl.c, 5 :: 		void batteryControlSwitches(){
;batteryControl.c, 73 :: 		if(((battery_percentage1 < 1.0f && battery_chosen == 1)
0x2874	0x4828    LDR	R0, [PC, #160]
0x2876	0xED500A00  VLDR.32	S1, [R0, #0]
0x287A	0xEEB70A00  VMOV.F32	S0, #1
0x287E	0xEEF40AC0  VCMPE.F32	S1, S0
0x2882	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x2886	0xDA05    BGE	L__batteryControlSwitches26
0x2888	0x4824    LDR	R0, [PC, #144]
0x288A	0xF9B00000  LDRSH	R0, [R0, #0]
0x288E	0x2801    CMP	R0, #1
0x2890	0xD100    BNE	L__batteryControlSwitches25
0x2892	0xE029    B	L__batteryControlSwitches18
L__batteryControlSwitches26:
L__batteryControlSwitches25:
;batteryControl.c, 74 :: 		|| (battery_percentage2 < 1.0f && battery_chosen == 2))
0x2894	0x4822    LDR	R0, [PC, #136]
0x2896	0xED500A00  VLDR.32	S1, [R0, #0]
0x289A	0xEEB70A00  VMOV.F32	S0, #1
0x289E	0xEEF40AC0  VCMPE.F32	S1, S0
0x28A2	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x28A6	0xDA05    BGE	L__batteryControlSwitches28
0x28A8	0x481C    LDR	R0, [PC, #112]
0x28AA	0xF9B00000  LDRSH	R0, [R0, #0]
0x28AE	0x2802    CMP	R0, #2
0x28B0	0xD100    BNE	L__batteryControlSwitches27
0x28B2	0xE019    B	L__batteryControlSwitches18
L__batteryControlSwitches28:
L__batteryControlSwitches27:
;batteryControl.c, 75 :: 		|| ((battery_chosen == 1 && !ACCUMULATOR_SENSE && !battery_change) || (battery_chosen == 2 && !ACCUMULATOR_SENSE && !battery_change)))
L__batteryControlSwitches22:
0x28B4	0x4819    LDR	R0, [PC, #100]
0x28B6	0xF9B00000  LDRSH	R0, [R0, #0]
0x28BA	0x2801    CMP	R0, #1
0x28BC	0xD106    BNE	L__batteryControlSwitches31
0x28BE	0x4919    LDR	R1, [PC, #100]
0x28C0	0x6808    LDR	R0, [R1, #0]
0x28C2	0xB918    CBNZ	R0, L__batteryControlSwitches30
0x28C4	0x4918    LDR	R1, [PC, #96]
0x28C6	0x6808    LDR	R0, [R1, #0]
0x28C8	0xB900    CBNZ	R0, L__batteryControlSwitches29
0x28CA	0xE00D    B	L__batteryControlSwitches18
L__batteryControlSwitches31:
L__batteryControlSwitches30:
L__batteryControlSwitches29:
0x28CC	0x4813    LDR	R0, [PC, #76]
0x28CE	0xF9B00000  LDRSH	R0, [R0, #0]
0x28D2	0x2802    CMP	R0, #2
0x28D4	0xD107    BNE	L__batteryControlSwitches34
0x28D6	0x4913    LDR	R1, [PC, #76]
0x28D8	0x6808    LDR	R0, [R1, #0]
0x28DA	0xB920    CBNZ	R0, L__batteryControlSwitches33
0x28DC	0x4912    LDR	R1, [PC, #72]
0x28DE	0x6808    LDR	R0, [R1, #0]
0x28E0	0x2800    CMP	R0, #0
0x28E2	0xD100    BNE	L__batteryControlSwitches32
0x28E4	0xE000    B	L__batteryControlSwitches18
L__batteryControlSwitches34:
L__batteryControlSwitches33:
L__batteryControlSwitches32:
L__batteryControlSwitches19:
0x28E6	0xE012    B	L_batteryControlSwitches14
L__batteryControlSwitches18:
;batteryControl.c, 78 :: 		if(buzzerCounter % 25 == 0){
0x28E8	0x4810    LDR	R0, [PC, #64]
0x28EA	0x8802    LDRH	R2, [R0, #0]
0x28EC	0x2119    MOVS	R1, #25
0x28EE	0xFBB2F0F1  UDIV	R0, R2, R1
0x28F2	0xFB012010  MLS	R0, R1, R0, R2
0x28F6	0xB280    UXTH	R0, R0
0x28F8	0xB920    CBNZ	R0, L_batteryControlSwitches15
;batteryControl.c, 79 :: 		BUZZER_ALARM = 1;
0x28FA	0x2101    MOVS	R1, #1
0x28FC	0xB249    SXTB	R1, R1
0x28FE	0x480C    LDR	R0, [PC, #48]
0x2900	0x6001    STR	R1, [R0, #0]
;batteryControl.c, 80 :: 		}
0x2902	0xE003    B	L_batteryControlSwitches16
L_batteryControlSwitches15:
;batteryControl.c, 82 :: 		BUZZER_ALARM = 0;
0x2904	0x2100    MOVS	R1, #0
0x2906	0xB249    SXTB	R1, R1
0x2908	0x4809    LDR	R0, [PC, #36]
0x290A	0x6001    STR	R1, [R0, #0]
;batteryControl.c, 83 :: 		}
L_batteryControlSwitches16:
;batteryControl.c, 85 :: 		}
0x290C	0xE003    B	L_batteryControlSwitches17
L_batteryControlSwitches14:
;batteryControl.c, 87 :: 		BUZZER_ALARM = 0;
0x290E	0x2100    MOVS	R1, #0
0x2910	0xB249    SXTB	R1, R1
0x2912	0x4807    LDR	R0, [PC, #28]
0x2914	0x6001    STR	R1, [R0, #0]
;batteryControl.c, 88 :: 		}
L_batteryControlSwitches17:
;batteryControl.c, 89 :: 		}
L_end_batteryControlSwitches:
0x2916	0x4770    BX	LR
0x2918	0x00842000  	_battery_percentage1+0
0x291C	0x00002000  	_battery_chosen+0
0x2920	0x00882000  	_battery_percentage2+0
0x2924	0x02184240  	ACCUMULATOR_SENSE+0
0x2928	0x0FA02200  	_battery_change+0
0x292C	0x00142000  	_buzzerCounter+0
0x2930	0x82AC4241  	BUZZER_ALARM+0
; end of _batteryControlSwitches
_gearVelocityMotorSpeedControl:
;gearVelocity.c, 77 :: 		void gearVelocityMotorSpeedControl(){
;gearVelocity.c, 186 :: 		switch(gear_status){
0x2CD4	0xE02D    B	L_gearVelocityMotorSpeedControl6
;gearVelocity.c, 187 :: 		case 1:
L_gearVelocityMotorSpeedControl8:
;gearVelocity.c, 188 :: 		motorSpeed = velocity_gear1;
0x2CD6	0x4822    LDR	R0, [PC, #136]
0x2CD8	0x8801    LDRH	R1, [R0, #0]
0x2CDA	0x4822    LDR	R0, [PC, #136]
0x2CDC	0x7001    STRB	R1, [R0, #0]
;gearVelocity.c, 189 :: 		motorDirection = GEAR_DIRECTION_STREIGHT;
0x2CDE	0x2101    MOVS	R1, #1
0x2CE0	0x4821    LDR	R0, [PC, #132]
0x2CE2	0x7001    STRB	R1, [R0, #0]
;gearVelocity.c, 190 :: 		break;
0x2CE4	0xE03A    B	L_gearVelocityMotorSpeedControl7
;gearVelocity.c, 192 :: 		case 2:
L_gearVelocityMotorSpeedControl9:
;gearVelocity.c, 193 :: 		motorSpeed = velocity_gear2;
0x2CE6	0x4821    LDR	R0, [PC, #132]
0x2CE8	0x8801    LDRH	R1, [R0, #0]
0x2CEA	0x481E    LDR	R0, [PC, #120]
0x2CEC	0x7001    STRB	R1, [R0, #0]
;gearVelocity.c, 194 :: 		motorDirection = GEAR_DIRECTION_STREIGHT;
0x2CEE	0x2101    MOVS	R1, #1
0x2CF0	0x481D    LDR	R0, [PC, #116]
0x2CF2	0x7001    STRB	R1, [R0, #0]
;gearVelocity.c, 195 :: 		break;
0x2CF4	0xE032    B	L_gearVelocityMotorSpeedControl7
;gearVelocity.c, 197 :: 		case 3:
L_gearVelocityMotorSpeedControl10:
;gearVelocity.c, 198 :: 		motorSpeed = velocity_gear3;
0x2CF6	0x481E    LDR	R0, [PC, #120]
0x2CF8	0x8801    LDRH	R1, [R0, #0]
0x2CFA	0x481A    LDR	R0, [PC, #104]
0x2CFC	0x7001    STRB	R1, [R0, #0]
;gearVelocity.c, 199 :: 		motorDirection = GEAR_DIRECTION_STREIGHT;
0x2CFE	0x2101    MOVS	R1, #1
0x2D00	0x4819    LDR	R0, [PC, #100]
0x2D02	0x7001    STRB	R1, [R0, #0]
;gearVelocity.c, 200 :: 		break;
0x2D04	0xE02A    B	L_gearVelocityMotorSpeedControl7
;gearVelocity.c, 202 :: 		case 4:
L_gearVelocityMotorSpeedControl11:
;gearVelocity.c, 203 :: 		motorSpeed = GEAR_VELOCITY_S;
0x2D06	0x2100    MOVS	R1, #0
0x2D08	0x4816    LDR	R0, [PC, #88]
0x2D0A	0x7001    STRB	R1, [R0, #0]
;gearVelocity.c, 204 :: 		motorDirection = GEAR_DIRECTION_STREIGHT;
0x2D0C	0x2101    MOVS	R1, #1
0x2D0E	0x4816    LDR	R0, [PC, #88]
0x2D10	0x7001    STRB	R1, [R0, #0]
;gearVelocity.c, 205 :: 		break;
0x2D12	0xE023    B	L_gearVelocityMotorSpeedControl7
;gearVelocity.c, 207 :: 		case 5:
L_gearVelocityMotorSpeedControl12:
;gearVelocity.c, 208 :: 		motorSpeed = velocity_gearR;
0x2D14	0x4817    LDR	R0, [PC, #92]
0x2D16	0x8801    LDRH	R1, [R0, #0]
0x2D18	0x4812    LDR	R0, [PC, #72]
0x2D1A	0x7001    STRB	R1, [R0, #0]
;gearVelocity.c, 209 :: 		motorDirection = GEAR_DIRECTION_BACK;
0x2D1C	0x2100    MOVS	R1, #0
0x2D1E	0x4812    LDR	R0, [PC, #72]
0x2D20	0x7001    STRB	R1, [R0, #0]
;gearVelocity.c, 210 :: 		break;
0x2D22	0xE01B    B	L_gearVelocityMotorSpeedControl7
;gearVelocity.c, 212 :: 		default:
L_gearVelocityMotorSpeedControl13:
;gearVelocity.c, 213 :: 		motorSpeed = GEAR_VELOCITY_S;
0x2D24	0x2100    MOVS	R1, #0
0x2D26	0x480F    LDR	R0, [PC, #60]
0x2D28	0x7001    STRB	R1, [R0, #0]
;gearVelocity.c, 214 :: 		motorDirection = GEAR_DIRECTION_STREIGHT;
0x2D2A	0x2101    MOVS	R1, #1
0x2D2C	0x480E    LDR	R0, [PC, #56]
0x2D2E	0x7001    STRB	R1, [R0, #0]
;gearVelocity.c, 215 :: 		break;
0x2D30	0xE014    B	L_gearVelocityMotorSpeedControl7
;gearVelocity.c, 216 :: 		}
L_gearVelocityMotorSpeedControl6:
0x2D32	0x4811    LDR	R0, [PC, #68]
0x2D34	0x8800    LDRH	R0, [R0, #0]
0x2D36	0x2801    CMP	R0, #1
0x2D38	0xD0CD    BEQ	L_gearVelocityMotorSpeedControl8
0x2D3A	0x480F    LDR	R0, [PC, #60]
0x2D3C	0x8800    LDRH	R0, [R0, #0]
0x2D3E	0x2802    CMP	R0, #2
0x2D40	0xD0D1    BEQ	L_gearVelocityMotorSpeedControl9
0x2D42	0x480D    LDR	R0, [PC, #52]
0x2D44	0x8800    LDRH	R0, [R0, #0]
0x2D46	0x2803    CMP	R0, #3
0x2D48	0xD0D5    BEQ	L_gearVelocityMotorSpeedControl10
0x2D4A	0x480B    LDR	R0, [PC, #44]
0x2D4C	0x8800    LDRH	R0, [R0, #0]
0x2D4E	0x2804    CMP	R0, #4
0x2D50	0xD0D9    BEQ	L_gearVelocityMotorSpeedControl11
0x2D52	0x4809    LDR	R0, [PC, #36]
0x2D54	0x8800    LDRH	R0, [R0, #0]
0x2D56	0x2805    CMP	R0, #5
0x2D58	0xD0DC    BEQ	L_gearVelocityMotorSpeedControl12
0x2D5A	0xE7E3    B	L_gearVelocityMotorSpeedControl13
L_gearVelocityMotorSpeedControl7:
;gearVelocity.c, 218 :: 		}
L_end_gearVelocityMotorSpeedControl:
0x2D5C	0x4770    BX	LR
0x2D5E	0xBF00    NOP
0x2D60	0x09F42000  	_velocity_gear1+0
0x2D64	0x00292000  	_motorSpeed+0
0x2D68	0x00362000  	_motorDirection+0
0x2D6C	0x09F62000  	_velocity_gear2+0
0x2D70	0x09F82000  	_velocity_gear3+0
0x2D74	0x09FA2000  	_velocity_gearR+0
0x2D78	0x00342000  	_gear_status+0
; end of _gearVelocityMotorSpeedControl
_directionWheelADC:
;wheelDirection.c, 6 :: 		void directionWheelADC(){
0x2DBC	0xB081    SUB	SP, SP, #4
0x2DBE	0xF8CDE000  STR	LR, [SP, #0]
;wheelDirection.c, 8 :: 		if(dutyy > 150){
0x2DC2	0x483A    LDR	R0, [PC, #232]
0x2DC4	0xF9B00000  LDRSH	R0, [R0, #0]
0x2DC8	0x2896    CMP	R0, #150
0x2DCA	0xDD23    BLE	L_directionWheelADC0
;wheelDirection.c, 9 :: 		wheel_position_angle_double = (((double)dutyy - 150) * (double)45) / (double)100;
0x2DCC	0x4837    LDR	R0, [PC, #220]
0x2DCE	0xF9B00000  LDRSH	R0, [R0, #0]
0x2DD2	0xEE000A90  VMOV	S1, R0
0x2DD6	0xEEF80AE0  VCVT.F32.S32	S1, S1
0x2DDA	0x4835    LDR	R0, [PC, #212]
0x2DDC	0xEE000A10  VMOV	S0, R0
0x2DE0	0xEE700AC0  VSUB.F32	S1, S1, S0
0x2DE4	0x4833    LDR	R0, [PC, #204]
0x2DE6	0xEE000A10  VMOV	S0, R0
0x2DEA	0xEE600A80  VMUL.F32	S1, S1, S0
0x2DEE	0x4832    LDR	R0, [PC, #200]
0x2DF0	0xEE000A10  VMOV	S0, R0
0x2DF4	0xEE800A80  VDIV.F32	S0, S1, S0
0x2DF8	0x4830    LDR	R0, [PC, #192]
0x2DFA	0xED000A00  VSTR.32	S0, [R0, #0]
;wheelDirection.c, 10 :: 		wheel_position_angle = (unsigned int)wheel_position_angle_double;
0x2DFE	0xEEBC0A40  VCVT.U32.F32	S0, S0
0x2E02	0xEE101A10  VMOV	R1, S0
0x2E06	0xB289    UXTH	R1, R1
0x2E08	0x482D    LDR	R0, [PC, #180]
0x2E0A	0x8001    STRH	R1, [R0, #0]
;wheelDirection.c, 12 :: 		wheel_position_direction = WHEEL_DIRECTION_LEFT;
0x2E0C	0x2101    MOVS	R1, #1
0x2E0E	0x482D    LDR	R0, [PC, #180]
0x2E10	0x8001    STRH	R1, [R0, #0]
;wheelDirection.c, 13 :: 		}
0x2E12	0xE02E    B	L_directionWheelADC1
L_directionWheelADC0:
;wheelDirection.c, 14 :: 		else if(dutyy < 150){
0x2E14	0x4825    LDR	R0, [PC, #148]
0x2E16	0xF9B00000  LDRSH	R0, [R0, #0]
0x2E1A	0x2896    CMP	R0, #150
0x2E1C	0xDA23    BGE	L_directionWheelADC2
;wheelDirection.c, 15 :: 		wheel_position_angle_double = (((double)150 - (double)dutyy) * (double)45) / (double)100;
0x2E1E	0x4823    LDR	R0, [PC, #140]
0x2E20	0xF9B00000  LDRSH	R0, [R0, #0]
0x2E24	0xEE000A90  VMOV	S1, R0
0x2E28	0xEEF80AE0  VCVT.F32.S32	S1, S1
0x2E2C	0x4820    LDR	R0, [PC, #128]
0x2E2E	0xEE000A10  VMOV	S0, R0
0x2E32	0xEE700A60  VSUB.F32	S1, S0, S1
0x2E36	0x481F    LDR	R0, [PC, #124]
0x2E38	0xEE000A10  VMOV	S0, R0
0x2E3C	0xEE600A80  VMUL.F32	S1, S1, S0
0x2E40	0x481D    LDR	R0, [PC, #116]
0x2E42	0xEE000A10  VMOV	S0, R0
0x2E46	0xEE800A80  VDIV.F32	S0, S1, S0
0x2E4A	0x481C    LDR	R0, [PC, #112]
0x2E4C	0xED000A00  VSTR.32	S0, [R0, #0]
;wheelDirection.c, 16 :: 		wheel_position_angle = (unsigned int)wheel_position_angle_double;
0x2E50	0xEEBC0A40  VCVT.U32.F32	S0, S0
0x2E54	0xEE101A10  VMOV	R1, S0
0x2E58	0xB289    UXTH	R1, R1
0x2E5A	0x4819    LDR	R0, [PC, #100]
0x2E5C	0x8001    STRH	R1, [R0, #0]
;wheelDirection.c, 18 :: 		wheel_position_direction = WHEEL_DIRECTION_RIGHT;
0x2E5E	0x2102    MOVS	R1, #2
0x2E60	0x4818    LDR	R0, [PC, #96]
0x2E62	0x8001    STRH	R1, [R0, #0]
;wheelDirection.c, 19 :: 		}
0x2E64	0xE005    B	L_directionWheelADC3
L_directionWheelADC2:
;wheelDirection.c, 21 :: 		wheel_position_angle = 0;
0x2E66	0x2100    MOVS	R1, #0
0x2E68	0x4815    LDR	R0, [PC, #84]
0x2E6A	0x8001    STRH	R1, [R0, #0]
;wheelDirection.c, 22 :: 		wheel_position_direction = WHEEL_DIRECTION_STREIGHT;
0x2E6C	0x2100    MOVS	R1, #0
0x2E6E	0x4815    LDR	R0, [PC, #84]
0x2E70	0x8001    STRH	R1, [R0, #0]
;wheelDirection.c, 23 :: 		}
L_directionWheelADC3:
L_directionWheelADC1:
;wheelDirection.c, 31 :: 		if(countedTimer){
0x2E72	0x4915    LDR	R1, [PC, #84]
0x2E74	0x6808    LDR	R0, [R1, #0]
0x2E76	0xB1A8    CBZ	R0, L_directionWheelADC4
;wheelDirection.c, 32 :: 		countedTimer = 0;
0x2E78	0x2100    MOVS	R1, #0
0x2E7A	0xB249    SXTB	R1, R1
0x2E7C	0x4812    LDR	R0, [PC, #72]
0x2E7E	0x6001    STR	R1, [R0, #0]
;wheelDirection.c, 35 :: 		if(activeBattery != 0){
0x2E80	0x4812    LDR	R0, [PC, #72]
0x2E82	0x8800    LDRH	R0, [R0, #0]
0x2E84	0xB128    CBZ	R0, L_directionWheelADC5
;wheelDirection.c, 36 :: 		uartSendCommandMotor(motorDirection, motorSpeed);
0x2E86	0x4812    LDR	R0, [PC, #72]
0x2E88	0x7801    LDRB	R1, [R0, #0]
0x2E8A	0x4812    LDR	R0, [PC, #72]
0x2E8C	0x7800    LDRB	R0, [R0, #0]
0x2E8E	0xF7FEFAD3  BL	_uartSendCommandMotor+0
;wheelDirection.c, 37 :: 		}
L_directionWheelADC5:
;wheelDirection.c, 38 :: 		if(control_taken){
0x2E92	0x4911    LDR	R1, [PC, #68]
0x2E94	0x6808    LDR	R0, [R1, #0]
0x2E96	0xB118    CBZ	R0, L_directionWheelADC6
;wheelDirection.c, 39 :: 		dutyy = boatWheelDir;
0x2E98	0x4810    LDR	R0, [PC, #64]
0x2E9A	0x7801    LDRB	R1, [R0, #0]
0x2E9C	0x4803    LDR	R0, [PC, #12]
0x2E9E	0x8001    STRH	R1, [R0, #0]
;wheelDirection.c, 40 :: 		}
L_directionWheelADC6:
;wheelDirection.c, 42 :: 		uart3SendJoystick();
0x2EA0	0xF7FEFAA0  BL	_uart3SendJoystick+0
;wheelDirection.c, 83 :: 		}
L_directionWheelADC4:
;wheelDirection.c, 85 :: 		}
L_end_directionWheelADC:
0x2EA4	0xF8DDE000  LDR	LR, [SP, #0]
0x2EA8	0xB001    ADD	SP, SP, #4
0x2EAA	0x4770    BX	LR
0x2EAC	0x004E2000  	_dutyy+0
0x2EB0	0x00004316  	#1125515264
0x2EB4	0x00004234  	#1110704128
0x2EB8	0x000042C8  	#1120403456
0x2EBC	0x00542000  	_wheel_position_angle_double+0
0x2EC0	0x00582000  	_wheel_position_angle+0
0x2EC4	0x005A2000  	_wheel_position_direction+0
0x2EC8	0x0FB02200  	_countedTimer+0
0x2ECC	0x000E2000  	_activeBattery+0
0x2ED0	0x00292000  	_motorSpeed+0
0x2ED4	0x00362000  	_motorDirection+0
0x2ED8	0x408C2201  	_control_taken+0
0x2EDC	0x005C2000  	_boatWheelDir+0
; end of _directionWheelADC
_uartSendCommandMotor:
;uartSend.c, 4 :: 		void uartSendCommandMotor(unsigned short motorDirection, unsigned short motorSpeed){
; motorSpeed start address is: 4 (R1)
; motorDirection start address is: 0 (R0)
0x1438	0xB082    SUB	SP, SP, #8
0x143A	0xF8CDE000  STR	LR, [SP, #0]
; motorSpeed end address is: 4 (R1)
; motorDirection end address is: 0 (R0)
; motorDirection start address is: 0 (R0)
; motorSpeed start address is: 4 (R1)
;uartSend.c, 9 :: 		forSend[0] = 0xCA;
0x143E	0xAC01    ADD	R4, SP, #4
0x1440	0x22CA    MOVS	R2, #202
0x1442	0x7022    STRB	R2, [R4, #0]
;uartSend.c, 10 :: 		forSend[1] = 0x41;
0x1444	0x1C63    ADDS	R3, R4, #1
0x1446	0x2241    MOVS	R2, #65
0x1448	0x701A    STRB	R2, [R3, #0]
;uartSend.c, 11 :: 		forSend[2] = (char)motorDirection;
0x144A	0x1CA2    ADDS	R2, R4, #2
0x144C	0x7010    STRB	R0, [R2, #0]
; motorDirection end address is: 0 (R0)
;uartSend.c, 12 :: 		forSend[3] = (char)motorSpeed;
0x144E	0x1CE2    ADDS	R2, R4, #3
0x1450	0x7011    STRB	R1, [R2, #0]
; motorSpeed end address is: 4 (R1)
;uartSend.c, 14 :: 		UART1_RXTX =1;
0x1452	0x2301    MOVS	R3, #1
0x1454	0xB25B    SXTB	R3, R3
0x1456	0x4A1B    LDR	R2, [PC, #108]
0x1458	0x6013    STR	R3, [R2, #0]
;uartSend.c, 16 :: 		UART1_Write(forSend[0]);
0x145A	0x7822    LDRB	R2, [R4, #0]
0x145C	0xB290    UXTH	R0, R2
0x145E	0xF7FFF8F5  BL	_UART1_Write+0
;uartSend.c, 17 :: 		UART1_Write(forSend[1]);
0x1462	0xAA01    ADD	R2, SP, #4
0x1464	0x1C52    ADDS	R2, R2, #1
0x1466	0x7812    LDRB	R2, [R2, #0]
0x1468	0xB290    UXTH	R0, R2
0x146A	0xF7FFF8EF  BL	_UART1_Write+0
;uartSend.c, 18 :: 		UART1_Write(forSend[2]);
0x146E	0xAA01    ADD	R2, SP, #4
0x1470	0x1C92    ADDS	R2, R2, #2
0x1472	0x7812    LDRB	R2, [R2, #0]
0x1474	0xB290    UXTH	R0, R2
0x1476	0xF7FFF8E9  BL	_UART1_Write+0
;uartSend.c, 19 :: 		UART1_Write(forSend[3]);
0x147A	0xAA01    ADD	R2, SP, #4
0x147C	0x1CD2    ADDS	R2, R2, #3
0x147E	0x7812    LDRB	R2, [R2, #0]
0x1480	0xB290    UXTH	R0, R2
0x1482	0xF7FFF8E3  BL	_UART1_Write+0
;uartSend.c, 20 :: 		UART1_Write(crc8(forSend[2], forSend[3]));
0x1486	0xAC01    ADD	R4, SP, #4
0x1488	0x1CE2    ADDS	R2, R4, #3
0x148A	0x7812    LDRB	R2, [R2, #0]
0x148C	0xB2D3    UXTB	R3, R2
0x148E	0x1CA2    ADDS	R2, R4, #2
0x1490	0x7812    LDRB	R2, [R2, #0]
0x1492	0xB2D9    UXTB	R1, R3
0x1494	0xB2D0    UXTB	R0, R2
0x1496	0xF7FFF877  BL	_crc8+0
0x149A	0xF7FFF8D7  BL	_UART1_Write+0
;uartSend.c, 21 :: 		Delay_ms(5);
0x149E	0xF24457BE  MOVW	R7, #17854
0x14A2	0xF2C00704  MOVT	R7, #4
0x14A6	0xBF00    NOP
0x14A8	0xBF00    NOP
L_uartSendCommandMotor0:
0x14AA	0x1E7F    SUBS	R7, R7, #1
0x14AC	0xD1FD    BNE	L_uartSendCommandMotor0
0x14AE	0xBF00    NOP
0x14B0	0xBF00    NOP
0x14B2	0xBF00    NOP
;uartSend.c, 22 :: 		UART1_RXTX =0;
0x14B4	0x2300    MOVS	R3, #0
0x14B6	0xB25B    SXTB	R3, R3
0x14B8	0x4A02    LDR	R2, [PC, #8]
0x14BA	0x6013    STR	R3, [R2, #0]
;uartSend.c, 23 :: 		}
L_end_uartSendCommandMotor:
0x14BC	0xF8DDE000  LDR	LR, [SP, #0]
0x14C0	0xB002    ADD	SP, SP, #8
0x14C2	0x4770    BX	LR
0x14C4	0x02A04240  	UART1_RXTX+0
; end of _uartSendCommandMotor
_UART1_Write:
;__Lib_UART_123_45_6.c, 41 :: 		
; _data start address is: 0 (R0)
0x064C	0xB081    SUB	SP, SP, #4
0x064E	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45_6.c, 42 :: 		
0x0652	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x0654	0x4803    LDR	R0, [PC, #12]
0x0656	0xF000F859  BL	__Lib_UART_123_45_6_UARTx_Write+0
;__Lib_UART_123_45_6.c, 43 :: 		
L_end_UART1_Write:
0x065A	0xF8DDE000  LDR	LR, [SP, #0]
0x065E	0xB001    ADD	SP, SP, #4
0x0660	0x4770    BX	LR
0x0662	0xBF00    NOP
0x0664	0x10004001  	USART1_SR+0
; end of _UART1_Write
_crc8:
;crc.c, 77 :: 		unsigned short crc8(unsigned short dir, unsigned short speed){
; speed start address is: 4 (R1)
; dir start address is: 0 (R0)
0x0588	0xB081    SUB	SP, SP, #4
0x058A	0xB2CB    UXTB	R3, R1
; speed end address is: 4 (R1)
; dir end address is: 0 (R0)
; dir start address is: 0 (R0)
; speed start address is: 12 (R3)
;crc.c, 83 :: 		speed1 = speed / 16;
0x058C	0x091A    LSRS	R2, R3, #4
; speed1 start address is: 4 (R1)
0x058E	0xB2D1    UXTB	R1, R2
;crc.c, 84 :: 		speed0 = speed % 16;
0x0590	0xF003020F  AND	R2, R3, #15
0x0594	0xB2D2    UXTB	R2, R2
; speed end address is: 12 (R3)
; speed0 start address is: 16 (R4)
0x0596	0xB2D4    UXTB	R4, R2
;crc.c, 86 :: 		if(speed0 >= 0x0C){
0x0598	0x2A0C    CMP	R2, #12
0x059A	0xD30F    BCC	L_crc824
;crc.c, 87 :: 		temp = 0x0B - 2*(0x0F - speed0);
0x059C	0xF1C4020F  RSB	R2, R4, #15
0x05A0	0xB212    SXTH	R2, R2
0x05A2	0x0052    LSLS	R2, R2, #1
0x05A4	0xB212    SXTH	R2, R2
0x05A6	0xF1C2020B  RSB	R2, R2, #11
;crc.c, 88 :: 		crc = speed1 * 16 + (speed0 - temp);
0x05AA	0x010B    LSLS	R3, R1, #4
0x05AC	0xB21B    SXTH	R3, R3
; speed1 end address is: 4 (R1)
0x05AE	0xB2D2    UXTB	R2, R2
0x05B0	0x1AA2    SUB	R2, R4, R2
0x05B2	0xB212    SXTH	R2, R2
0x05B4	0x189A    ADDS	R2, R3, R2
0x05B6	0xF88D2000  STRB	R2, [SP, #0]
;crc.c, 89 :: 		}
0x05BA	0xE032    B	L_crc825
L_crc824:
;crc.c, 90 :: 		else if (speed0 >= 0x08){
; speed1 start address is: 4 (R1)
0x05BC	0x2C08    CMP	R4, #8
0x05BE	0xD30F    BCC	L_crc826
;crc.c, 91 :: 		temp = 0x0B - 2*(0x0B - speed0);
0x05C0	0xF1C4020B  RSB	R2, R4, #11
0x05C4	0xB212    SXTH	R2, R2
0x05C6	0x0052    LSLS	R2, R2, #1
0x05C8	0xB212    SXTH	R2, R2
0x05CA	0xF1C2020B  RSB	R2, R2, #11
;crc.c, 92 :: 		crc = speed1 * 16 + (speed0 - temp);
0x05CE	0x010B    LSLS	R3, R1, #4
0x05D0	0xB21B    SXTH	R3, R3
; speed1 end address is: 4 (R1)
0x05D2	0xB2D2    UXTB	R2, R2
0x05D4	0x1AA2    SUB	R2, R4, R2
0x05D6	0xB212    SXTH	R2, R2
0x05D8	0x189A    ADDS	R2, R3, R2
0x05DA	0xF88D2000  STRB	R2, [SP, #0]
;crc.c, 93 :: 		}
0x05DE	0xE020    B	L_crc827
L_crc826:
;crc.c, 94 :: 		else if (speed0 >= 0x04){
; speed1 start address is: 4 (R1)
0x05E0	0x2C04    CMP	R4, #4
0x05E2	0xD30E    BCC	L_crc828
;crc.c, 95 :: 		temp = 0x05 + 2*(0x07 - speed0);
0x05E4	0xF1C40207  RSB	R2, R4, #7
0x05E8	0xB212    SXTH	R2, R2
0x05EA	0x0052    LSLS	R2, R2, #1
0x05EC	0xB212    SXTH	R2, R2
0x05EE	0x1D52    ADDS	R2, R2, #5
;crc.c, 96 :: 		crc = speed1 * 16 + (speed0 + temp);
0x05F0	0x010B    LSLS	R3, R1, #4
0x05F2	0xB21B    SXTH	R3, R3
; speed1 end address is: 4 (R1)
0x05F4	0xB2D2    UXTB	R2, R2
0x05F6	0x18A2    ADDS	R2, R4, R2
0x05F8	0xB212    SXTH	R2, R2
0x05FA	0x189A    ADDS	R2, R3, R2
0x05FC	0xF88D2000  STRB	R2, [SP, #0]
;crc.c, 97 :: 		}
0x0600	0xE00F    B	L_crc829
L_crc828:
;crc.c, 98 :: 		else if (speed0 >= 0x00){
; speed1 start address is: 4 (R1)
0x0602	0x2C00    CMP	R4, #0
0x0604	0xD30D    BCC	L_crc830
;crc.c, 99 :: 		temp = 0x05 + 2*(0x03 - speed0);
0x0606	0xF1C40203  RSB	R2, R4, #3
0x060A	0xB212    SXTH	R2, R2
0x060C	0x0052    LSLS	R2, R2, #1
0x060E	0xB212    SXTH	R2, R2
0x0610	0x1D52    ADDS	R2, R2, #5
;crc.c, 100 :: 		crc = speed1 * 16 + (speed0 + temp);
0x0612	0x010B    LSLS	R3, R1, #4
0x0614	0xB21B    SXTH	R3, R3
; speed1 end address is: 4 (R1)
0x0616	0xB2D2    UXTB	R2, R2
0x0618	0x18A2    ADDS	R2, R4, R2
0x061A	0xB212    SXTH	R2, R2
0x061C	0x189A    ADDS	R2, R3, R2
0x061E	0xF88D2000  STRB	R2, [SP, #0]
;crc.c, 101 :: 		}
L_crc830:
L_crc829:
L_crc827:
L_crc825:
;crc.c, 103 :: 		if(dir == 0x01){
0x0622	0x2801    CMP	R0, #1
0x0624	0xD10E    BNE	L_crc831
; dir end address is: 0 (R0)
;crc.c, 104 :: 		if(speed0 % 2 == 0){
0x0626	0xF0040201  AND	R2, R4, #1
0x062A	0xB2D2    UXTB	R2, R2
; speed0 end address is: 16 (R4)
0x062C	0xB92A    CBNZ	R2, L_crc832
;crc.c, 105 :: 		crc -= 1;
0x062E	0xF89D2000  LDRB	R2, [SP, #0]
0x0632	0x1E52    SUBS	R2, R2, #1
0x0634	0xF88D2000  STRB	R2, [SP, #0]
;crc.c, 106 :: 		}
0x0638	0xE004    B	L_crc833
L_crc832:
;crc.c, 108 :: 		crc += 1;
0x063A	0xF89D2000  LDRB	R2, [SP, #0]
0x063E	0x1C52    ADDS	R2, R2, #1
0x0640	0xF88D2000  STRB	R2, [SP, #0]
;crc.c, 109 :: 		}
L_crc833:
;crc.c, 110 :: 		}
L_crc831:
;crc.c, 112 :: 		return crc;
0x0644	0xF89D0000  LDRB	R0, [SP, #0]
;crc.c, 113 :: 		}
L_end_crc8:
0x0648	0xB001    ADD	SP, SP, #4
0x064A	0x4770    BX	LR
; end of _crc8
_uart3SendJoystick:
;uartSend.c, 761 :: 		void uart3SendJoystick(){
0x13E4	0xB081    SUB	SP, SP, #4
0x13E6	0xF8CDE000  STR	LR, [SP, #0]
;uartSend.c, 763 :: 		UART3_Write(0x21);
0x13EA	0x2021    MOVS	R0, #33
0x13EC	0xF7FFF980  BL	_UART3_Write+0
;uartSend.c, 764 :: 		UART3_Write(0x40);
0x13F0	0x2040    MOVS	R0, #64
0x13F2	0xF7FFF97D  BL	_UART3_Write+0
;uartSend.c, 765 :: 		UART3_Write((char)gear_status);
0x13F6	0x480D    LDR	R0, [PC, #52]
0x13F8	0x8800    LDRH	R0, [R0, #0]
0x13FA	0xF7FFF979  BL	_UART3_Write+0
;uartSend.c, 766 :: 		UART3_Write((char)dutyy);
0x13FE	0x480C    LDR	R0, [PC, #48]
0x1400	0xF9B00000  LDRSH	R0, [R0, #0]
0x1404	0xF7FFF974  BL	_UART3_Write+0
;uartSend.c, 767 :: 		if(control_taken){
0x1408	0x490A    LDR	R1, [PC, #40]
0x140A	0x6808    LDR	R0, [R1, #0]
0x140C	0xB118    CBZ	R0, L_uart3SendJoystick2
;uartSend.c, 768 :: 		UART3_Write(0x01);
0x140E	0x2001    MOVS	R0, #1
0x1410	0xF7FFF96E  BL	_UART3_Write+0
;uartSend.c, 769 :: 		}
0x1414	0xE002    B	L_uart3SendJoystick3
L_uart3SendJoystick2:
;uartSend.c, 771 :: 		UART3_Write(0x00);
0x1416	0x2000    MOVS	R0, #0
0x1418	0xF7FFF96A  BL	_UART3_Write+0
;uartSend.c, 772 :: 		}
L_uart3SendJoystick3:
;uartSend.c, 773 :: 		UART3_Write(0x3B);
0x141C	0x203B    MOVS	R0, #59
0x141E	0xF7FFF967  BL	_UART3_Write+0
;uartSend.c, 774 :: 		}
L_end_uart3SendJoystick:
0x1422	0xF8DDE000  LDR	LR, [SP, #0]
0x1426	0xB001    ADD	SP, SP, #4
0x1428	0x4770    BX	LR
0x142A	0xBF00    NOP
0x142C	0x00342000  	_gear_status+0
0x1430	0x004E2000  	_dutyy+0
0x1434	0x408C2201  	_control_taken+0
; end of _uart3SendJoystick
_UART3_Write:
;__Lib_UART_123_45_6.c, 49 :: 		
; _data start address is: 0 (R0)
0x06F0	0xB081    SUB	SP, SP, #4
0x06F2	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45_6.c, 50 :: 		
0x06F6	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x06F8	0x4803    LDR	R0, [PC, #12]
0x06FA	0xF000F807  BL	__Lib_UART_123_45_6_UARTx_Write+0
;__Lib_UART_123_45_6.c, 51 :: 		
L_end_UART3_Write:
0x06FE	0xF8DDE000  LDR	LR, [SP, #0]
0x0702	0xB001    ADD	SP, SP, #4
0x0704	0x4770    BX	LR
0x0706	0xBF00    NOP
0x0708	0x48004000  	USART3_SR+0
; end of _UART3_Write
_batteryLavelMeasure:
;batteryLavel.c, 5 :: 		void batteryLavelMeasure(){
0x1AF8	0xB081    SUB	SP, SP, #4
0x1AFA	0xF8CDE000  STR	LR, [SP, #0]
;batteryLavel.c, 7 :: 		if(battry_percentage_check)
0x1AFE	0x49A8    LDR	R1, [PC, #672]
0x1B00	0x6808    LDR	R0, [R1, #0]
0x1B02	0x2800    CMP	R0, #0
0x1B04	0xF0008288  BEQ	L_batteryLavelMeasure0
;batteryLavel.c, 9 :: 		battry_percentage_check = 0;
0x1B08	0x2100    MOVS	R1, #0
0x1B0A	0xB249    SXTB	R1, R1
0x1B0C	0x48A4    LDR	R0, [PC, #656]
0x1B0E	0x6001    STR	R1, [R0, #0]
;batteryLavel.c, 10 :: 		battry_percentage_check_counter = 0;
0x1B10	0x2100    MOVS	R1, #0
0x1B12	0x48A4    LDR	R0, [PC, #656]
0x1B14	0x8001    STRH	R1, [R0, #0]
;batteryLavel.c, 23 :: 		for(i=0; i<300; i++){
0x1B16	0x2100    MOVS	R1, #0
0x1B18	0xB209    SXTH	R1, R1
0x1B1A	0x48A3    LDR	R0, [PC, #652]
0x1B1C	0x8001    STRH	R1, [R0, #0]
L_batteryLavelMeasure1:
0x1B1E	0x48A2    LDR	R0, [PC, #648]
0x1B20	0xF9B00000  LDRSH	R0, [R0, #0]
0x1B24	0xF5B07F96  CMP	R0, #300
0x1B28	0xDA17    BGE	L_batteryLavelMeasure2
;batteryLavel.c, 24 :: 		ADC_Set_Input_Channel(_ADC_CHANNEL_4);
0x1B2A	0xF2400010  MOVW	R0, #16
0x1B2E	0xF7FFF987  BL	_ADC_Set_Input_Channel+0
;batteryLavel.c, 25 :: 		adc_read2 = ADC2_Get_Sample(4);
0x1B32	0x2004    MOVS	R0, #4
0x1B34	0xF7FFFA14  BL	_ADC2_Get_Sample+0
0x1B38	0x4B9C    LDR	R3, [PC, #624]
0x1B3A	0x6018    STR	R0, [R3, #0]
;batteryLavel.c, 26 :: 		adc_array2[i] = adc_read2;
0x1B3C	0x4A9A    LDR	R2, [PC, #616]
0x1B3E	0xF9B20000  LDRSH	R0, [R2, #0]
0x1B42	0x0081    LSLS	R1, R0, #2
0x1B44	0x489A    LDR	R0, [PC, #616]
0x1B46	0x1841    ADDS	R1, R0, R1
0x1B48	0x4618    MOV	R0, R3
0x1B4A	0x6800    LDR	R0, [R0, #0]
0x1B4C	0x6008    STR	R0, [R1, #0]
;batteryLavel.c, 23 :: 		for(i=0; i<300; i++){
0x1B4E	0x4610    MOV	R0, R2
0x1B50	0xF9B00000  LDRSH	R0, [R0, #0]
0x1B54	0x1C40    ADDS	R0, R0, #1
0x1B56	0x8010    STRH	R0, [R2, #0]
;batteryLavel.c, 27 :: 		}
0x1B58	0xE7E1    B	L_batteryLavelMeasure1
L_batteryLavelMeasure2:
;batteryLavel.c, 29 :: 		for(i=0; i<300; i++)
0x1B5A	0x2100    MOVS	R1, #0
0x1B5C	0xB209    SXTH	R1, R1
0x1B5E	0x4892    LDR	R0, [PC, #584]
0x1B60	0x8001    STRH	R1, [R0, #0]
L_batteryLavelMeasure4:
0x1B62	0x4891    LDR	R0, [PC, #580]
0x1B64	0xF9B00000  LDRSH	R0, [R0, #0]
0x1B68	0xF5B07F96  CMP	R0, #300
0x1B6C	0xDA3C    BGE	L_batteryLavelMeasure5
;batteryLavel.c, 31 :: 		for(j=i+1; j<300; j++)
0x1B6E	0x488E    LDR	R0, [PC, #568]
0x1B70	0xF9B00000  LDRSH	R0, [R0, #0]
0x1B74	0x1C41    ADDS	R1, R0, #1
0x1B76	0x488F    LDR	R0, [PC, #572]
0x1B78	0x8001    STRH	R1, [R0, #0]
L_batteryLavelMeasure7:
0x1B7A	0x488E    LDR	R0, [PC, #568]
0x1B7C	0x8800    LDRH	R0, [R0, #0]
0x1B7E	0xF5B07F96  CMP	R0, #300
0x1B82	0xD22B    BCS	L_batteryLavelMeasure8
;batteryLavel.c, 33 :: 		if(adc_array2[j]<adc_array2[i])
0x1B84	0x488B    LDR	R0, [PC, #556]
0x1B86	0x8800    LDRH	R0, [R0, #0]
0x1B88	0x0081    LSLS	R1, R0, #2
0x1B8A	0x4889    LDR	R0, [PC, #548]
0x1B8C	0x1840    ADDS	R0, R0, R1
0x1B8E	0x6802    LDR	R2, [R0, #0]
0x1B90	0x4885    LDR	R0, [PC, #532]
0x1B92	0xF9B00000  LDRSH	R0, [R0, #0]
0x1B96	0x0081    LSLS	R1, R0, #2
0x1B98	0x4885    LDR	R0, [PC, #532]
0x1B9A	0x1840    ADDS	R0, R0, R1
0x1B9C	0x6800    LDR	R0, [R0, #0]
0x1B9E	0x4282    CMP	R2, R0
0x1BA0	0xD217    BCS	L_batteryLavelMeasure10
;batteryLavel.c, 35 :: 		tmp = adc_array2[i];
0x1BA2	0x4881    LDR	R0, [PC, #516]
0x1BA4	0xF9B00000  LDRSH	R0, [R0, #0]
0x1BA8	0x0081    LSLS	R1, R0, #2
0x1BAA	0x4881    LDR	R0, [PC, #516]
0x1BAC	0x1844    ADDS	R4, R0, R1
0x1BAE	0x6820    LDR	R0, [R4, #0]
0x1BB0	0x4B81    LDR	R3, [PC, #516]
0x1BB2	0x6018    STR	R0, [R3, #0]
;batteryLavel.c, 36 :: 		adc_array2[i] = adc_array2[j];
0x1BB4	0x4A7F    LDR	R2, [PC, #508]
0x1BB6	0x8810    LDRH	R0, [R2, #0]
0x1BB8	0x0081    LSLS	R1, R0, #2
0x1BBA	0x487D    LDR	R0, [PC, #500]
0x1BBC	0x1840    ADDS	R0, R0, R1
0x1BBE	0x6800    LDR	R0, [R0, #0]
0x1BC0	0x6020    STR	R0, [R4, #0]
;batteryLavel.c, 37 :: 		adc_array2[j] = tmp;
0x1BC2	0x4610    MOV	R0, R2
0x1BC4	0x8800    LDRH	R0, [R0, #0]
0x1BC6	0x0081    LSLS	R1, R0, #2
0x1BC8	0x4879    LDR	R0, [PC, #484]
0x1BCA	0x1841    ADDS	R1, R0, R1
0x1BCC	0x4618    MOV	R0, R3
0x1BCE	0x6800    LDR	R0, [R0, #0]
0x1BD0	0x6008    STR	R0, [R1, #0]
;batteryLavel.c, 38 :: 		}
L_batteryLavelMeasure10:
;batteryLavel.c, 31 :: 		for(j=i+1; j<300; j++)
0x1BD2	0x4978    LDR	R1, [PC, #480]
0x1BD4	0x8808    LDRH	R0, [R1, #0]
0x1BD6	0x1C40    ADDS	R0, R0, #1
0x1BD8	0x8008    STRH	R0, [R1, #0]
;batteryLavel.c, 39 :: 		}
0x1BDA	0xE7CE    B	L_batteryLavelMeasure7
L_batteryLavelMeasure8:
;batteryLavel.c, 29 :: 		for(i=0; i<300; i++)
0x1BDC	0x4972    LDR	R1, [PC, #456]
0x1BDE	0xF9B10000  LDRSH	R0, [R1, #0]
0x1BE2	0x1C40    ADDS	R0, R0, #1
0x1BE4	0x8008    STRH	R0, [R1, #0]
;batteryLavel.c, 40 :: 		}
0x1BE6	0xE7BC    B	L_batteryLavelMeasure4
L_batteryLavelMeasure5:
;batteryLavel.c, 42 :: 		for(i=100; i<200; i++){
0x1BE8	0x2164    MOVS	R1, #100
0x1BEA	0xB209    SXTH	R1, R1
0x1BEC	0x486E    LDR	R0, [PC, #440]
0x1BEE	0x8001    STRH	R1, [R0, #0]
L_batteryLavelMeasure11:
0x1BF0	0x486D    LDR	R0, [PC, #436]
0x1BF2	0xF9B00000  LDRSH	R0, [R0, #0]
0x1BF6	0x28C8    CMP	R0, #200
0x1BF8	0xDA10    BGE	L_batteryLavelMeasure12
;batteryLavel.c, 43 :: 		adcSum2 += adc_array2[i];
0x1BFA	0x4B6B    LDR	R3, [PC, #428]
0x1BFC	0xF9B30000  LDRSH	R0, [R3, #0]
0x1C00	0x0081    LSLS	R1, R0, #2
0x1C02	0x486B    LDR	R0, [PC, #428]
0x1C04	0x1840    ADDS	R0, R0, R1
0x1C06	0x6802    LDR	R2, [R0, #0]
0x1C08	0x496C    LDR	R1, [PC, #432]
0x1C0A	0x6808    LDR	R0, [R1, #0]
0x1C0C	0x1880    ADDS	R0, R0, R2
0x1C0E	0x6008    STR	R0, [R1, #0]
;batteryLavel.c, 42 :: 		for(i=100; i<200; i++){
0x1C10	0x4618    MOV	R0, R3
0x1C12	0xF9B00000  LDRSH	R0, [R0, #0]
0x1C16	0x1C40    ADDS	R0, R0, #1
0x1C18	0x8018    STRH	R0, [R3, #0]
;batteryLavel.c, 44 :: 		}
0x1C1A	0xE7E9    B	L_batteryLavelMeasure11
L_batteryLavelMeasure12:
;batteryLavel.c, 47 :: 		adc_avg2 = ((float)adcSum2)/100f;
0x1C1C	0x4A67    LDR	R2, [PC, #412]
0x1C1E	0xED120A00  VLDR.32	S0, [R2, #0]
0x1C22	0xEEF80A40  VCVT.F32.U32	S1, S0
0x1C26	0x4866    LDR	R0, [PC, #408]
0x1C28	0xEE000A10  VMOV	S0, R0
0x1C2C	0xEEC00A80  VDIV.F32	S1, S1, S0
0x1C30	0x4964    LDR	R1, [PC, #400]
0x1C32	0xED410A00  VSTR.32	S1, [R1, #0]
;batteryLavel.c, 48 :: 		adcSum2 = 0;
0x1C36	0x2000    MOVS	R0, #0
0x1C38	0x6010    STR	R0, [R2, #0]
;batteryLavel.c, 57 :: 		adc_avg2 = adc_avg2 - 2764f;//adc_avg2 = adc_avg2 - 2953f;//adc_avg2 = adc_avg2 - 2910;
0x1C3A	0x4863    LDR	R0, [PC, #396]
0x1C3C	0xEE000A10  VMOV	S0, R0
0x1C40	0xEE300AC0  VSUB.F32	S0, S1, S0
0x1C44	0xED010A00  VSTR.32	S0, [R1, #0]
;batteryLavel.c, 59 :: 		if(adc_avg2 < 0f){
0x1C48	0xEEB50AC0  VCMPE.F32	S0, #0.0
0x1C4C	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x1C50	0xDA07    BGE	L_batteryLavelMeasure14
;batteryLavel.c, 60 :: 		adc_avg2 = 0f;
0x1C52	0xF04F0000  MOV	R0, #0
0x1C56	0xEE000A10  VMOV	S0, R0
0x1C5A	0x485A    LDR	R0, [PC, #360]
0x1C5C	0xED000A00  VSTR.32	S0, [R0, #0]
;batteryLavel.c, 61 :: 		}
0x1C60	0xE010    B	L_batteryLavelMeasure15
L_batteryLavelMeasure14:
;batteryLavel.c, 62 :: 		else if(adc_avg2 > 436f){         //297f
0x1C62	0x4858    LDR	R0, [PC, #352]
0x1C64	0xED500A00  VLDR.32	S1, [R0, #0]
0x1C68	0x4858    LDR	R0, [PC, #352]
0x1C6A	0xEE000A10  VMOV	S0, R0
0x1C6E	0xEEF40AC0  VCMPE.F32	S1, S0
0x1C72	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x1C76	0xDD05    BLE	L_batteryLavelMeasure16
;batteryLavel.c, 63 :: 		adc_avg2 = 436f;
0x1C78	0x4854    LDR	R0, [PC, #336]
0x1C7A	0xEE000A10  VMOV	S0, R0
0x1C7E	0x4851    LDR	R0, [PC, #324]
0x1C80	0xED000A00  VSTR.32	S0, [R0, #0]
;batteryLavel.c, 64 :: 		}
L_batteryLavelMeasure16:
L_batteryLavelMeasure15:
;batteryLavel.c, 67 :: 		battery_percentage1 = (100f/436f)*adc_avg2;
0x1C84	0x484F    LDR	R0, [PC, #316]
0x1C86	0xED500A00  VLDR.32	S1, [R0, #0]
0x1C8A	0x4851    LDR	R0, [PC, #324]
0x1C8C	0xEE000A10  VMOV	S0, R0
0x1C90	0xEE600A20  VMUL.F32	S1, S0, S1
0x1C94	0x484F    LDR	R0, [PC, #316]
0x1C96	0xED400A00  VSTR.32	S1, [R0, #0]
;batteryLavel.c, 70 :: 		if(battery_percentage1 >= 89.0){
0x1C9A	0x484F    LDR	R0, [PC, #316]
0x1C9C	0xEE000A10  VMOV	S0, R0
0x1CA0	0xEEF40AC0  VCMPE.F32	S1, S0
0x1CA4	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x1CA8	0xDB0B    BLT	L_batteryLavelMeasure17
;batteryLavel.c, 72 :: 		uart4Battery1Level4();
0x1CAA	0xF7FFFE31  BL	_uart4Battery1Level4+0
;batteryLavel.c, 74 :: 		boatBatteriesLavel =  boatBatteriesLavel & 0xF8;
0x1CAE	0x494B    LDR	R1, [PC, #300]
0x1CB0	0x7808    LDRB	R0, [R1, #0]
0x1CB2	0xF00000F8  AND	R0, R0, #248
0x1CB6	0xB2C0    UXTB	R0, R0
0x1CB8	0x7008    STRB	R0, [R1, #0]
;batteryLavel.c, 75 :: 		boatBatteriesLavel =  boatBatteriesLavel | 0x04;
0x1CBA	0xF0400004  ORR	R0, R0, #4
0x1CBE	0x7008    STRB	R0, [R1, #0]
;batteryLavel.c, 76 :: 		}
0x1CC0	0xE055    B	L_batteryLavelMeasure18
L_batteryLavelMeasure17:
;batteryLavel.c, 77 :: 		else if(battery_percentage1 >= 61.0){
0x1CC2	0x4844    LDR	R0, [PC, #272]
0x1CC4	0xED500A00  VLDR.32	S1, [R0, #0]
0x1CC8	0x4845    LDR	R0, [PC, #276]
0x1CCA	0xEE000A10  VMOV	S0, R0
0x1CCE	0xEEF40AC0  VCMPE.F32	S1, S0
0x1CD2	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x1CD6	0xDB0B    BLT	L_batteryLavelMeasure19
;batteryLavel.c, 80 :: 		uart4Battery1Level3();
0x1CD8	0xF7FFFEA6  BL	_uart4Battery1Level3+0
;batteryLavel.c, 82 :: 		boatBatteriesLavel =  boatBatteriesLavel & 0xF8;
0x1CDC	0x493F    LDR	R1, [PC, #252]
0x1CDE	0x7808    LDRB	R0, [R1, #0]
0x1CE0	0xF00000F8  AND	R0, R0, #248
0x1CE4	0xB2C0    UXTB	R0, R0
0x1CE6	0x7008    STRB	R0, [R1, #0]
;batteryLavel.c, 83 :: 		boatBatteriesLavel =  boatBatteriesLavel | 0x03;
0x1CE8	0xF0400003  ORR	R0, R0, #3
0x1CEC	0x7008    STRB	R0, [R1, #0]
;batteryLavel.c, 84 :: 		}
0x1CEE	0xE03E    B	L_batteryLavelMeasure20
L_batteryLavelMeasure19:
;batteryLavel.c, 85 :: 		else if(battery_percentage1 >= 33.0){
0x1CF0	0x4838    LDR	R0, [PC, #224]
0x1CF2	0xED500A00  VLDR.32	S1, [R0, #0]
0x1CF6	0x483B    LDR	R0, [PC, #236]
0x1CF8	0xEE000A10  VMOV	S0, R0
0x1CFC	0xEEF40AC0  VCMPE.F32	S1, S0
0x1D00	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x1D04	0xDB0B    BLT	L_batteryLavelMeasure21
;batteryLavel.c, 88 :: 		uart4Battery1Level2();
0x1D06	0xF7FFFCF1  BL	_uart4Battery1Level2+0
;batteryLavel.c, 90 :: 		boatBatteriesLavel =  boatBatteriesLavel & 0xF8;
0x1D0A	0x4934    LDR	R1, [PC, #208]
0x1D0C	0x7808    LDRB	R0, [R1, #0]
0x1D0E	0xF00000F8  AND	R0, R0, #248
0x1D12	0xB2C0    UXTB	R0, R0
0x1D14	0x7008    STRB	R0, [R1, #0]
;batteryLavel.c, 91 :: 		boatBatteriesLavel =  boatBatteriesLavel | 0x02;
0x1D16	0xF0400002  ORR	R0, R0, #2
0x1D1A	0x7008    STRB	R0, [R1, #0]
;batteryLavel.c, 92 :: 		}
0x1D1C	0xE027    B	L_batteryLavelMeasure22
L_batteryLavelMeasure21:
;batteryLavel.c, 93 :: 		else if(battery_percentage1 >= 1.0){
0x1D1E	0x482D    LDR	R0, [PC, #180]
0x1D20	0xED500A00  VLDR.32	S1, [R0, #0]
0x1D24	0xEEB70A00  VMOV.F32	S0, #1
0x1D28	0xEEF40AC0  VCMPE.F32	S1, S0
0x1D2C	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x1D30	0xDB0B    BLT	L_batteryLavelMeasure23
;batteryLavel.c, 95 :: 		uart4Battery1Level1();
0x1D32	0xF7FEFFB5  BL	_uart4Battery1Level1+0
;batteryLavel.c, 97 :: 		boatBatteriesLavel =  boatBatteriesLavel & 0xF8;
0x1D36	0x4929    LDR	R1, [PC, #164]
0x1D38	0x7808    LDRB	R0, [R1, #0]
0x1D3A	0xF00000F8  AND	R0, R0, #248
0x1D3E	0xB2C0    UXTB	R0, R0
0x1D40	0x7008    STRB	R0, [R1, #0]
;batteryLavel.c, 98 :: 		boatBatteriesLavel =  boatBatteriesLavel | 0x01;
0x1D42	0xF0400001  ORR	R0, R0, #1
0x1D46	0x7008    STRB	R0, [R1, #0]
;batteryLavel.c, 99 :: 		}
0x1D48	0xE011    B	L_batteryLavelMeasure24
L_batteryLavelMeasure23:
;batteryLavel.c, 100 :: 		else if(battery_percentage1 < 1.0){
0x1D4A	0x4822    LDR	R0, [PC, #136]
0x1D4C	0xED500A00  VLDR.32	S1, [R0, #0]
0x1D50	0xEEB70A00  VMOV.F32	S0, #1
0x1D54	0xEEF40AC0  VCMPE.F32	S1, S0
0x1D58	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x1D5C	0xDA07    BGE	L_batteryLavelMeasure25
;batteryLavel.c, 102 :: 		uart4Battery1Level0();
0x1D5E	0xF000FBB1  BL	_uart4Battery1Level0+0
;batteryLavel.c, 104 :: 		boatBatteriesLavel =  boatBatteriesLavel & 0xF8;
0x1D62	0x491E    LDR	R1, [PC, #120]
0x1D64	0x7808    LDRB	R0, [R1, #0]
0x1D66	0xF00000F8  AND	R0, R0, #248
0x1D6A	0x7008    STRB	R0, [R1, #0]
;batteryLavel.c, 105 :: 		boatBatteriesLavel =  boatBatteriesLavel | 0x00;
0x1D6C	0x7008    STRB	R0, [R1, #0]
;batteryLavel.c, 106 :: 		}
L_batteryLavelMeasure25:
L_batteryLavelMeasure24:
L_batteryLavelMeasure22:
L_batteryLavelMeasure20:
L_batteryLavelMeasure18:
;batteryLavel.c, 120 :: 		for(i=0; i<300; i++){
0x1D6E	0x2100    MOVS	R1, #0
0x1D70	0xB209    SXTH	R1, R1
0x1D72	0x480D    LDR	R0, [PC, #52]
0x1D74	0x8001    STRH	R1, [R0, #0]
L_batteryLavelMeasure26:
0x1D76	0x480C    LDR	R0, [PC, #48]
0x1D78	0xF9B00000  LDRSH	R0, [R0, #0]
0x1D7C	0xF5B07F96  CMP	R0, #300
0x1D80	0xDA3F    BGE	L_batteryLavelMeasure27
;batteryLavel.c, 121 :: 		ADC_Set_Input_Channel(_ADC_CHANNEL_5);
0x1D82	0xF2400020  MOVW	R0, #32
0x1D86	0xF7FFF85B  BL	_ADC_Set_Input_Channel+0
;batteryLavel.c, 122 :: 		adc_read3 = ADC2_Get_Sample(5);
0x1D8A	0x2005    MOVS	R0, #5
0x1D8C	0xF7FFF8E8  BL	_ADC2_Get_Sample+0
0x1D90	0x4B15    LDR	R3, [PC, #84]
0x1D92	0x6018    STR	R0, [R3, #0]
;batteryLavel.c, 123 :: 		adc_array3[i] = adc_read3;
0x1D94	0x4A04    LDR	R2, [PC, #16]
0x1D96	0xF9B20000  LDRSH	R0, [R2, #0]
0x1D9A	0x0081    LSLS	R1, R0, #2
0x1D9C	0xF000B826  B	#76
0x1DA0	0x0FAC2200  	_battry_percentage_check+0
0x1DA4	0x00122000  	_battry_percentage_check_counter+0
0x1DA8	0x00182000  	_i+0
0x1DAC	0x001C2000  	_adc_read2+0
0x1DB0	0x008C2000  	_adc_array2+0
0x1DB4	0x001A2000  	_j+0
0x1DB8	0x00202000  	_tmp+0
0x1DBC	0x00242000  	_adcSum2+0
0x1DC0	0x000042C8  	#1120403456
0x1DC4	0x053C2000  	_adc_avg2+0
0x1DC8	0xC000452C  	#1160560640
0x1DCC	0x000043DA  	#1138360320
0x1DD0	0xDCC53E6A  	#1047190725
0x1DD4	0x00842000  	_battery_percentage1+0
0x1DD8	0x000042B2  	#1118961664
0x1DDC	0x00282000  	_boatBatteriesLavel+0
0x1DE0	0x00004274  	#1114898432
0x1DE4	0x00004204  	#1107558400
0x1DE8	0x002C2000  	_adc_read3+0
0x1DEC	0x488C    LDR	R0, [PC, #560]
0x1DEE	0x1841    ADDS	R1, R0, R1
0x1DF0	0x4618    MOV	R0, R3
0x1DF2	0x6800    LDR	R0, [R0, #0]
0x1DF4	0x6008    STR	R0, [R1, #0]
;batteryLavel.c, 120 :: 		for(i=0; i<300; i++){
0x1DF6	0x4610    MOV	R0, R2
0x1DF8	0xF9B00000  LDRSH	R0, [R0, #0]
0x1DFC	0x1C40    ADDS	R0, R0, #1
0x1DFE	0x8010    STRH	R0, [R2, #0]
;batteryLavel.c, 124 :: 		}
0x1E00	0xE7B9    B	L_batteryLavelMeasure26
L_batteryLavelMeasure27:
;batteryLavel.c, 126 :: 		for(i=0; i<300; i++)
0x1E02	0x2100    MOVS	R1, #0
0x1E04	0xB209    SXTH	R1, R1
0x1E06	0x4887    LDR	R0, [PC, #540]
0x1E08	0x8001    STRH	R1, [R0, #0]
L_batteryLavelMeasure29:
0x1E0A	0x4886    LDR	R0, [PC, #536]
0x1E0C	0xF9B00000  LDRSH	R0, [R0, #0]
0x1E10	0xF5B07F96  CMP	R0, #300
0x1E14	0xDA3C    BGE	L_batteryLavelMeasure30
;batteryLavel.c, 128 :: 		for(j=i+1; j<300; j++)
0x1E16	0x4883    LDR	R0, [PC, #524]
0x1E18	0xF9B00000  LDRSH	R0, [R0, #0]
0x1E1C	0x1C41    ADDS	R1, R0, #1
0x1E1E	0x4882    LDR	R0, [PC, #520]
0x1E20	0x8001    STRH	R1, [R0, #0]
L_batteryLavelMeasure32:
0x1E22	0x4881    LDR	R0, [PC, #516]
0x1E24	0x8800    LDRH	R0, [R0, #0]
0x1E26	0xF5B07F96  CMP	R0, #300
0x1E2A	0xD22B    BCS	L_batteryLavelMeasure33
;batteryLavel.c, 130 :: 		if(adc_array3[j]<adc_array3[i])
0x1E2C	0x487E    LDR	R0, [PC, #504]
0x1E2E	0x8800    LDRH	R0, [R0, #0]
0x1E30	0x0081    LSLS	R1, R0, #2
0x1E32	0x487B    LDR	R0, [PC, #492]
0x1E34	0x1840    ADDS	R0, R0, R1
0x1E36	0x6802    LDR	R2, [R0, #0]
0x1E38	0x487A    LDR	R0, [PC, #488]
0x1E3A	0xF9B00000  LDRSH	R0, [R0, #0]
0x1E3E	0x0081    LSLS	R1, R0, #2
0x1E40	0x4877    LDR	R0, [PC, #476]
0x1E42	0x1840    ADDS	R0, R0, R1
0x1E44	0x6800    LDR	R0, [R0, #0]
0x1E46	0x4282    CMP	R2, R0
0x1E48	0xD217    BCS	L_batteryLavelMeasure35
;batteryLavel.c, 132 :: 		tmp = adc_array3[i];
0x1E4A	0x4876    LDR	R0, [PC, #472]
0x1E4C	0xF9B00000  LDRSH	R0, [R0, #0]
0x1E50	0x0081    LSLS	R1, R0, #2
0x1E52	0x4873    LDR	R0, [PC, #460]
0x1E54	0x1844    ADDS	R4, R0, R1
0x1E56	0x6820    LDR	R0, [R4, #0]
0x1E58	0x4B74    LDR	R3, [PC, #464]
0x1E5A	0x6018    STR	R0, [R3, #0]
;batteryLavel.c, 133 :: 		adc_array3[i] = adc_array3[j];
0x1E5C	0x4A72    LDR	R2, [PC, #456]
0x1E5E	0x8810    LDRH	R0, [R2, #0]
0x1E60	0x0081    LSLS	R1, R0, #2
0x1E62	0x486F    LDR	R0, [PC, #444]
0x1E64	0x1840    ADDS	R0, R0, R1
0x1E66	0x6800    LDR	R0, [R0, #0]
0x1E68	0x6020    STR	R0, [R4, #0]
;batteryLavel.c, 134 :: 		adc_array3[j] = tmp;
0x1E6A	0x4610    MOV	R0, R2
0x1E6C	0x8800    LDRH	R0, [R0, #0]
0x1E6E	0x0081    LSLS	R1, R0, #2
0x1E70	0x486B    LDR	R0, [PC, #428]
0x1E72	0x1841    ADDS	R1, R0, R1
0x1E74	0x4618    MOV	R0, R3
0x1E76	0x6800    LDR	R0, [R0, #0]
0x1E78	0x6008    STR	R0, [R1, #0]
;batteryLavel.c, 135 :: 		}
L_batteryLavelMeasure35:
;batteryLavel.c, 128 :: 		for(j=i+1; j<300; j++)
0x1E7A	0x496B    LDR	R1, [PC, #428]
0x1E7C	0x8808    LDRH	R0, [R1, #0]
0x1E7E	0x1C40    ADDS	R0, R0, #1
0x1E80	0x8008    STRH	R0, [R1, #0]
;batteryLavel.c, 136 :: 		}
0x1E82	0xE7CE    B	L_batteryLavelMeasure32
L_batteryLavelMeasure33:
;batteryLavel.c, 126 :: 		for(i=0; i<300; i++)
0x1E84	0x4967    LDR	R1, [PC, #412]
0x1E86	0xF9B10000  LDRSH	R0, [R1, #0]
0x1E8A	0x1C40    ADDS	R0, R0, #1
0x1E8C	0x8008    STRH	R0, [R1, #0]
;batteryLavel.c, 137 :: 		}
0x1E8E	0xE7BC    B	L_batteryLavelMeasure29
L_batteryLavelMeasure30:
;batteryLavel.c, 139 :: 		for(i=100; i<200; i++){
0x1E90	0x2164    MOVS	R1, #100
0x1E92	0xB209    SXTH	R1, R1
0x1E94	0x4863    LDR	R0, [PC, #396]
0x1E96	0x8001    STRH	R1, [R0, #0]
L_batteryLavelMeasure36:
0x1E98	0x4862    LDR	R0, [PC, #392]
0x1E9A	0xF9B00000  LDRSH	R0, [R0, #0]
0x1E9E	0x28C8    CMP	R0, #200
0x1EA0	0xDA10    BGE	L_batteryLavelMeasure37
;batteryLavel.c, 140 :: 		adcSum3 += adc_array3[i];
0x1EA2	0x4B60    LDR	R3, [PC, #384]
0x1EA4	0xF9B30000  LDRSH	R0, [R3, #0]
0x1EA8	0x0081    LSLS	R1, R0, #2
0x1EAA	0x485D    LDR	R0, [PC, #372]
0x1EAC	0x1840    ADDS	R0, R0, R1
0x1EAE	0x6802    LDR	R2, [R0, #0]
0x1EB0	0x495F    LDR	R1, [PC, #380]
0x1EB2	0x6808    LDR	R0, [R1, #0]
0x1EB4	0x1880    ADDS	R0, R0, R2
0x1EB6	0x6008    STR	R0, [R1, #0]
;batteryLavel.c, 139 :: 		for(i=100; i<200; i++){
0x1EB8	0x4618    MOV	R0, R3
0x1EBA	0xF9B00000  LDRSH	R0, [R0, #0]
0x1EBE	0x1C40    ADDS	R0, R0, #1
0x1EC0	0x8018    STRH	R0, [R3, #0]
;batteryLavel.c, 141 :: 		}
0x1EC2	0xE7E9    B	L_batteryLavelMeasure36
L_batteryLavelMeasure37:
;batteryLavel.c, 144 :: 		adc_avg3 = ((float)adcSum3)/100f;
0x1EC4	0x4A5A    LDR	R2, [PC, #360]
0x1EC6	0xED120A00  VLDR.32	S0, [R2, #0]
0x1ECA	0xEEF80A40  VCVT.F32.U32	S1, S0
0x1ECE	0x4859    LDR	R0, [PC, #356]
0x1ED0	0xEE000A10  VMOV	S0, R0
0x1ED4	0xEEC00A80  VDIV.F32	S1, S1, S0
0x1ED8	0x4957    LDR	R1, [PC, #348]
0x1EDA	0xED410A00  VSTR.32	S1, [R1, #0]
;batteryLavel.c, 145 :: 		adcSum3 = 0;
0x1EDE	0x2000    MOVS	R0, #0
0x1EE0	0x6010    STR	R0, [R2, #0]
;batteryLavel.c, 151 :: 		adc_avg3 = adc_avg3 - 2764f;//adc_avg3 = adc_avg3 - 2910;
0x1EE2	0x4856    LDR	R0, [PC, #344]
0x1EE4	0xEE000A10  VMOV	S0, R0
0x1EE8	0xEE300AC0  VSUB.F32	S0, S1, S0
0x1EEC	0xED010A00  VSTR.32	S0, [R1, #0]
;batteryLavel.c, 153 :: 		if(adc_avg3 < 0f){
0x1EF0	0xEEB50AC0  VCMPE.F32	S0, #0.0
0x1EF4	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x1EF8	0xDA07    BGE	L_batteryLavelMeasure39
;batteryLavel.c, 154 :: 		adc_avg3 = 0f;
0x1EFA	0xF04F0000  MOV	R0, #0
0x1EFE	0xEE000A10  VMOV	S0, R0
0x1F02	0x484D    LDR	R0, [PC, #308]
0x1F04	0xED000A00  VSTR.32	S0, [R0, #0]
;batteryLavel.c, 155 :: 		}
0x1F08	0xE010    B	L_batteryLavelMeasure40
L_batteryLavelMeasure39:
;batteryLavel.c, 156 :: 		else if(adc_avg3 > 436f){
0x1F0A	0x484B    LDR	R0, [PC, #300]
0x1F0C	0xED500A00  VLDR.32	S1, [R0, #0]
0x1F10	0x484B    LDR	R0, [PC, #300]
0x1F12	0xEE000A10  VMOV	S0, R0
0x1F16	0xEEF40AC0  VCMPE.F32	S1, S0
0x1F1A	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x1F1E	0xDD05    BLE	L_batteryLavelMeasure41
;batteryLavel.c, 157 :: 		adc_avg3 = 436f;
0x1F20	0x4847    LDR	R0, [PC, #284]
0x1F22	0xEE000A10  VMOV	S0, R0
0x1F26	0x4844    LDR	R0, [PC, #272]
0x1F28	0xED000A00  VSTR.32	S0, [R0, #0]
;batteryLavel.c, 158 :: 		}
L_batteryLavelMeasure41:
L_batteryLavelMeasure40:
;batteryLavel.c, 160 :: 		battery_percentage2 = (100f/436f)*adc_avg3;
0x1F2C	0x4842    LDR	R0, [PC, #264]
0x1F2E	0xED500A00  VLDR.32	S1, [R0, #0]
0x1F32	0x4844    LDR	R0, [PC, #272]
0x1F34	0xEE000A10  VMOV	S0, R0
0x1F38	0xEE600A20  VMUL.F32	S1, S0, S1
0x1F3C	0x4842    LDR	R0, [PC, #264]
0x1F3E	0xED400A00  VSTR.32	S1, [R0, #0]
;batteryLavel.c, 164 :: 		if(battery_percentage2 >= 89.0){
0x1F42	0x4842    LDR	R0, [PC, #264]
0x1F44	0xEE000A10  VMOV	S0, R0
0x1F48	0xEEF40AC0  VCMPE.F32	S1, S0
0x1F4C	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x1F50	0xDB0B    BLT	L_batteryLavelMeasure42
;batteryLavel.c, 166 :: 		uart4Battery2Level4();
0x1F52	0xF7FEFF0D  BL	_uart4Battery2Level4+0
;batteryLavel.c, 168 :: 		boatBatteriesLavel =  boatBatteriesLavel & 0xC7;
0x1F56	0x493E    LDR	R1, [PC, #248]
0x1F58	0x7808    LDRB	R0, [R1, #0]
0x1F5A	0xF00000C7  AND	R0, R0, #199
0x1F5E	0xB2C0    UXTB	R0, R0
0x1F60	0x7008    STRB	R0, [R1, #0]
;batteryLavel.c, 169 :: 		boatBatteriesLavel =  boatBatteriesLavel | (0x04 << 3);
0x1F62	0xF0400020  ORR	R0, R0, #32
0x1F66	0x7008    STRB	R0, [R1, #0]
;batteryLavel.c, 171 :: 		}
0x1F68	0xE056    B	L_batteryLavelMeasure43
L_batteryLavelMeasure42:
;batteryLavel.c, 172 :: 		else if(battery_percentage2 >= 61.0){
0x1F6A	0x4837    LDR	R0, [PC, #220]
0x1F6C	0xED500A00  VLDR.32	S1, [R0, #0]
0x1F70	0x4838    LDR	R0, [PC, #224]
0x1F72	0xEE000A10  VMOV	S0, R0
0x1F76	0xEEF40AC0  VCMPE.F32	S1, S0
0x1F7A	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x1F7E	0xDB0B    BLT	L_batteryLavelMeasure44
;batteryLavel.c, 175 :: 		uart4Battery2Level3();
0x1F80	0xF7FEFDBE  BL	_uart4Battery2Level3+0
;batteryLavel.c, 177 :: 		boatBatteriesLavel =  boatBatteriesLavel & 0xC7;
0x1F84	0x4932    LDR	R1, [PC, #200]
0x1F86	0x7808    LDRB	R0, [R1, #0]
0x1F88	0xF00000C7  AND	R0, R0, #199
0x1F8C	0xB2C0    UXTB	R0, R0
0x1F8E	0x7008    STRB	R0, [R1, #0]
;batteryLavel.c, 178 :: 		boatBatteriesLavel =  boatBatteriesLavel | (0x03 << 3);
0x1F90	0xF0400018  ORR	R0, R0, #24
0x1F94	0x7008    STRB	R0, [R1, #0]
;batteryLavel.c, 179 :: 		}
0x1F96	0xE03F    B	L_batteryLavelMeasure45
L_batteryLavelMeasure44:
;batteryLavel.c, 180 :: 		else if(battery_percentage2 >= 33.0){
0x1F98	0x482B    LDR	R0, [PC, #172]
0x1F9A	0xED500A00  VLDR.32	S1, [R0, #0]
0x1F9E	0x482E    LDR	R0, [PC, #184]
0x1FA0	0xEE000A10  VMOV	S0, R0
0x1FA4	0xEEF40AC0  VCMPE.F32	S1, S0
0x1FA8	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x1FAC	0xDB0B    BLT	L_batteryLavelMeasure46
;batteryLavel.c, 183 :: 		uart4Battery2Level2();
0x1FAE	0xF7FEFE0F  BL	_uart4Battery2Level2+0
;batteryLavel.c, 185 :: 		boatBatteriesLavel =  boatBatteriesLavel & 0xC7;
0x1FB2	0x4927    LDR	R1, [PC, #156]
0x1FB4	0x7808    LDRB	R0, [R1, #0]
0x1FB6	0xF00000C7  AND	R0, R0, #199
0x1FBA	0xB2C0    UXTB	R0, R0
0x1FBC	0x7008    STRB	R0, [R1, #0]
;batteryLavel.c, 186 :: 		boatBatteriesLavel =  boatBatteriesLavel | (0x02 << 3);
0x1FBE	0xF0400010  ORR	R0, R0, #16
0x1FC2	0x7008    STRB	R0, [R1, #0]
;batteryLavel.c, 187 :: 		}
0x1FC4	0xE028    B	L_batteryLavelMeasure47
L_batteryLavelMeasure46:
;batteryLavel.c, 188 :: 		else if(battery_percentage2 >= 1.0){
0x1FC6	0x4820    LDR	R0, [PC, #128]
0x1FC8	0xED500A00  VLDR.32	S1, [R0, #0]
0x1FCC	0xEEB70A00  VMOV.F32	S0, #1
0x1FD0	0xEEF40AC0  VCMPE.F32	S1, S0
0x1FD4	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x1FD8	0xDB0B    BLT	L_batteryLavelMeasure48
;batteryLavel.c, 191 :: 		uart4Battery2Level1();
0x1FDA	0xF7FEFC0D  BL	_uart4Battery2Level1+0
;batteryLavel.c, 193 :: 		boatBatteriesLavel =  boatBatteriesLavel & 0xC7;
0x1FDE	0x491C    LDR	R1, [PC, #112]
0x1FE0	0x7808    LDRB	R0, [R1, #0]
0x1FE2	0xF00000C7  AND	R0, R0, #199
0x1FE6	0xB2C0    UXTB	R0, R0
0x1FE8	0x7008    STRB	R0, [R1, #0]
;batteryLavel.c, 194 :: 		boatBatteriesLavel =  boatBatteriesLavel | (0x01 << 3);
0x1FEA	0xF0400008  ORR	R0, R0, #8
0x1FEE	0x7008    STRB	R0, [R1, #0]
;batteryLavel.c, 195 :: 		}
0x1FF0	0xE012    B	L_batteryLavelMeasure49
L_batteryLavelMeasure48:
;batteryLavel.c, 196 :: 		else if(battery_percentage2 < 1.0){
0x1FF2	0x4815    LDR	R0, [PC, #84]
0x1FF4	0xED500A00  VLDR.32	S1, [R0, #0]
0x1FF8	0xEEB70A00  VMOV.F32	S0, #1
0x1FFC	0xEEF40AC0  VCMPE.F32	S1, S0
0x2000	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x2004	0xDA08    BGE	L_batteryLavelMeasure50
;batteryLavel.c, 199 :: 		uart4Battery2Level0();
0x2006	0xF000FAC5  BL	_uart4Battery2Level0+0
;batteryLavel.c, 201 :: 		boatBatteriesLavel =  boatBatteriesLavel & 0xC7;
0x200A	0x4911    LDR	R1, [PC, #68]
0x200C	0x7808    LDRB	R0, [R1, #0]
0x200E	0xF00000C7  AND	R0, R0, #199
0x2012	0xB2C0    UXTB	R0, R0
0x2014	0x7008    STRB	R0, [R1, #0]
;batteryLavel.c, 202 :: 		boatBatteriesLavel =  boatBatteriesLavel | (0x00 << 3);
0x2016	0x7008    STRB	R0, [R1, #0]
;batteryLavel.c, 203 :: 		}
L_batteryLavelMeasure50:
L_batteryLavelMeasure49:
L_batteryLavelMeasure47:
L_batteryLavelMeasure45:
L_batteryLavelMeasure43:
;batteryLavel.c, 204 :: 		}
L_batteryLavelMeasure0:
;batteryLavel.c, 205 :: 		}
L_end_batteryLavelMeasure:
0x2018	0xF8DDE000  LDR	LR, [SP, #0]
0x201C	0xB001    ADD	SP, SP, #4
0x201E	0x4770    BX	LR
0x2020	0x05402000  	_adc_array3+0
0x2024	0x00182000  	_i+0
0x2028	0x001A2000  	_j+0
0x202C	0x00202000  	_tmp+0
0x2030	0x00302000  	_adcSum3+0
0x2034	0x000042C8  	#1120403456
0x2038	0x09F02000  	_adc_avg3+0
0x203C	0xC000452C  	#1160560640
0x2040	0x000043DA  	#1138360320
0x2044	0xDCC53E6A  	#1047190725
0x2048	0x00882000  	_battery_percentage2+0
0x204C	0x000042B2  	#1118961664
0x2050	0x00282000  	_boatBatteriesLavel+0
0x2054	0x00004274  	#1114898432
0x2058	0x00004204  	#1107558400
; end of _batteryLavelMeasure
_ADC_Set_Input_Channel:
;__Lib_ADC_123_32F20x_16ch.c, 44 :: 		
; input_mask start address is: 0 (R0)
0x0E40	0xB081    SUB	SP, SP, #4
0x0E42	0xF8CDE000  STR	LR, [SP, #0]
0x0E46	0xFA1FFB80  UXTH	R11, R0
; input_mask end address is: 0 (R0)
; input_mask start address is: 44 (R11)
;__Lib_ADC_123_32F20x_16ch.c, 45 :: 		
0x0E4A	0xF3CB0100  UBFX	R1, R11, #0, #1
0x0E4E	0xB121    CBZ	R1, L_ADC_Set_Input_Channel0
;__Lib_ADC_123_32F20x_16ch.c, 46 :: 		
0x0E50	0xF04F0101  MOV	R1, #1
0x0E54	0x483F    LDR	R0, [PC, #252]
0x0E56	0xF001FC05  BL	_GPIO_Analog_Input+0
L_ADC_Set_Input_Channel0:
;__Lib_ADC_123_32F20x_16ch.c, 47 :: 		
0x0E5A	0xF3CB0140  UBFX	R1, R11, #1, #1
0x0E5E	0xB121    CBZ	R1, L_ADC_Set_Input_Channel1
;__Lib_ADC_123_32F20x_16ch.c, 48 :: 		
0x0E60	0xF04F0102  MOV	R1, #2
0x0E64	0x483B    LDR	R0, [PC, #236]
0x0E66	0xF001FBFD  BL	_GPIO_Analog_Input+0
L_ADC_Set_Input_Channel1:
;__Lib_ADC_123_32F20x_16ch.c, 49 :: 		
0x0E6A	0xF3CB0180  UBFX	R1, R11, #2, #1
0x0E6E	0xB121    CBZ	R1, L_ADC_Set_Input_Channel2
;__Lib_ADC_123_32F20x_16ch.c, 50 :: 		
0x0E70	0xF04F0104  MOV	R1, #4
0x0E74	0x4837    LDR	R0, [PC, #220]
0x0E76	0xF001FBF5  BL	_GPIO_Analog_Input+0
L_ADC_Set_Input_Channel2:
;__Lib_ADC_123_32F20x_16ch.c, 51 :: 		
0x0E7A	0xF3CB01C0  UBFX	R1, R11, #3, #1
0x0E7E	0xB121    CBZ	R1, L_ADC_Set_Input_Channel3
;__Lib_ADC_123_32F20x_16ch.c, 52 :: 		
0x0E80	0xF04F0108  MOV	R1, #8
0x0E84	0x4833    LDR	R0, [PC, #204]
0x0E86	0xF001FBED  BL	_GPIO_Analog_Input+0
L_ADC_Set_Input_Channel3:
;__Lib_ADC_123_32F20x_16ch.c, 53 :: 		
0x0E8A	0xF3CB1100  UBFX	R1, R11, #4, #1
0x0E8E	0xB121    CBZ	R1, L_ADC_Set_Input_Channel4
;__Lib_ADC_123_32F20x_16ch.c, 54 :: 		
0x0E90	0xF04F0110  MOV	R1, #16
0x0E94	0x482F    LDR	R0, [PC, #188]
0x0E96	0xF001FBE5  BL	_GPIO_Analog_Input+0
L_ADC_Set_Input_Channel4:
;__Lib_ADC_123_32F20x_16ch.c, 55 :: 		
0x0E9A	0xF3CB1140  UBFX	R1, R11, #5, #1
0x0E9E	0xB121    CBZ	R1, L_ADC_Set_Input_Channel5
;__Lib_ADC_123_32F20x_16ch.c, 56 :: 		
0x0EA0	0xF04F0120  MOV	R1, #32
0x0EA4	0x482B    LDR	R0, [PC, #172]
0x0EA6	0xF001FBDD  BL	_GPIO_Analog_Input+0
L_ADC_Set_Input_Channel5:
;__Lib_ADC_123_32F20x_16ch.c, 57 :: 		
0x0EAA	0xF3CB1180  UBFX	R1, R11, #6, #1
0x0EAE	0xB121    CBZ	R1, L_ADC_Set_Input_Channel6
;__Lib_ADC_123_32F20x_16ch.c, 58 :: 		
0x0EB0	0xF04F0140  MOV	R1, #64
0x0EB4	0x4827    LDR	R0, [PC, #156]
0x0EB6	0xF001FBD5  BL	_GPIO_Analog_Input+0
L_ADC_Set_Input_Channel6:
;__Lib_ADC_123_32F20x_16ch.c, 59 :: 		
0x0EBA	0xF3CB11C0  UBFX	R1, R11, #7, #1
0x0EBE	0xB121    CBZ	R1, L_ADC_Set_Input_Channel7
;__Lib_ADC_123_32F20x_16ch.c, 60 :: 		
0x0EC0	0xF04F0180  MOV	R1, #128
0x0EC4	0x4823    LDR	R0, [PC, #140]
0x0EC6	0xF001FBCD  BL	_GPIO_Analog_Input+0
L_ADC_Set_Input_Channel7:
;__Lib_ADC_123_32F20x_16ch.c, 61 :: 		
0x0ECA	0xF3CB2100  UBFX	R1, R11, #8, #1
0x0ECE	0xB121    CBZ	R1, L_ADC_Set_Input_Channel8
;__Lib_ADC_123_32F20x_16ch.c, 62 :: 		
0x0ED0	0xF04F0101  MOV	R1, #1
0x0ED4	0x4820    LDR	R0, [PC, #128]
0x0ED6	0xF001FBC5  BL	_GPIO_Analog_Input+0
L_ADC_Set_Input_Channel8:
;__Lib_ADC_123_32F20x_16ch.c, 63 :: 		
0x0EDA	0xF3CB2140  UBFX	R1, R11, #9, #1
0x0EDE	0xB121    CBZ	R1, L_ADC_Set_Input_Channel9
;__Lib_ADC_123_32F20x_16ch.c, 64 :: 		
0x0EE0	0xF04F0102  MOV	R1, #2
0x0EE4	0x481C    LDR	R0, [PC, #112]
0x0EE6	0xF001FBBD  BL	_GPIO_Analog_Input+0
L_ADC_Set_Input_Channel9:
;__Lib_ADC_123_32F20x_16ch.c, 65 :: 		
0x0EEA	0xF3CB2180  UBFX	R1, R11, #10, #1
0x0EEE	0xB121    CBZ	R1, L_ADC_Set_Input_Channel10
;__Lib_ADC_123_32F20x_16ch.c, 66 :: 		
0x0EF0	0xF04F0101  MOV	R1, #1
0x0EF4	0x4819    LDR	R0, [PC, #100]
0x0EF6	0xF001FBB5  BL	_GPIO_Analog_Input+0
L_ADC_Set_Input_Channel10:
;__Lib_ADC_123_32F20x_16ch.c, 67 :: 		
0x0EFA	0xF3CB21C0  UBFX	R1, R11, #11, #1
0x0EFE	0xB121    CBZ	R1, L_ADC_Set_Input_Channel11
;__Lib_ADC_123_32F20x_16ch.c, 68 :: 		
0x0F00	0xF04F0102  MOV	R1, #2
0x0F04	0x4815    LDR	R0, [PC, #84]
0x0F06	0xF001FBAD  BL	_GPIO_Analog_Input+0
L_ADC_Set_Input_Channel11:
;__Lib_ADC_123_32F20x_16ch.c, 69 :: 		
0x0F0A	0xF3CB3100  UBFX	R1, R11, #12, #1
0x0F0E	0xB121    CBZ	R1, L_ADC_Set_Input_Channel12
;__Lib_ADC_123_32F20x_16ch.c, 70 :: 		
0x0F10	0xF04F0104  MOV	R1, #4
0x0F14	0x4811    LDR	R0, [PC, #68]
0x0F16	0xF001FBA5  BL	_GPIO_Analog_Input+0
L_ADC_Set_Input_Channel12:
;__Lib_ADC_123_32F20x_16ch.c, 71 :: 		
0x0F1A	0xF3CB3140  UBFX	R1, R11, #13, #1
0x0F1E	0xB121    CBZ	R1, L_ADC_Set_Input_Channel13
;__Lib_ADC_123_32F20x_16ch.c, 72 :: 		
0x0F20	0xF04F0108  MOV	R1, #8
0x0F24	0x480D    LDR	R0, [PC, #52]
0x0F26	0xF001FB9D  BL	_GPIO_Analog_Input+0
L_ADC_Set_Input_Channel13:
;__Lib_ADC_123_32F20x_16ch.c, 73 :: 		
0x0F2A	0xF3CB3180  UBFX	R1, R11, #14, #1
0x0F2E	0xB121    CBZ	R1, L_ADC_Set_Input_Channel14
;__Lib_ADC_123_32F20x_16ch.c, 74 :: 		
0x0F30	0xF04F0110  MOV	R1, #16
0x0F34	0x4809    LDR	R0, [PC, #36]
0x0F36	0xF001FB95  BL	_GPIO_Analog_Input+0
L_ADC_Set_Input_Channel14:
;__Lib_ADC_123_32F20x_16ch.c, 75 :: 		
0x0F3A	0xF3CB31C0  UBFX	R1, R11, #15, #1
; input_mask end address is: 44 (R11)
0x0F3E	0xB121    CBZ	R1, L_ADC_Set_Input_Channel15
;__Lib_ADC_123_32F20x_16ch.c, 76 :: 		
0x0F40	0xF04F0120  MOV	R1, #32
0x0F44	0x4805    LDR	R0, [PC, #20]
0x0F46	0xF001FB8D  BL	_GPIO_Analog_Input+0
L_ADC_Set_Input_Channel15:
;__Lib_ADC_123_32F20x_16ch.c, 77 :: 		
L_end_ADC_Set_Input_Channel:
0x0F4A	0xF8DDE000  LDR	LR, [SP, #0]
0x0F4E	0xB001    ADD	SP, SP, #4
0x0F50	0x4770    BX	LR
0x0F52	0xBF00    NOP
0x0F54	0x00004002  	GPIOA_BASE+0
0x0F58	0x04004002  	GPIOB_BASE+0
0x0F5C	0x08004002  	GPIOC_BASE+0
; end of _ADC_Set_Input_Channel
_ADC2_Get_Sample:
;__Lib_ADC_123_32F20x_16ch.c, 246 :: 		
; channel start address is: 0 (R0)
0x0F60	0xB081    SUB	SP, SP, #4
0x0F62	0xF8CDE000  STR	LR, [SP, #0]
; channel end address is: 0 (R0)
; channel start address is: 0 (R0)
;__Lib_ADC_123_32F20x_16ch.c, 247 :: 		
0x0F66	0xB281    UXTH	R1, R0
; channel end address is: 0 (R0)
0x0F68	0x4803    LDR	R0, [PC, #12]
0x0F6A	0xF7FFFB7D  BL	__Lib_ADC_123_32F20x_16ch_ADCx_Get_Sample+0
;__Lib_ADC_123_32F20x_16ch.c, 254 :: 		
L_end_ADC2_Get_Sample:
0x0F6E	0xF8DDE000  LDR	LR, [SP, #0]
0x0F72	0xB001    ADD	SP, SP, #4
0x0F74	0x4770    BX	LR
0x0F76	0xBF00    NOP
0x0F78	0x21004001  	ADC2_SR+0
; end of _ADC2_Get_Sample
__Lib_ADC_123_32F20x_16ch_ADCx_Get_Sample:
;__Lib_ADC_123_32F20x_16ch.c, 151 :: 		
; channel start address is: 4 (R1)
; base start address is: 0 (R0)
0x0668	0xB081    SUB	SP, SP, #4
0x066A	0xF8CDE000  STR	LR, [SP, #0]
; channel end address is: 4 (R1)
; base end address is: 0 (R0)
; base start address is: 0 (R0)
; channel start address is: 4 (R1)
;__Lib_ADC_123_32F20x_16ch.c, 152 :: 		
0x066E	0xF2000434  ADDW	R4, R0, #52
0x0672	0x090A    LSRS	R2, R1, #4
0x0674	0xB292    UXTH	R2, R2
0x0676	0xB293    UXTH	R3, R2
0x0678	0x6822    LDR	R2, [R4, #0]
0x067A	0xF3631204  BFI	R2, R3, #4, #1
0x067E	0x6022    STR	R2, [R4, #0]
;__Lib_ADC_123_32F20x_16ch.c, 153 :: 		
0x0680	0xF2000434  ADDW	R4, R0, #52
0x0684	0x08CA    LSRS	R2, R1, #3
0x0686	0xB292    UXTH	R2, R2
0x0688	0xB293    UXTH	R3, R2
0x068A	0x6822    LDR	R2, [R4, #0]
0x068C	0xF36302C3  BFI	R2, R3, #3, #1
0x0690	0x6022    STR	R2, [R4, #0]
;__Lib_ADC_123_32F20x_16ch.c, 154 :: 		
0x0692	0xF2000434  ADDW	R4, R0, #52
0x0696	0x088A    LSRS	R2, R1, #2
0x0698	0xB292    UXTH	R2, R2
0x069A	0xB293    UXTH	R3, R2
0x069C	0x6822    LDR	R2, [R4, #0]
0x069E	0xF3630282  BFI	R2, R3, #2, #1
0x06A2	0x6022    STR	R2, [R4, #0]
;__Lib_ADC_123_32F20x_16ch.c, 155 :: 		
0x06A4	0xF2000434  ADDW	R4, R0, #52
0x06A8	0x084A    LSRS	R2, R1, #1
0x06AA	0xB292    UXTH	R2, R2
0x06AC	0xB293    UXTH	R3, R2
0x06AE	0x6822    LDR	R2, [R4, #0]
0x06B0	0xF3630241  BFI	R2, R3, #1, #1
0x06B4	0x6022    STR	R2, [R4, #0]
;__Lib_ADC_123_32F20x_16ch.c, 156 :: 		
0x06B6	0xF2000434  ADDW	R4, R0, #52
0x06BA	0xB28B    UXTH	R3, R1
; channel end address is: 4 (R1)
0x06BC	0x6822    LDR	R2, [R4, #0]
0x06BE	0xF3630200  BFI	R2, R3, #0, #1
0x06C2	0x6022    STR	R2, [R4, #0]
;__Lib_ADC_123_32F20x_16ch.c, 157 :: 		
0x06C4	0xF2000408  ADDW	R4, R0, #8
0x06C8	0x2301    MOVS	R3, #1
0x06CA	0x6822    LDR	R2, [R4, #0]
0x06CC	0xF363729E  BFI	R2, R3, #30, #1
0x06D0	0x6022    STR	R2, [R4, #0]
;__Lib_ADC_123_32F20x_16ch.c, 158 :: 		
0x06D2	0xF7FFFF4D  BL	_Delay_1us+0
; base end address is: 0 (R0)
;__Lib_ADC_123_32F20x_16ch.c, 159 :: 		
L___Lib_ADC_123_32F20x_16ch_ADCx_Get_Sample22:
; base start address is: 0 (R0)
0x06D6	0x6803    LDR	R3, [R0, #0]
0x06D8	0xF3C30240  UBFX	R2, R3, #1, #1
0x06DC	0xB902    CBNZ	R2, L___Lib_ADC_123_32F20x_16ch_ADCx_Get_Sample23
0x06DE	0xE7FA    B	L___Lib_ADC_123_32F20x_16ch_ADCx_Get_Sample22
L___Lib_ADC_123_32F20x_16ch_ADCx_Get_Sample23:
;__Lib_ADC_123_32F20x_16ch.c, 160 :: 		
0x06E0	0xF200024C  ADDW	R2, R0, #76
; base end address is: 0 (R0)
0x06E4	0x6812    LDR	R2, [R2, #0]
0x06E6	0xB290    UXTH	R0, R2
;__Lib_ADC_123_32F20x_16ch.c, 161 :: 		
L_end_ADCx_Get_Sample:
0x06E8	0xF8DDE000  LDR	LR, [SP, #0]
0x06EC	0xB001    ADD	SP, SP, #4
0x06EE	0x4770    BX	LR
; end of __Lib_ADC_123_32F20x_16ch_ADCx_Get_Sample
_Delay_1us:
;__Lib_Delays.c, 13 :: 		void Delay_1us() {
;__Lib_Delays.c, 14 :: 		Delay_us(1);
0x0570	0xF2400736  MOVW	R7, #54
0x0574	0xF2C00700  MOVT	R7, #0
L_Delay_1us0:
0x0578	0x1E7F    SUBS	R7, R7, #1
0x057A	0xD1FD    BNE	L_Delay_1us0
0x057C	0xBF00    NOP
0x057E	0xBF00    NOP
0x0580	0xBF00    NOP
0x0582	0xBF00    NOP
0x0584	0xBF00    NOP
;__Lib_Delays.c, 15 :: 		}
L_end_Delay_1us:
0x0586	0x4770    BX	LR
; end of _Delay_1us
_uart4Battery1Level4:
;uartSend.c, 237 :: 		void uart4Battery1Level4(){
0x1910	0xB081    SUB	SP, SP, #4
0x1912	0xF8CDE000  STR	LR, [SP, #0]
;uartSend.c, 239 :: 		UART4_Write(0x5A);
0x1916	0x205A    MOVS	R0, #90
0x1918	0xF7FFF836  BL	_UART4_Write+0
;uartSend.c, 240 :: 		UART4_Write(0xA5);
0x191C	0x20A5    MOVS	R0, #165
0x191E	0xF7FFF833  BL	_UART4_Write+0
;uartSend.c, 241 :: 		UART4_Write(0x05);
0x1922	0x2005    MOVS	R0, #5
0x1924	0xF7FFF830  BL	_UART4_Write+0
;uartSend.c, 242 :: 		UART4_Write(0x82);
0x1928	0x2082    MOVS	R0, #130
0x192A	0xF7FFF82D  BL	_UART4_Write+0
;uartSend.c, 243 :: 		UART4_Write(0x51);
0x192E	0x2051    MOVS	R0, #81
0x1930	0xF7FFF82A  BL	_UART4_Write+0
;uartSend.c, 244 :: 		UART4_Write(0x25);
0x1934	0x2025    MOVS	R0, #37
0x1936	0xF7FFF827  BL	_UART4_Write+0
;uartSend.c, 245 :: 		UART4_Write(0x00);
0x193A	0x2000    MOVS	R0, #0
0x193C	0xF7FFF824  BL	_UART4_Write+0
;uartSend.c, 246 :: 		UART4_Write(0x01);
0x1940	0x2001    MOVS	R0, #1
0x1942	0xF7FFF821  BL	_UART4_Write+0
;uartSend.c, 248 :: 		UART4_Write(0x5A);
0x1946	0x205A    MOVS	R0, #90
0x1948	0xF7FFF81E  BL	_UART4_Write+0
;uartSend.c, 249 :: 		UART4_Write(0xA5);
0x194C	0x20A5    MOVS	R0, #165
0x194E	0xF7FFF81B  BL	_UART4_Write+0
;uartSend.c, 250 :: 		UART4_Write(0x05);
0x1952	0x2005    MOVS	R0, #5
0x1954	0xF7FFF818  BL	_UART4_Write+0
;uartSend.c, 251 :: 		UART4_Write(0x82);
0x1958	0x2082    MOVS	R0, #130
0x195A	0xF7FFF815  BL	_UART4_Write+0
;uartSend.c, 252 :: 		UART4_Write(0x51);
0x195E	0x2051    MOVS	R0, #81
0x1960	0xF7FFF812  BL	_UART4_Write+0
;uartSend.c, 253 :: 		UART4_Write(0x45);
0x1964	0x2045    MOVS	R0, #69
0x1966	0xF7FFF80F  BL	_UART4_Write+0
;uartSend.c, 254 :: 		UART4_Write(0x00);
0x196A	0x2000    MOVS	R0, #0
0x196C	0xF7FFF80C  BL	_UART4_Write+0
;uartSend.c, 255 :: 		UART4_Write(0x03);
0x1970	0x2003    MOVS	R0, #3
0x1972	0xF7FFF809  BL	_UART4_Write+0
;uartSend.c, 257 :: 		UART4_Write(0x5A);
0x1976	0x205A    MOVS	R0, #90
0x1978	0xF7FFF806  BL	_UART4_Write+0
;uartSend.c, 258 :: 		UART4_Write(0xA5);
0x197C	0x20A5    MOVS	R0, #165
0x197E	0xF7FFF803  BL	_UART4_Write+0
;uartSend.c, 259 :: 		UART4_Write(0x05);
0x1982	0x2005    MOVS	R0, #5
0x1984	0xF7FFF800  BL	_UART4_Write+0
;uartSend.c, 260 :: 		UART4_Write(0x82);
0x1988	0x2082    MOVS	R0, #130
0x198A	0xF7FEFFFD  BL	_UART4_Write+0
;uartSend.c, 261 :: 		UART4_Write(0x51);
0x198E	0x2051    MOVS	R0, #81
0x1990	0xF7FEFFFA  BL	_UART4_Write+0
;uartSend.c, 262 :: 		UART4_Write(0x65);
0x1994	0x2065    MOVS	R0, #101
0x1996	0xF7FEFFF7  BL	_UART4_Write+0
;uartSend.c, 263 :: 		UART4_Write(0x00);
0x199A	0x2000    MOVS	R0, #0
0x199C	0xF7FEFFF4  BL	_UART4_Write+0
;uartSend.c, 264 :: 		UART4_Write(0x05);
0x19A0	0x2005    MOVS	R0, #5
0x19A2	0xF7FEFFF1  BL	_UART4_Write+0
;uartSend.c, 266 :: 		UART4_Write(0x5A);
0x19A6	0x205A    MOVS	R0, #90
0x19A8	0xF7FEFFEE  BL	_UART4_Write+0
;uartSend.c, 267 :: 		UART4_Write(0xA5);
0x19AC	0x20A5    MOVS	R0, #165
0x19AE	0xF7FEFFEB  BL	_UART4_Write+0
;uartSend.c, 268 :: 		UART4_Write(0x05);
0x19B2	0x2005    MOVS	R0, #5
0x19B4	0xF7FEFFE8  BL	_UART4_Write+0
;uartSend.c, 269 :: 		UART4_Write(0x82);
0x19B8	0x2082    MOVS	R0, #130
0x19BA	0xF7FEFFE5  BL	_UART4_Write+0
;uartSend.c, 270 :: 		UART4_Write(0x51);
0x19BE	0x2051    MOVS	R0, #81
0x19C0	0xF7FEFFE2  BL	_UART4_Write+0
;uartSend.c, 271 :: 		UART4_Write(0x85);
0x19C4	0x2085    MOVS	R0, #133
0x19C6	0xF7FEFFDF  BL	_UART4_Write+0
;uartSend.c, 272 :: 		UART4_Write(0x00);
0x19CA	0x2000    MOVS	R0, #0
0x19CC	0xF7FEFFDC  BL	_UART4_Write+0
;uartSend.c, 273 :: 		UART4_Write(0x07);
0x19D0	0x2007    MOVS	R0, #7
0x19D2	0xF7FEFFD9  BL	_UART4_Write+0
;uartSend.c, 274 :: 		}
L_end_uart4Battery1Level4:
0x19D6	0xF8DDE000  LDR	LR, [SP, #0]
0x19DA	0xB001    ADD	SP, SP, #4
0x19DC	0x4770    BX	LR
; end of _uart4Battery1Level4
_uart4Battery1Level3:
;uartSend.c, 275 :: 		void uart4Battery1Level3(){
0x1A28	0xB081    SUB	SP, SP, #4
0x1A2A	0xF8CDE000  STR	LR, [SP, #0]
;uartSend.c, 277 :: 		UART4_Write(0x5A);
0x1A2E	0x205A    MOVS	R0, #90
0x1A30	0xF7FEFFAA  BL	_UART4_Write+0
;uartSend.c, 278 :: 		UART4_Write(0xA5);
0x1A34	0x20A5    MOVS	R0, #165
0x1A36	0xF7FEFFA7  BL	_UART4_Write+0
;uartSend.c, 279 :: 		UART4_Write(0x05);
0x1A3A	0x2005    MOVS	R0, #5
0x1A3C	0xF7FEFFA4  BL	_UART4_Write+0
;uartSend.c, 280 :: 		UART4_Write(0x82);
0x1A40	0x2082    MOVS	R0, #130
0x1A42	0xF7FEFFA1  BL	_UART4_Write+0
;uartSend.c, 281 :: 		UART4_Write(0x51);
0x1A46	0x2051    MOVS	R0, #81
0x1A48	0xF7FEFF9E  BL	_UART4_Write+0
;uartSend.c, 282 :: 		UART4_Write(0x25);
0x1A4C	0x2025    MOVS	R0, #37
0x1A4E	0xF7FEFF9B  BL	_UART4_Write+0
;uartSend.c, 283 :: 		UART4_Write(0x00);
0x1A52	0x2000    MOVS	R0, #0
0x1A54	0xF7FEFF98  BL	_UART4_Write+0
;uartSend.c, 284 :: 		UART4_Write(0x00);
0x1A58	0x2000    MOVS	R0, #0
0x1A5A	0xF7FEFF95  BL	_UART4_Write+0
;uartSend.c, 286 :: 		UART4_Write(0x5A);
0x1A5E	0x205A    MOVS	R0, #90
0x1A60	0xF7FEFF92  BL	_UART4_Write+0
;uartSend.c, 287 :: 		UART4_Write(0xA5);
0x1A64	0x20A5    MOVS	R0, #165
0x1A66	0xF7FEFF8F  BL	_UART4_Write+0
;uartSend.c, 288 :: 		UART4_Write(0x05);
0x1A6A	0x2005    MOVS	R0, #5
0x1A6C	0xF7FEFF8C  BL	_UART4_Write+0
;uartSend.c, 289 :: 		UART4_Write(0x82);
0x1A70	0x2082    MOVS	R0, #130
0x1A72	0xF7FEFF89  BL	_UART4_Write+0
;uartSend.c, 290 :: 		UART4_Write(0x51);
0x1A76	0x2051    MOVS	R0, #81
0x1A78	0xF7FEFF86  BL	_UART4_Write+0
;uartSend.c, 291 :: 		UART4_Write(0x45);
0x1A7C	0x2045    MOVS	R0, #69
0x1A7E	0xF7FEFF83  BL	_UART4_Write+0
;uartSend.c, 292 :: 		UART4_Write(0x00);
0x1A82	0x2000    MOVS	R0, #0
0x1A84	0xF7FEFF80  BL	_UART4_Write+0
;uartSend.c, 293 :: 		UART4_Write(0x03);
0x1A88	0x2003    MOVS	R0, #3
0x1A8A	0xF7FEFF7D  BL	_UART4_Write+0
;uartSend.c, 295 :: 		UART4_Write(0x5A);
0x1A8E	0x205A    MOVS	R0, #90
0x1A90	0xF7FEFF7A  BL	_UART4_Write+0
;uartSend.c, 296 :: 		UART4_Write(0xA5);
0x1A94	0x20A5    MOVS	R0, #165
0x1A96	0xF7FEFF77  BL	_UART4_Write+0
;uartSend.c, 297 :: 		UART4_Write(0x05);
0x1A9A	0x2005    MOVS	R0, #5
0x1A9C	0xF7FEFF74  BL	_UART4_Write+0
;uartSend.c, 298 :: 		UART4_Write(0x82);
0x1AA0	0x2082    MOVS	R0, #130
0x1AA2	0xF7FEFF71  BL	_UART4_Write+0
;uartSend.c, 299 :: 		UART4_Write(0x51);
0x1AA6	0x2051    MOVS	R0, #81
0x1AA8	0xF7FEFF6E  BL	_UART4_Write+0
;uartSend.c, 300 :: 		UART4_Write(0x65);
0x1AAC	0x2065    MOVS	R0, #101
0x1AAE	0xF7FEFF6B  BL	_UART4_Write+0
;uartSend.c, 301 :: 		UART4_Write(0x00);
0x1AB2	0x2000    MOVS	R0, #0
0x1AB4	0xF7FEFF68  BL	_UART4_Write+0
;uartSend.c, 302 :: 		UART4_Write(0x05);
0x1AB8	0x2005    MOVS	R0, #5
0x1ABA	0xF7FEFF65  BL	_UART4_Write+0
;uartSend.c, 304 :: 		UART4_Write(0x5A);
0x1ABE	0x205A    MOVS	R0, #90
0x1AC0	0xF7FEFF62  BL	_UART4_Write+0
;uartSend.c, 305 :: 		UART4_Write(0xA5);
0x1AC4	0x20A5    MOVS	R0, #165
0x1AC6	0xF7FEFF5F  BL	_UART4_Write+0
;uartSend.c, 306 :: 		UART4_Write(0x05);
0x1ACA	0x2005    MOVS	R0, #5
0x1ACC	0xF7FEFF5C  BL	_UART4_Write+0
;uartSend.c, 307 :: 		UART4_Write(0x82);
0x1AD0	0x2082    MOVS	R0, #130
0x1AD2	0xF7FEFF59  BL	_UART4_Write+0
;uartSend.c, 308 :: 		UART4_Write(0x51);
0x1AD6	0x2051    MOVS	R0, #81
0x1AD8	0xF7FEFF56  BL	_UART4_Write+0
;uartSend.c, 309 :: 		UART4_Write(0x85);
0x1ADC	0x2085    MOVS	R0, #133
0x1ADE	0xF7FEFF53  BL	_UART4_Write+0
;uartSend.c, 310 :: 		UART4_Write(0x00);
0x1AE2	0x2000    MOVS	R0, #0
0x1AE4	0xF7FEFF50  BL	_UART4_Write+0
;uartSend.c, 311 :: 		UART4_Write(0x07);
0x1AE8	0x2007    MOVS	R0, #7
0x1AEA	0xF7FEFF4D  BL	_UART4_Write+0
;uartSend.c, 312 :: 		}
L_end_uart4Battery1Level3:
0x1AEE	0xF8DDE000  LDR	LR, [SP, #0]
0x1AF2	0xB001    ADD	SP, SP, #4
0x1AF4	0x4770    BX	LR
; end of _uart4Battery1Level3
_uart4Battery1Level2:
;uartSend.c, 313 :: 		void uart4Battery1Level2(){
0x16EC	0xB081    SUB	SP, SP, #4
0x16EE	0xF8CDE000  STR	LR, [SP, #0]
;uartSend.c, 315 :: 		UART4_Write(0x5A);
0x16F2	0x205A    MOVS	R0, #90
0x16F4	0xF7FFF948  BL	_UART4_Write+0
;uartSend.c, 316 :: 		UART4_Write(0xA5);
0x16F8	0x20A5    MOVS	R0, #165
0x16FA	0xF7FFF945  BL	_UART4_Write+0
;uartSend.c, 317 :: 		UART4_Write(0x05);
0x16FE	0x2005    MOVS	R0, #5
0x1700	0xF7FFF942  BL	_UART4_Write+0
;uartSend.c, 318 :: 		UART4_Write(0x82);
0x1704	0x2082    MOVS	R0, #130
0x1706	0xF7FFF93F  BL	_UART4_Write+0
;uartSend.c, 319 :: 		UART4_Write(0x51);
0x170A	0x2051    MOVS	R0, #81
0x170C	0xF7FFF93C  BL	_UART4_Write+0
;uartSend.c, 320 :: 		UART4_Write(0x25);
0x1710	0x2025    MOVS	R0, #37
0x1712	0xF7FFF939  BL	_UART4_Write+0
;uartSend.c, 321 :: 		UART4_Write(0x00);
0x1716	0x2000    MOVS	R0, #0
0x1718	0xF7FFF936  BL	_UART4_Write+0
;uartSend.c, 322 :: 		UART4_Write(0x00);
0x171C	0x2000    MOVS	R0, #0
0x171E	0xF7FFF933  BL	_UART4_Write+0
;uartSend.c, 324 :: 		UART4_Write(0x5A);
0x1722	0x205A    MOVS	R0, #90
0x1724	0xF7FFF930  BL	_UART4_Write+0
;uartSend.c, 325 :: 		UART4_Write(0xA5);
0x1728	0x20A5    MOVS	R0, #165
0x172A	0xF7FFF92D  BL	_UART4_Write+0
;uartSend.c, 326 :: 		UART4_Write(0x05);
0x172E	0x2005    MOVS	R0, #5
0x1730	0xF7FFF92A  BL	_UART4_Write+0
;uartSend.c, 327 :: 		UART4_Write(0x82);
0x1734	0x2082    MOVS	R0, #130
0x1736	0xF7FFF927  BL	_UART4_Write+0
;uartSend.c, 328 :: 		UART4_Write(0x51);
0x173A	0x2051    MOVS	R0, #81
0x173C	0xF7FFF924  BL	_UART4_Write+0
;uartSend.c, 329 :: 		UART4_Write(0x45);
0x1740	0x2045    MOVS	R0, #69
0x1742	0xF7FFF921  BL	_UART4_Write+0
;uartSend.c, 330 :: 		UART4_Write(0x00);
0x1746	0x2000    MOVS	R0, #0
0x1748	0xF7FFF91E  BL	_UART4_Write+0
;uartSend.c, 331 :: 		UART4_Write(0x02);
0x174C	0x2002    MOVS	R0, #2
0x174E	0xF7FFF91B  BL	_UART4_Write+0
;uartSend.c, 333 :: 		UART4_Write(0x5A);
0x1752	0x205A    MOVS	R0, #90
0x1754	0xF7FFF918  BL	_UART4_Write+0
;uartSend.c, 334 :: 		UART4_Write(0xA5);
0x1758	0x20A5    MOVS	R0, #165
0x175A	0xF7FFF915  BL	_UART4_Write+0
;uartSend.c, 335 :: 		UART4_Write(0x05);
0x175E	0x2005    MOVS	R0, #5
0x1760	0xF7FFF912  BL	_UART4_Write+0
;uartSend.c, 336 :: 		UART4_Write(0x82);
0x1764	0x2082    MOVS	R0, #130
0x1766	0xF7FFF90F  BL	_UART4_Write+0
;uartSend.c, 337 :: 		UART4_Write(0x51);
0x176A	0x2051    MOVS	R0, #81
0x176C	0xF7FFF90C  BL	_UART4_Write+0
;uartSend.c, 338 :: 		UART4_Write(0x65);
0x1770	0x2065    MOVS	R0, #101
0x1772	0xF7FFF909  BL	_UART4_Write+0
;uartSend.c, 339 :: 		UART4_Write(0x00);
0x1776	0x2000    MOVS	R0, #0
0x1778	0xF7FFF906  BL	_UART4_Write+0
;uartSend.c, 340 :: 		UART4_Write(0x05);
0x177C	0x2005    MOVS	R0, #5
0x177E	0xF7FFF903  BL	_UART4_Write+0
;uartSend.c, 342 :: 		UART4_Write(0x5A);
0x1782	0x205A    MOVS	R0, #90
0x1784	0xF7FFF900  BL	_UART4_Write+0
;uartSend.c, 343 :: 		UART4_Write(0xA5);
0x1788	0x20A5    MOVS	R0, #165
0x178A	0xF7FFF8FD  BL	_UART4_Write+0
;uartSend.c, 344 :: 		UART4_Write(0x05);
0x178E	0x2005    MOVS	R0, #5
0x1790	0xF7FFF8FA  BL	_UART4_Write+0
;uartSend.c, 345 :: 		UART4_Write(0x82);
0x1794	0x2082    MOVS	R0, #130
0x1796	0xF7FFF8F7  BL	_UART4_Write+0
;uartSend.c, 346 :: 		UART4_Write(0x51);
0x179A	0x2051    MOVS	R0, #81
0x179C	0xF7FFF8F4  BL	_UART4_Write+0
;uartSend.c, 347 :: 		UART4_Write(0x85);
0x17A0	0x2085    MOVS	R0, #133
0x17A2	0xF7FFF8F1  BL	_UART4_Write+0
;uartSend.c, 348 :: 		UART4_Write(0x00);
0x17A6	0x2000    MOVS	R0, #0
0x17A8	0xF7FFF8EE  BL	_UART4_Write+0
;uartSend.c, 349 :: 		UART4_Write(0x07);
0x17AC	0x2007    MOVS	R0, #7
0x17AE	0xF7FFF8EB  BL	_UART4_Write+0
;uartSend.c, 350 :: 		}
L_end_uart4Battery1Level2:
0x17B2	0xF8DDE000  LDR	LR, [SP, #0]
0x17B6	0xB001    ADD	SP, SP, #4
0x17B8	0x4770    BX	LR
; end of _uart4Battery1Level2
_uart4Battery1Level1:
;uartSend.c, 351 :: 		void uart4Battery1Level1(){
0x0CA0	0xB081    SUB	SP, SP, #4
0x0CA2	0xF8CDE000  STR	LR, [SP, #0]
;uartSend.c, 353 :: 		UART4_Write(0x5A);
0x0CA6	0x205A    MOVS	R0, #90
0x0CA8	0xF7FFFE6E  BL	_UART4_Write+0
;uartSend.c, 354 :: 		UART4_Write(0xA5);
0x0CAC	0x20A5    MOVS	R0, #165
0x0CAE	0xF7FFFE6B  BL	_UART4_Write+0
;uartSend.c, 355 :: 		UART4_Write(0x05);
0x0CB2	0x2005    MOVS	R0, #5
0x0CB4	0xF7FFFE68  BL	_UART4_Write+0
;uartSend.c, 356 :: 		UART4_Write(0x82);
0x0CB8	0x2082    MOVS	R0, #130
0x0CBA	0xF7FFFE65  BL	_UART4_Write+0
;uartSend.c, 357 :: 		UART4_Write(0x51);
0x0CBE	0x2051    MOVS	R0, #81
0x0CC0	0xF7FFFE62  BL	_UART4_Write+0
;uartSend.c, 358 :: 		UART4_Write(0x25);
0x0CC4	0x2025    MOVS	R0, #37
0x0CC6	0xF7FFFE5F  BL	_UART4_Write+0
;uartSend.c, 359 :: 		UART4_Write(0x00);
0x0CCA	0x2000    MOVS	R0, #0
0x0CCC	0xF7FFFE5C  BL	_UART4_Write+0
;uartSend.c, 360 :: 		UART4_Write(0x00);
0x0CD0	0x2000    MOVS	R0, #0
0x0CD2	0xF7FFFE59  BL	_UART4_Write+0
;uartSend.c, 362 :: 		UART4_Write(0x5A);
0x0CD6	0x205A    MOVS	R0, #90
0x0CD8	0xF7FFFE56  BL	_UART4_Write+0
;uartSend.c, 363 :: 		UART4_Write(0xA5);
0x0CDC	0x20A5    MOVS	R0, #165
0x0CDE	0xF7FFFE53  BL	_UART4_Write+0
;uartSend.c, 364 :: 		UART4_Write(0x05);
0x0CE2	0x2005    MOVS	R0, #5
0x0CE4	0xF7FFFE50  BL	_UART4_Write+0
;uartSend.c, 365 :: 		UART4_Write(0x82);
0x0CE8	0x2082    MOVS	R0, #130
0x0CEA	0xF7FFFE4D  BL	_UART4_Write+0
;uartSend.c, 366 :: 		UART4_Write(0x51);
0x0CEE	0x2051    MOVS	R0, #81
0x0CF0	0xF7FFFE4A  BL	_UART4_Write+0
;uartSend.c, 367 :: 		UART4_Write(0x45);
0x0CF4	0x2045    MOVS	R0, #69
0x0CF6	0xF7FFFE47  BL	_UART4_Write+0
;uartSend.c, 368 :: 		UART4_Write(0x00);
0x0CFA	0x2000    MOVS	R0, #0
0x0CFC	0xF7FFFE44  BL	_UART4_Write+0
;uartSend.c, 369 :: 		UART4_Write(0x02);
0x0D00	0x2002    MOVS	R0, #2
0x0D02	0xF7FFFE41  BL	_UART4_Write+0
;uartSend.c, 371 :: 		UART4_Write(0x5A);
0x0D06	0x205A    MOVS	R0, #90
0x0D08	0xF7FFFE3E  BL	_UART4_Write+0
;uartSend.c, 372 :: 		UART4_Write(0xA5);
0x0D0C	0x20A5    MOVS	R0, #165
0x0D0E	0xF7FFFE3B  BL	_UART4_Write+0
;uartSend.c, 373 :: 		UART4_Write(0x05);
0x0D12	0x2005    MOVS	R0, #5
0x0D14	0xF7FFFE38  BL	_UART4_Write+0
;uartSend.c, 374 :: 		UART4_Write(0x82);
0x0D18	0x2082    MOVS	R0, #130
0x0D1A	0xF7FFFE35  BL	_UART4_Write+0
;uartSend.c, 375 :: 		UART4_Write(0x51);
0x0D1E	0x2051    MOVS	R0, #81
0x0D20	0xF7FFFE32  BL	_UART4_Write+0
;uartSend.c, 376 :: 		UART4_Write(0x65);
0x0D24	0x2065    MOVS	R0, #101
0x0D26	0xF7FFFE2F  BL	_UART4_Write+0
;uartSend.c, 377 :: 		UART4_Write(0x00);
0x0D2A	0x2000    MOVS	R0, #0
0x0D2C	0xF7FFFE2C  BL	_UART4_Write+0
;uartSend.c, 378 :: 		UART4_Write(0x04);
0x0D30	0x2004    MOVS	R0, #4
0x0D32	0xF7FFFE29  BL	_UART4_Write+0
;uartSend.c, 380 :: 		UART4_Write(0x5A);
0x0D36	0x205A    MOVS	R0, #90
0x0D38	0xF7FFFE26  BL	_UART4_Write+0
;uartSend.c, 381 :: 		UART4_Write(0xA5);
0x0D3C	0x20A5    MOVS	R0, #165
0x0D3E	0xF7FFFE23  BL	_UART4_Write+0
;uartSend.c, 382 :: 		UART4_Write(0x05);
0x0D42	0x2005    MOVS	R0, #5
0x0D44	0xF7FFFE20  BL	_UART4_Write+0
;uartSend.c, 383 :: 		UART4_Write(0x82);
0x0D48	0x2082    MOVS	R0, #130
0x0D4A	0xF7FFFE1D  BL	_UART4_Write+0
;uartSend.c, 384 :: 		UART4_Write(0x51);
0x0D4E	0x2051    MOVS	R0, #81
0x0D50	0xF7FFFE1A  BL	_UART4_Write+0
;uartSend.c, 385 :: 		UART4_Write(0x85);
0x0D54	0x2085    MOVS	R0, #133
0x0D56	0xF7FFFE17  BL	_UART4_Write+0
;uartSend.c, 386 :: 		UART4_Write(0x00);
0x0D5A	0x2000    MOVS	R0, #0
0x0D5C	0xF7FFFE14  BL	_UART4_Write+0
;uartSend.c, 387 :: 		UART4_Write(0x10);
0x0D60	0x2010    MOVS	R0, #16
0x0D62	0xF7FFFE11  BL	_UART4_Write+0
;uartSend.c, 388 :: 		}
L_end_uart4Battery1Level1:
0x0D66	0xF8DDE000  LDR	LR, [SP, #0]
0x0D6A	0xB001    ADD	SP, SP, #4
0x0D6C	0x4770    BX	LR
; end of _uart4Battery1Level1
_uart4Battery2Level4:
;uartSend.c, 434 :: 		void uart4Battery2Level4(){
0x0D70	0xB081    SUB	SP, SP, #4
0x0D72	0xF8CDE000  STR	LR, [SP, #0]
;uartSend.c, 436 :: 		UART4_Write(0x5A);
0x0D76	0x205A    MOVS	R0, #90
0x0D78	0xF7FFFE06  BL	_UART4_Write+0
;uartSend.c, 437 :: 		UART4_Write(0xA5);
0x0D7C	0x20A5    MOVS	R0, #165
0x0D7E	0xF7FFFE03  BL	_UART4_Write+0
;uartSend.c, 438 :: 		UART4_Write(0x05);
0x0D82	0x2005    MOVS	R0, #5
0x0D84	0xF7FFFE00  BL	_UART4_Write+0
;uartSend.c, 439 :: 		UART4_Write(0x82);
0x0D88	0x2082    MOVS	R0, #130
0x0D8A	0xF7FFFDFD  BL	_UART4_Write+0
;uartSend.c, 440 :: 		UART4_Write(0x51);
0x0D8E	0x2051    MOVS	R0, #81
0x0D90	0xF7FFFDFA  BL	_UART4_Write+0
;uartSend.c, 441 :: 		UART4_Write(0xA5);
0x0D94	0x20A5    MOVS	R0, #165
0x0D96	0xF7FFFDF7  BL	_UART4_Write+0
;uartSend.c, 442 :: 		UART4_Write(0x00);
0x0D9A	0x2000    MOVS	R0, #0
0x0D9C	0xF7FFFDF4  BL	_UART4_Write+0
;uartSend.c, 443 :: 		UART4_Write(0x09);
0x0DA0	0x2009    MOVS	R0, #9
0x0DA2	0xF7FFFDF1  BL	_UART4_Write+0
;uartSend.c, 445 :: 		UART4_Write(0x5A);
0x0DA6	0x205A    MOVS	R0, #90
0x0DA8	0xF7FFFDEE  BL	_UART4_Write+0
;uartSend.c, 446 :: 		UART4_Write(0xA5);
0x0DAC	0x20A5    MOVS	R0, #165
0x0DAE	0xF7FFFDEB  BL	_UART4_Write+0
;uartSend.c, 447 :: 		UART4_Write(0x05);
0x0DB2	0x2005    MOVS	R0, #5
0x0DB4	0xF7FFFDE8  BL	_UART4_Write+0
;uartSend.c, 448 :: 		UART4_Write(0x82);
0x0DB8	0x2082    MOVS	R0, #130
0x0DBA	0xF7FFFDE5  BL	_UART4_Write+0
;uartSend.c, 449 :: 		UART4_Write(0x51);
0x0DBE	0x2051    MOVS	R0, #81
0x0DC0	0xF7FFFDE2  BL	_UART4_Write+0
;uartSend.c, 450 :: 		UART4_Write(0xC5);
0x0DC4	0x20C5    MOVS	R0, #197
0x0DC6	0xF7FFFDDF  BL	_UART4_Write+0
;uartSend.c, 451 :: 		UART4_Write(0x00);
0x0DCA	0x2000    MOVS	R0, #0
0x0DCC	0xF7FFFDDC  BL	_UART4_Write+0
;uartSend.c, 452 :: 		UART4_Write(0x0B);
0x0DD0	0x200B    MOVS	R0, #11
0x0DD2	0xF7FFFDD9  BL	_UART4_Write+0
;uartSend.c, 454 :: 		UART4_Write(0x5A);
0x0DD6	0x205A    MOVS	R0, #90
0x0DD8	0xF7FFFDD6  BL	_UART4_Write+0
;uartSend.c, 455 :: 		UART4_Write(0xA5);
0x0DDC	0x20A5    MOVS	R0, #165
0x0DDE	0xF7FFFDD3  BL	_UART4_Write+0
;uartSend.c, 456 :: 		UART4_Write(0x05);
0x0DE2	0x2005    MOVS	R0, #5
0x0DE4	0xF7FFFDD0  BL	_UART4_Write+0
;uartSend.c, 457 :: 		UART4_Write(0x82);
0x0DE8	0x2082    MOVS	R0, #130
0x0DEA	0xF7FFFDCD  BL	_UART4_Write+0
;uartSend.c, 458 :: 		UART4_Write(0x51);
0x0DEE	0x2051    MOVS	R0, #81
0x0DF0	0xF7FFFDCA  BL	_UART4_Write+0
;uartSend.c, 459 :: 		UART4_Write(0xE5);
0x0DF4	0x20E5    MOVS	R0, #229
0x0DF6	0xF7FFFDC7  BL	_UART4_Write+0
;uartSend.c, 460 :: 		UART4_Write(0x00);
0x0DFA	0x2000    MOVS	R0, #0
0x0DFC	0xF7FFFDC4  BL	_UART4_Write+0
;uartSend.c, 461 :: 		UART4_Write(0x0D);
0x0E00	0x200D    MOVS	R0, #13
0x0E02	0xF7FFFDC1  BL	_UART4_Write+0
;uartSend.c, 463 :: 		UART4_Write(0x5A);
0x0E06	0x205A    MOVS	R0, #90
0x0E08	0xF7FFFDBE  BL	_UART4_Write+0
;uartSend.c, 464 :: 		UART4_Write(0xA5);
0x0E0C	0x20A5    MOVS	R0, #165
0x0E0E	0xF7FFFDBB  BL	_UART4_Write+0
;uartSend.c, 465 :: 		UART4_Write(0x05);
0x0E12	0x2005    MOVS	R0, #5
0x0E14	0xF7FFFDB8  BL	_UART4_Write+0
;uartSend.c, 466 :: 		UART4_Write(0x82);
0x0E18	0x2082    MOVS	R0, #130
0x0E1A	0xF7FFFDB5  BL	_UART4_Write+0
;uartSend.c, 467 :: 		UART4_Write(0x52);
0x0E1E	0x2052    MOVS	R0, #82
0x0E20	0xF7FFFDB2  BL	_UART4_Write+0
;uartSend.c, 468 :: 		UART4_Write(0x05);
0x0E24	0x2005    MOVS	R0, #5
0x0E26	0xF7FFFDAF  BL	_UART4_Write+0
;uartSend.c, 469 :: 		UART4_Write(0x00);
0x0E2A	0x2000    MOVS	R0, #0
0x0E2C	0xF7FFFDAC  BL	_UART4_Write+0
;uartSend.c, 470 :: 		UART4_Write(0x0F);
0x0E30	0x200F    MOVS	R0, #15
0x0E32	0xF7FFFDA9  BL	_UART4_Write+0
;uartSend.c, 471 :: 		}
L_end_uart4Battery2Level4:
0x0E36	0xF8DDE000  LDR	LR, [SP, #0]
0x0E3A	0xB001    ADD	SP, SP, #4
0x0E3C	0x4770    BX	LR
; end of _uart4Battery2Level4
_uart4Battery2Level3:
;uartSend.c, 472 :: 		void uart4Battery2Level3(){
0x0B00	0xB081    SUB	SP, SP, #4
0x0B02	0xF8CDE000  STR	LR, [SP, #0]
;uartSend.c, 474 :: 		UART4_Write(0x5A);
0x0B06	0x205A    MOVS	R0, #90
0x0B08	0xF7FFFF3E  BL	_UART4_Write+0
;uartSend.c, 475 :: 		UART4_Write(0xA5);
0x0B0C	0x20A5    MOVS	R0, #165
0x0B0E	0xF7FFFF3B  BL	_UART4_Write+0
;uartSend.c, 476 :: 		UART4_Write(0x05);
0x0B12	0x2005    MOVS	R0, #5
0x0B14	0xF7FFFF38  BL	_UART4_Write+0
;uartSend.c, 477 :: 		UART4_Write(0x82);
0x0B18	0x2082    MOVS	R0, #130
0x0B1A	0xF7FFFF35  BL	_UART4_Write+0
;uartSend.c, 478 :: 		UART4_Write(0x51);
0x0B1E	0x2051    MOVS	R0, #81
0x0B20	0xF7FFFF32  BL	_UART4_Write+0
;uartSend.c, 479 :: 		UART4_Write(0xA5);
0x0B24	0x20A5    MOVS	R0, #165
0x0B26	0xF7FFFF2F  BL	_UART4_Write+0
;uartSend.c, 480 :: 		UART4_Write(0x00);
0x0B2A	0x2000    MOVS	R0, #0
0x0B2C	0xF7FFFF2C  BL	_UART4_Write+0
;uartSend.c, 481 :: 		UART4_Write(0x08);
0x0B30	0x2008    MOVS	R0, #8
0x0B32	0xF7FFFF29  BL	_UART4_Write+0
;uartSend.c, 483 :: 		UART4_Write(0x5A);
0x0B36	0x205A    MOVS	R0, #90
0x0B38	0xF7FFFF26  BL	_UART4_Write+0
;uartSend.c, 484 :: 		UART4_Write(0xA5);
0x0B3C	0x20A5    MOVS	R0, #165
0x0B3E	0xF7FFFF23  BL	_UART4_Write+0
;uartSend.c, 485 :: 		UART4_Write(0x05);
0x0B42	0x2005    MOVS	R0, #5
0x0B44	0xF7FFFF20  BL	_UART4_Write+0
;uartSend.c, 486 :: 		UART4_Write(0x82);
0x0B48	0x2082    MOVS	R0, #130
0x0B4A	0xF7FFFF1D  BL	_UART4_Write+0
;uartSend.c, 487 :: 		UART4_Write(0x51);
0x0B4E	0x2051    MOVS	R0, #81
0x0B50	0xF7FFFF1A  BL	_UART4_Write+0
;uartSend.c, 488 :: 		UART4_Write(0xC5);
0x0B54	0x20C5    MOVS	R0, #197
0x0B56	0xF7FFFF17  BL	_UART4_Write+0
;uartSend.c, 489 :: 		UART4_Write(0x00);
0x0B5A	0x2000    MOVS	R0, #0
0x0B5C	0xF7FFFF14  BL	_UART4_Write+0
;uartSend.c, 490 :: 		UART4_Write(0x0B);
0x0B60	0x200B    MOVS	R0, #11
0x0B62	0xF7FFFF11  BL	_UART4_Write+0
;uartSend.c, 492 :: 		UART4_Write(0x5A);
0x0B66	0x205A    MOVS	R0, #90
0x0B68	0xF7FFFF0E  BL	_UART4_Write+0
;uartSend.c, 493 :: 		UART4_Write(0xA5);
0x0B6C	0x20A5    MOVS	R0, #165
0x0B6E	0xF7FFFF0B  BL	_UART4_Write+0
;uartSend.c, 494 :: 		UART4_Write(0x05);
0x0B72	0x2005    MOVS	R0, #5
0x0B74	0xF7FFFF08  BL	_UART4_Write+0
;uartSend.c, 495 :: 		UART4_Write(0x82);
0x0B78	0x2082    MOVS	R0, #130
0x0B7A	0xF7FFFF05  BL	_UART4_Write+0
;uartSend.c, 496 :: 		UART4_Write(0x51);
0x0B7E	0x2051    MOVS	R0, #81
0x0B80	0xF7FFFF02  BL	_UART4_Write+0
;uartSend.c, 497 :: 		UART4_Write(0xE5);
0x0B84	0x20E5    MOVS	R0, #229
0x0B86	0xF7FFFEFF  BL	_UART4_Write+0
;uartSend.c, 498 :: 		UART4_Write(0x00);
0x0B8A	0x2000    MOVS	R0, #0
0x0B8C	0xF7FFFEFC  BL	_UART4_Write+0
;uartSend.c, 499 :: 		UART4_Write(0x0D);
0x0B90	0x200D    MOVS	R0, #13
0x0B92	0xF7FFFEF9  BL	_UART4_Write+0
;uartSend.c, 501 :: 		UART4_Write(0x5A);
0x0B96	0x205A    MOVS	R0, #90
0x0B98	0xF7FFFEF6  BL	_UART4_Write+0
;uartSend.c, 502 :: 		UART4_Write(0xA5);
0x0B9C	0x20A5    MOVS	R0, #165
0x0B9E	0xF7FFFEF3  BL	_UART4_Write+0
;uartSend.c, 503 :: 		UART4_Write(0x05);
0x0BA2	0x2005    MOVS	R0, #5
0x0BA4	0xF7FFFEF0  BL	_UART4_Write+0
;uartSend.c, 504 :: 		UART4_Write(0x82);
0x0BA8	0x2082    MOVS	R0, #130
0x0BAA	0xF7FFFEED  BL	_UART4_Write+0
;uartSend.c, 505 :: 		UART4_Write(0x52);
0x0BAE	0x2052    MOVS	R0, #82
0x0BB0	0xF7FFFEEA  BL	_UART4_Write+0
;uartSend.c, 506 :: 		UART4_Write(0x05);
0x0BB4	0x2005    MOVS	R0, #5
0x0BB6	0xF7FFFEE7  BL	_UART4_Write+0
;uartSend.c, 507 :: 		UART4_Write(0x00);
0x0BBA	0x2000    MOVS	R0, #0
0x0BBC	0xF7FFFEE4  BL	_UART4_Write+0
;uartSend.c, 508 :: 		UART4_Write(0x0F);
0x0BC0	0x200F    MOVS	R0, #15
0x0BC2	0xF7FFFEE1  BL	_UART4_Write+0
;uartSend.c, 509 :: 		}
L_end_uart4Battery2Level3:
0x0BC6	0xF8DDE000  LDR	LR, [SP, #0]
0x0BCA	0xB001    ADD	SP, SP, #4
0x0BCC	0x4770    BX	LR
; end of _uart4Battery2Level3
_uart4Battery2Level2:
;uartSend.c, 510 :: 		void uart4Battery2Level2(){
0x0BD0	0xB081    SUB	SP, SP, #4
0x0BD2	0xF8CDE000  STR	LR, [SP, #0]
;uartSend.c, 512 :: 		UART4_Write(0x5A);
0x0BD6	0x205A    MOVS	R0, #90
0x0BD8	0xF7FFFED6  BL	_UART4_Write+0
;uartSend.c, 513 :: 		UART4_Write(0xA5);
0x0BDC	0x20A5    MOVS	R0, #165
0x0BDE	0xF7FFFED3  BL	_UART4_Write+0
;uartSend.c, 514 :: 		UART4_Write(0x05);
0x0BE2	0x2005    MOVS	R0, #5
0x0BE4	0xF7FFFED0  BL	_UART4_Write+0
;uartSend.c, 515 :: 		UART4_Write(0x82);
0x0BE8	0x2082    MOVS	R0, #130
0x0BEA	0xF7FFFECD  BL	_UART4_Write+0
;uartSend.c, 516 :: 		UART4_Write(0x51);
0x0BEE	0x2051    MOVS	R0, #81
0x0BF0	0xF7FFFECA  BL	_UART4_Write+0
;uartSend.c, 517 :: 		UART4_Write(0xA5);
0x0BF4	0x20A5    MOVS	R0, #165
0x0BF6	0xF7FFFEC7  BL	_UART4_Write+0
;uartSend.c, 518 :: 		UART4_Write(0x00);
0x0BFA	0x2000    MOVS	R0, #0
0x0BFC	0xF7FFFEC4  BL	_UART4_Write+0
;uartSend.c, 519 :: 		UART4_Write(0x08);
0x0C00	0x2008    MOVS	R0, #8
0x0C02	0xF7FFFEC1  BL	_UART4_Write+0
;uartSend.c, 521 :: 		UART4_Write(0x5A);
0x0C06	0x205A    MOVS	R0, #90
0x0C08	0xF7FFFEBE  BL	_UART4_Write+0
;uartSend.c, 522 :: 		UART4_Write(0xA5);
0x0C0C	0x20A5    MOVS	R0, #165
0x0C0E	0xF7FFFEBB  BL	_UART4_Write+0
;uartSend.c, 523 :: 		UART4_Write(0x05);
0x0C12	0x2005    MOVS	R0, #5
0x0C14	0xF7FFFEB8  BL	_UART4_Write+0
;uartSend.c, 524 :: 		UART4_Write(0x82);
0x0C18	0x2082    MOVS	R0, #130
0x0C1A	0xF7FFFEB5  BL	_UART4_Write+0
;uartSend.c, 525 :: 		UART4_Write(0x51);
0x0C1E	0x2051    MOVS	R0, #81
0x0C20	0xF7FFFEB2  BL	_UART4_Write+0
;uartSend.c, 526 :: 		UART4_Write(0xC5);
0x0C24	0x20C5    MOVS	R0, #197
0x0C26	0xF7FFFEAF  BL	_UART4_Write+0
;uartSend.c, 527 :: 		UART4_Write(0x00);
0x0C2A	0x2000    MOVS	R0, #0
0x0C2C	0xF7FFFEAC  BL	_UART4_Write+0
;uartSend.c, 528 :: 		UART4_Write(0x0A);
0x0C30	0x200A    MOVS	R0, #10
0x0C32	0xF7FFFEA9  BL	_UART4_Write+0
;uartSend.c, 530 :: 		UART4_Write(0x5A);
0x0C36	0x205A    MOVS	R0, #90
0x0C38	0xF7FFFEA6  BL	_UART4_Write+0
;uartSend.c, 531 :: 		UART4_Write(0xA5);
0x0C3C	0x20A5    MOVS	R0, #165
0x0C3E	0xF7FFFEA3  BL	_UART4_Write+0
;uartSend.c, 532 :: 		UART4_Write(0x05);
0x0C42	0x2005    MOVS	R0, #5
0x0C44	0xF7FFFEA0  BL	_UART4_Write+0
;uartSend.c, 533 :: 		UART4_Write(0x82);
0x0C48	0x2082    MOVS	R0, #130
0x0C4A	0xF7FFFE9D  BL	_UART4_Write+0
;uartSend.c, 534 :: 		UART4_Write(0x51);
0x0C4E	0x2051    MOVS	R0, #81
0x0C50	0xF7FFFE9A  BL	_UART4_Write+0
;uartSend.c, 535 :: 		UART4_Write(0xE5);
0x0C54	0x20E5    MOVS	R0, #229
0x0C56	0xF7FFFE97  BL	_UART4_Write+0
;uartSend.c, 536 :: 		UART4_Write(0x00);
0x0C5A	0x2000    MOVS	R0, #0
0x0C5C	0xF7FFFE94  BL	_UART4_Write+0
;uartSend.c, 537 :: 		UART4_Write(0x0D);
0x0C60	0x200D    MOVS	R0, #13
0x0C62	0xF7FFFE91  BL	_UART4_Write+0
;uartSend.c, 539 :: 		UART4_Write(0x5A);
0x0C66	0x205A    MOVS	R0, #90
0x0C68	0xF7FFFE8E  BL	_UART4_Write+0
;uartSend.c, 540 :: 		UART4_Write(0xA5);
0x0C6C	0x20A5    MOVS	R0, #165
0x0C6E	0xF7FFFE8B  BL	_UART4_Write+0
;uartSend.c, 541 :: 		UART4_Write(0x05);
0x0C72	0x2005    MOVS	R0, #5
0x0C74	0xF7FFFE88  BL	_UART4_Write+0
;uartSend.c, 542 :: 		UART4_Write(0x82);
0x0C78	0x2082    MOVS	R0, #130
0x0C7A	0xF7FFFE85  BL	_UART4_Write+0
;uartSend.c, 543 :: 		UART4_Write(0x52);
0x0C7E	0x2052    MOVS	R0, #82
0x0C80	0xF7FFFE82  BL	_UART4_Write+0
;uartSend.c, 544 :: 		UART4_Write(0x05);
0x0C84	0x2005    MOVS	R0, #5
0x0C86	0xF7FFFE7F  BL	_UART4_Write+0
;uartSend.c, 545 :: 		UART4_Write(0x00);
0x0C8A	0x2000    MOVS	R0, #0
0x0C8C	0xF7FFFE7C  BL	_UART4_Write+0
;uartSend.c, 546 :: 		UART4_Write(0x0F);
0x0C90	0x200F    MOVS	R0, #15
0x0C92	0xF7FFFE79  BL	_UART4_Write+0
;uartSend.c, 547 :: 		}
L_end_uart4Battery2Level2:
0x0C96	0xF8DDE000  LDR	LR, [SP, #0]
0x0C9A	0xB001    ADD	SP, SP, #4
0x0C9C	0x4770    BX	LR
; end of _uart4Battery2Level2
_uart4Battery2Level1:
;uartSend.c, 548 :: 		void uart4Battery2Level1(){
0x07F8	0xB081    SUB	SP, SP, #4
0x07FA	0xF8CDE000  STR	LR, [SP, #0]
;uartSend.c, 550 :: 		UART4_Write(0x5A);
0x07FE	0x205A    MOVS	R0, #90
0x0800	0xF000F8C2  BL	_UART4_Write+0
;uartSend.c, 551 :: 		UART4_Write(0xA5);
0x0804	0x20A5    MOVS	R0, #165
0x0806	0xF000F8BF  BL	_UART4_Write+0
;uartSend.c, 552 :: 		UART4_Write(0x05);
0x080A	0x2005    MOVS	R0, #5
0x080C	0xF000F8BC  BL	_UART4_Write+0
;uartSend.c, 553 :: 		UART4_Write(0x82);
0x0810	0x2082    MOVS	R0, #130
0x0812	0xF000F8B9  BL	_UART4_Write+0
;uartSend.c, 554 :: 		UART4_Write(0x51);
0x0816	0x2051    MOVS	R0, #81
0x0818	0xF000F8B6  BL	_UART4_Write+0
;uartSend.c, 555 :: 		UART4_Write(0xA5);
0x081C	0x20A5    MOVS	R0, #165
0x081E	0xF000F8B3  BL	_UART4_Write+0
;uartSend.c, 556 :: 		UART4_Write(0x00);
0x0822	0x2000    MOVS	R0, #0
0x0824	0xF000F8B0  BL	_UART4_Write+0
;uartSend.c, 557 :: 		UART4_Write(0x08);
0x0828	0x2008    MOVS	R0, #8
0x082A	0xF000F8AD  BL	_UART4_Write+0
;uartSend.c, 559 :: 		UART4_Write(0x5A);
0x082E	0x205A    MOVS	R0, #90
0x0830	0xF000F8AA  BL	_UART4_Write+0
;uartSend.c, 560 :: 		UART4_Write(0xA5);
0x0834	0x20A5    MOVS	R0, #165
0x0836	0xF000F8A7  BL	_UART4_Write+0
;uartSend.c, 561 :: 		UART4_Write(0x05);
0x083A	0x2005    MOVS	R0, #5
0x083C	0xF000F8A4  BL	_UART4_Write+0
;uartSend.c, 562 :: 		UART4_Write(0x82);
0x0840	0x2082    MOVS	R0, #130
0x0842	0xF000F8A1  BL	_UART4_Write+0
;uartSend.c, 563 :: 		UART4_Write(0x51);
0x0846	0x2051    MOVS	R0, #81
0x0848	0xF000F89E  BL	_UART4_Write+0
;uartSend.c, 564 :: 		UART4_Write(0xC5);
0x084C	0x20C5    MOVS	R0, #197
0x084E	0xF000F89B  BL	_UART4_Write+0
;uartSend.c, 565 :: 		UART4_Write(0x00);
0x0852	0x2000    MOVS	R0, #0
0x0854	0xF000F898  BL	_UART4_Write+0
;uartSend.c, 566 :: 		UART4_Write(0x0A);
0x0858	0x200A    MOVS	R0, #10
0x085A	0xF000F895  BL	_UART4_Write+0
;uartSend.c, 568 :: 		UART4_Write(0x5A);
0x085E	0x205A    MOVS	R0, #90
0x0860	0xF000F892  BL	_UART4_Write+0
;uartSend.c, 569 :: 		UART4_Write(0xA5);
0x0864	0x20A5    MOVS	R0, #165
0x0866	0xF000F88F  BL	_UART4_Write+0
;uartSend.c, 570 :: 		UART4_Write(0x05);
0x086A	0x2005    MOVS	R0, #5
0x086C	0xF000F88C  BL	_UART4_Write+0
;uartSend.c, 571 :: 		UART4_Write(0x82);
0x0870	0x2082    MOVS	R0, #130
0x0872	0xF000F889  BL	_UART4_Write+0
;uartSend.c, 572 :: 		UART4_Write(0x51);
0x0876	0x2051    MOVS	R0, #81
0x0878	0xF000F886  BL	_UART4_Write+0
;uartSend.c, 573 :: 		UART4_Write(0xE5);
0x087C	0x20E5    MOVS	R0, #229
0x087E	0xF000F883  BL	_UART4_Write+0
;uartSend.c, 574 :: 		UART4_Write(0x00);
0x0882	0x2000    MOVS	R0, #0
0x0884	0xF000F880  BL	_UART4_Write+0
;uartSend.c, 575 :: 		UART4_Write(0x0C);
0x0888	0x200C    MOVS	R0, #12
0x088A	0xF000F87D  BL	_UART4_Write+0
;uartSend.c, 577 :: 		UART4_Write(0x5A);
0x088E	0x205A    MOVS	R0, #90
0x0890	0xF000F87A  BL	_UART4_Write+0
;uartSend.c, 578 :: 		UART4_Write(0xA5);
0x0894	0x20A5    MOVS	R0, #165
0x0896	0xF000F877  BL	_UART4_Write+0
;uartSend.c, 579 :: 		UART4_Write(0x05);
0x089A	0x2005    MOVS	R0, #5
0x089C	0xF000F874  BL	_UART4_Write+0
;uartSend.c, 580 :: 		UART4_Write(0x82);
0x08A0	0x2082    MOVS	R0, #130
0x08A2	0xF000F871  BL	_UART4_Write+0
;uartSend.c, 581 :: 		UART4_Write(0x52);
0x08A6	0x2052    MOVS	R0, #82
0x08A8	0xF000F86E  BL	_UART4_Write+0
;uartSend.c, 582 :: 		UART4_Write(0x05);
0x08AC	0x2005    MOVS	R0, #5
0x08AE	0xF000F86B  BL	_UART4_Write+0
;uartSend.c, 583 :: 		UART4_Write(0x00);
0x08B2	0x2000    MOVS	R0, #0
0x08B4	0xF000F868  BL	_UART4_Write+0
;uartSend.c, 584 :: 		UART4_Write(0x11);
0x08B8	0x2011    MOVS	R0, #17
0x08BA	0xF000F865  BL	_UART4_Write+0
;uartSend.c, 585 :: 		}
L_end_uart4Battery2Level1:
0x08BE	0xF8DDE000  LDR	LR, [SP, #0]
0x08C2	0xB001    ADD	SP, SP, #4
0x08C4	0x4770    BX	LR
; end of _uart4Battery2Level1
_uartSendStatusToStation:
;uartSend.c, 28 :: 		void uartSendStatusToStation(){
0x2244	0xB081    SUB	SP, SP, #4
0x2246	0xF8CDE000  STR	LR, [SP, #0]
;uartSend.c, 29 :: 		UART6_Write(0x00);
0x224A	0x2000    MOVS	R0, #0
0x224C	0xF7FEFBCA  BL	_UART6_Write+0
;uartSend.c, 30 :: 		UART6_Write(ADDRESS_STATION);
0x2250	0x2030    MOVS	R0, #48
0x2252	0xF7FEFBC7  BL	_UART6_Write+0
;uartSend.c, 31 :: 		UART6_Write(FREQUENCY);
0x2256	0x2000    MOVS	R0, #0
0x2258	0xF7FEFBC4  BL	_UART6_Write+0
;uartSend.c, 33 :: 		UART6_Write(0x21);
0x225C	0x2021    MOVS	R0, #33
0x225E	0xF7FEFBC1  BL	_UART6_Write+0
;uartSend.c, 34 :: 		UART6_Write(0xC0);
0x2262	0x20C0    MOVS	R0, #192
0x2264	0xF7FEFBBE  BL	_UART6_Write+0
;uartSend.c, 35 :: 		UART6_Write(duzinaSignala2);
0x2268	0x481A    LDR	R0, [PC, #104]
0x226A	0x6800    LDR	R0, [R0, #0]
0x226C	0xF7FEFBBA  BL	_UART6_Write+0
;uartSend.c, 36 :: 		UART6_Write((gear_status & 0x07) | (velocity_mode_send << 3));
0x2270	0x4819    LDR	R0, [PC, #100]
0x2272	0x8800    LDRH	R0, [R0, #0]
0x2274	0xF0000107  AND	R1, R0, #7
0x2278	0xB289    UXTH	R1, R1
0x227A	0x4818    LDR	R0, [PC, #96]
0x227C	0x8800    LDRH	R0, [R0, #0]
0x227E	0x00C0    LSLS	R0, R0, #3
0x2280	0xB280    UXTH	R0, R0
0x2282	0xEA410000  ORR	R0, R1, R0, LSL #0
0x2286	0xF7FEFBAD  BL	_UART6_Write+0
;uartSend.c, 37 :: 		UART6_Write((boatBattery2 | boatBattery1 | boatNavigationLight | boatInteriorLight | boatControlTaken) & 0x1F);
0x228A	0x4815    LDR	R0, [PC, #84]
0x228C	0x7801    LDRB	R1, [R0, #0]
0x228E	0x4815    LDR	R0, [PC, #84]
0x2290	0x7800    LDRB	R0, [R0, #0]
0x2292	0xEA400101  ORR	R1, R0, R1, LSL #0
0x2296	0xB2C9    UXTB	R1, R1
0x2298	0x4813    LDR	R0, [PC, #76]
0x229A	0x7800    LDRB	R0, [R0, #0]
0x229C	0x4301    ORRS	R1, R0
0x229E	0xB2C9    UXTB	R1, R1
0x22A0	0x4812    LDR	R0, [PC, #72]
0x22A2	0x7800    LDRB	R0, [R0, #0]
0x22A4	0x4301    ORRS	R1, R0
0x22A6	0xB2C9    UXTB	R1, R1
0x22A8	0x4811    LDR	R0, [PC, #68]
0x22AA	0x7800    LDRB	R0, [R0, #0]
0x22AC	0xEA410000  ORR	R0, R1, R0, LSL #0
0x22B0	0xB2C0    UXTB	R0, R0
0x22B2	0xF000001F  AND	R0, R0, #31
0x22B6	0xB2C0    UXTB	R0, R0
0x22B8	0xF7FEFB94  BL	_UART6_Write+0
;uartSend.c, 38 :: 		UART6_Write(boatBatteriesLavel);
0x22BC	0x480D    LDR	R0, [PC, #52]
0x22BE	0x7800    LDRB	R0, [R0, #0]
0x22C0	0xF7FEFB90  BL	_UART6_Write+0
;uartSend.c, 39 :: 		UART6_Write(0x3B);
0x22C4	0x203B    MOVS	R0, #59
0x22C6	0xF7FEFB8D  BL	_UART6_Write+0
;uartSend.c, 40 :: 		}
L_end_uartSendStatusToStation:
0x22CA	0xF8DDE000  LDR	LR, [SP, #0]
0x22CE	0xB001    ADD	SP, SP, #4
0x22D0	0x4770    BX	LR
0x22D2	0xBF00    NOP
0x22D4	0x00502000  	_duzinaSignala2+0
0x22D8	0x00342000  	_gear_status+0
0x22DC	0x002A2000  	_velocity_mode_send+0
0x22E0	0x004C2000  	_boatBattery1+0
0x22E4	0x004D2000  	_boatBattery2+0
0x22E8	0x004B2000  	_boatNavigationLight+0
0x22EC	0x004A2000  	_boatInteriorLight+0
0x22F0	0x00372000  	_boatControlTaken+0
0x22F4	0x00282000  	_boatBatteriesLavel+0
; end of _uartSendStatusToStation
_UART6_Write:
;__Lib_UART_123_45_6.c, 61 :: 		
; _data start address is: 0 (R0)
0x09E4	0xB081    SUB	SP, SP, #4
0x09E6	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45_6.c, 62 :: 		
0x09EA	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x09EC	0x4803    LDR	R0, [PC, #12]
0x09EE	0xF7FFFE8D  BL	__Lib_UART_123_45_6_UARTx_Write+0
;__Lib_UART_123_45_6.c, 63 :: 		
L_end_UART6_Write:
0x09F2	0xF8DDE000  LDR	LR, [SP, #0]
0x09F6	0xB001    ADD	SP, SP, #4
0x09F8	0x4770    BX	LR
0x09FA	0xBF00    NOP
0x09FC	0x14004001  	USART6_SR+0
; end of _UART6_Write
_uart4NavigationLightTurnedOn:
;uartSend.c, 90 :: 		void uart4NavigationLightTurnedOn(){
0x22F8	0xB081    SUB	SP, SP, #4
0x22FA	0xF8CDE000  STR	LR, [SP, #0]
;uartSend.c, 92 :: 		UART4_Write(0x5A);
0x22FE	0x205A    MOVS	R0, #90
0x2300	0xF7FEFB42  BL	_UART4_Write+0
;uartSend.c, 93 :: 		UART4_Write(0xA5);
0x2304	0x20A5    MOVS	R0, #165
0x2306	0xF7FEFB3F  BL	_UART4_Write+0
;uartSend.c, 94 :: 		UART4_Write(0x05);
0x230A	0x2005    MOVS	R0, #5
0x230C	0xF7FEFB3C  BL	_UART4_Write+0
;uartSend.c, 95 :: 		UART4_Write(0x82);
0x2310	0x2082    MOVS	R0, #130
0x2312	0xF7FEFB39  BL	_UART4_Write+0
;uartSend.c, 96 :: 		UART4_Write(0x16);
0x2316	0x2016    MOVS	R0, #22
0x2318	0xF7FEFB36  BL	_UART4_Write+0
;uartSend.c, 97 :: 		UART4_Write(0x00);
0x231C	0x2000    MOVS	R0, #0
0x231E	0xF7FEFB33  BL	_UART4_Write+0
;uartSend.c, 98 :: 		UART4_Write(0x00);
0x2322	0x2000    MOVS	R0, #0
0x2324	0xF7FEFB30  BL	_UART4_Write+0
;uartSend.c, 99 :: 		UART4_Write(0x00);
0x2328	0x2000    MOVS	R0, #0
0x232A	0xF7FEFB2D  BL	_UART4_Write+0
;uartSend.c, 100 :: 		}
L_end_uart4NavigationLightTurnedOn:
0x232E	0xF8DDE000  LDR	LR, [SP, #0]
0x2332	0xB001    ADD	SP, SP, #4
0x2334	0x4770    BX	LR
; end of _uart4NavigationLightTurnedOn
_uart4InteriorLightTurnedOn:
;uartSend.c, 114 :: 		void uart4InteriorLightTurnedOn(){
0x21CC	0xB081    SUB	SP, SP, #4
0x21CE	0xF8CDE000  STR	LR, [SP, #0]
;uartSend.c, 116 :: 		UART4_Write(0x5A);
0x21D2	0x205A    MOVS	R0, #90
0x21D4	0xF7FEFBD8  BL	_UART4_Write+0
;uartSend.c, 117 :: 		UART4_Write(0xA5);
0x21D8	0x20A5    MOVS	R0, #165
0x21DA	0xF7FEFBD5  BL	_UART4_Write+0
;uartSend.c, 118 :: 		UART4_Write(0x05);
0x21DE	0x2005    MOVS	R0, #5
0x21E0	0xF7FEFBD2  BL	_UART4_Write+0
;uartSend.c, 119 :: 		UART4_Write(0x82);
0x21E4	0x2082    MOVS	R0, #130
0x21E6	0xF7FEFBCF  BL	_UART4_Write+0
;uartSend.c, 120 :: 		UART4_Write(0x16);
0x21EA	0x2016    MOVS	R0, #22
0x21EC	0xF7FEFBCC  BL	_UART4_Write+0
;uartSend.c, 121 :: 		UART4_Write(0x20);
0x21F0	0x2020    MOVS	R0, #32
0x21F2	0xF7FEFBC9  BL	_UART4_Write+0
;uartSend.c, 122 :: 		UART4_Write(0x00);
0x21F6	0x2000    MOVS	R0, #0
0x21F8	0xF7FEFBC6  BL	_UART4_Write+0
;uartSend.c, 123 :: 		UART4_Write(0x00);
0x21FC	0x2000    MOVS	R0, #0
0x21FE	0xF7FEFBC3  BL	_UART4_Write+0
;uartSend.c, 124 :: 		}
L_end_uart4InteriorLightTurnedOn:
0x2202	0xF8DDE000  LDR	LR, [SP, #0]
0x2206	0xB001    ADD	SP, SP, #4
0x2208	0x4770    BX	LR
; end of _uart4InteriorLightTurnedOn
_uart4CheckNavigationLightStatus:
;uartSend.c, 45 :: 		void uart4CheckNavigationLightStatus(){
0x220C	0xB081    SUB	SP, SP, #4
0x220E	0xF8CDE000  STR	LR, [SP, #0]
;uartSend.c, 47 :: 		UART4_Write(0x5A);
0x2212	0x205A    MOVS	R0, #90
0x2214	0xF7FEFBB8  BL	_UART4_Write+0
;uartSend.c, 48 :: 		UART4_Write(0xA5);
0x2218	0x20A5    MOVS	R0, #165
0x221A	0xF7FEFBB5  BL	_UART4_Write+0
;uartSend.c, 49 :: 		UART4_Write(0x04);
0x221E	0x2004    MOVS	R0, #4
0x2220	0xF7FEFBB2  BL	_UART4_Write+0
;uartSend.c, 50 :: 		UART4_Write(0x83);
0x2224	0x2083    MOVS	R0, #131
0x2226	0xF7FEFBAF  BL	_UART4_Write+0
;uartSend.c, 51 :: 		UART4_Write(0x16);
0x222A	0x2016    MOVS	R0, #22
0x222C	0xF7FEFBAC  BL	_UART4_Write+0
;uartSend.c, 52 :: 		UART4_Write(0x00);
0x2230	0x2000    MOVS	R0, #0
0x2232	0xF7FEFBA9  BL	_UART4_Write+0
;uartSend.c, 53 :: 		UART4_Write(0x01);
0x2236	0x2001    MOVS	R0, #1
0x2238	0xF7FEFBA6  BL	_UART4_Write+0
;uartSend.c, 54 :: 		}
L_end_uart4CheckNavigationLightStatus:
0x223C	0xF8DDE000  LDR	LR, [SP, #0]
0x2240	0xB001    ADD	SP, SP, #4
0x2242	0x4770    BX	LR
; end of _uart4CheckNavigationLightStatus
_uart4CheckInteriorLightStatus:
;uartSend.c, 56 :: 		void uart4CheckInteriorLightStatus(){
0x2338	0xB081    SUB	SP, SP, #4
0x233A	0xF8CDE000  STR	LR, [SP, #0]
;uartSend.c, 58 :: 		UART4_Write(0x5A);
0x233E	0x205A    MOVS	R0, #90
0x2340	0xF7FEFB22  BL	_UART4_Write+0
;uartSend.c, 59 :: 		UART4_Write(0xA5);
0x2344	0x20A5    MOVS	R0, #165
0x2346	0xF7FEFB1F  BL	_UART4_Write+0
;uartSend.c, 60 :: 		UART4_Write(0x04);
0x234A	0x2004    MOVS	R0, #4
0x234C	0xF7FEFB1C  BL	_UART4_Write+0
;uartSend.c, 61 :: 		UART4_Write(0x83);
0x2350	0x2083    MOVS	R0, #131
0x2352	0xF7FEFB19  BL	_UART4_Write+0
;uartSend.c, 62 :: 		UART4_Write(0x16);
0x2356	0x2016    MOVS	R0, #22
0x2358	0xF7FEFB16  BL	_UART4_Write+0
;uartSend.c, 63 :: 		UART4_Write(0x20);
0x235C	0x2020    MOVS	R0, #32
0x235E	0xF7FEFB13  BL	_UART4_Write+0
;uartSend.c, 64 :: 		UART4_Write(0x01);
0x2362	0x2001    MOVS	R0, #1
0x2364	0xF7FEFB10  BL	_UART4_Write+0
;uartSend.c, 65 :: 		}
L_end_uart4CheckInteriorLightStatus:
0x2368	0xF8DDE000  LDR	LR, [SP, #0]
0x236C	0xB001    ADD	SP, SP, #4
0x236E	0x4770    BX	LR
; end of _uart4CheckInteriorLightStatus
_uart4CheckBattery1Status:
;uartSend.c, 67 :: 		void uart4CheckBattery1Status(){
0x23E0	0xB081    SUB	SP, SP, #4
0x23E2	0xF8CDE000  STR	LR, [SP, #0]
;uartSend.c, 69 :: 		UART4_Write(0x5A);
0x23E6	0x205A    MOVS	R0, #90
0x23E8	0xF7FEFACE  BL	_UART4_Write+0
;uartSend.c, 70 :: 		UART4_Write(0xA5);
0x23EC	0x20A5    MOVS	R0, #165
0x23EE	0xF7FEFACB  BL	_UART4_Write+0
;uartSend.c, 71 :: 		UART4_Write(0x04);
0x23F2	0x2004    MOVS	R0, #4
0x23F4	0xF7FEFAC8  BL	_UART4_Write+0
;uartSend.c, 72 :: 		UART4_Write(0x83);
0x23F8	0x2083    MOVS	R0, #131
0x23FA	0xF7FEFAC5  BL	_UART4_Write+0
;uartSend.c, 73 :: 		UART4_Write(0x16);
0x23FE	0x2016    MOVS	R0, #22
0x2400	0xF7FEFAC2  BL	_UART4_Write+0
;uartSend.c, 74 :: 		UART4_Write(0x40);
0x2404	0x2040    MOVS	R0, #64
0x2406	0xF7FEFABF  BL	_UART4_Write+0
;uartSend.c, 75 :: 		UART4_Write(0x01);
0x240A	0x2001    MOVS	R0, #1
0x240C	0xF7FEFABC  BL	_UART4_Write+0
;uartSend.c, 76 :: 		}
L_end_uart4CheckBattery1Status:
0x2410	0xF8DDE000  LDR	LR, [SP, #0]
0x2414	0xB001    ADD	SP, SP, #4
0x2416	0x4770    BX	LR
; end of _uart4CheckBattery1Status
_uart4CheckBattery2Status:
;uartSend.c, 78 :: 		void uart4CheckBattery2Status(){
0x2418	0xB081    SUB	SP, SP, #4
0x241A	0xF8CDE000  STR	LR, [SP, #0]
;uartSend.c, 80 :: 		UART4_Write(0x5A);
0x241E	0x205A    MOVS	R0, #90
0x2420	0xF7FEFAB2  BL	_UART4_Write+0
;uartSend.c, 81 :: 		UART4_Write(0xA5);
0x2424	0x20A5    MOVS	R0, #165
0x2426	0xF7FEFAAF  BL	_UART4_Write+0
;uartSend.c, 82 :: 		UART4_Write(0x04);
0x242A	0x2004    MOVS	R0, #4
0x242C	0xF7FEFAAC  BL	_UART4_Write+0
;uartSend.c, 83 :: 		UART4_Write(0x83);
0x2430	0x2083    MOVS	R0, #131
0x2432	0xF7FEFAA9  BL	_UART4_Write+0
;uartSend.c, 84 :: 		UART4_Write(0x16);
0x2436	0x2016    MOVS	R0, #22
0x2438	0xF7FEFAA6  BL	_UART4_Write+0
;uartSend.c, 85 :: 		UART4_Write(0x60);
0x243C	0x2060    MOVS	R0, #96
0x243E	0xF7FEFAA3  BL	_UART4_Write+0
;uartSend.c, 86 :: 		UART4_Write(0x01);
0x2442	0x2001    MOVS	R0, #1
0x2444	0xF7FEFAA0  BL	_UART4_Write+0
;uartSend.c, 87 :: 		}
L_end_uart4CheckBattery2Status:
0x2448	0xF8DDE000  LDR	LR, [SP, #0]
0x244C	0xB001    ADD	SP, SP, #4
0x244E	0x4770    BX	LR
; end of _uart4CheckBattery2Status
_uart4TurtleCheckStatus:
;uartSend.c, 625 :: 		void uart4TurtleCheckStatus(){
0x2370	0xB081    SUB	SP, SP, #4
0x2372	0xF8CDE000  STR	LR, [SP, #0]
;uartSend.c, 627 :: 		UART4_Write(0x5A);
0x2376	0x205A    MOVS	R0, #90
0x2378	0xF7FEFB06  BL	_UART4_Write+0
;uartSend.c, 628 :: 		UART4_Write(0xA5);
0x237C	0x20A5    MOVS	R0, #165
0x237E	0xF7FEFB03  BL	_UART4_Write+0
;uartSend.c, 629 :: 		UART4_Write(0x04);
0x2382	0x2004    MOVS	R0, #4
0x2384	0xF7FEFB00  BL	_UART4_Write+0
;uartSend.c, 630 :: 		UART4_Write(0x83);
0x2388	0x2083    MOVS	R0, #131
0x238A	0xF7FEFAFD  BL	_UART4_Write+0
;uartSend.c, 631 :: 		UART4_Write(0x18);
0x238E	0x2018    MOVS	R0, #24
0x2390	0xF7FEFAFA  BL	_UART4_Write+0
;uartSend.c, 632 :: 		UART4_Write(0x00);
0x2394	0x2000    MOVS	R0, #0
0x2396	0xF7FEFAF7  BL	_UART4_Write+0
;uartSend.c, 633 :: 		UART4_Write(0x01);
0x239A	0x2001    MOVS	R0, #1
0x239C	0xF7FEFAF4  BL	_UART4_Write+0
;uartSend.c, 634 :: 		}
L_end_uart4TurtleCheckStatus:
0x23A0	0xF8DDE000  LDR	LR, [SP, #0]
0x23A4	0xB001    ADD	SP, SP, #4
0x23A6	0x4770    BX	LR
; end of _uart4TurtleCheckStatus
_uart4RabbitCheckStatus:
;uartSend.c, 636 :: 		void uart4RabbitCheckStatus(){
0x23A8	0xB081    SUB	SP, SP, #4
0x23AA	0xF8CDE000  STR	LR, [SP, #0]
;uartSend.c, 638 :: 		UART4_Write(0x5A);
0x23AE	0x205A    MOVS	R0, #90
0x23B0	0xF7FEFAEA  BL	_UART4_Write+0
;uartSend.c, 639 :: 		UART4_Write(0xA5);
0x23B4	0x20A5    MOVS	R0, #165
0x23B6	0xF7FEFAE7  BL	_UART4_Write+0
;uartSend.c, 640 :: 		UART4_Write(0x04);
0x23BA	0x2004    MOVS	R0, #4
0x23BC	0xF7FEFAE4  BL	_UART4_Write+0
;uartSend.c, 641 :: 		UART4_Write(0x83);
0x23C0	0x2083    MOVS	R0, #131
0x23C2	0xF7FEFAE1  BL	_UART4_Write+0
;uartSend.c, 642 :: 		UART4_Write(0x18);
0x23C6	0x2018    MOVS	R0, #24
0x23C8	0xF7FEFADE  BL	_UART4_Write+0
;uartSend.c, 643 :: 		UART4_Write(0x20);
0x23CC	0x2020    MOVS	R0, #32
0x23CE	0xF7FEFADB  BL	_UART4_Write+0
;uartSend.c, 644 :: 		UART4_Write(0x01);
0x23D2	0x2001    MOVS	R0, #1
0x23D4	0xF7FEFAD8  BL	_UART4_Write+0
;uartSend.c, 645 :: 		}
L_end_uart4RabbitCheckStatus:
0x23D8	0xF8DDE000  LDR	LR, [SP, #0]
0x23DC	0xB001    ADD	SP, SP, #4
0x23DE	0x4770    BX	LR
; end of _uart4RabbitCheckStatus
_uart4LeopardCheckStatus:
;uartSend.c, 647 :: 		void uart4LeopardCheckStatus(){
0x20DC	0xB081    SUB	SP, SP, #4
0x20DE	0xF8CDE000  STR	LR, [SP, #0]
;uartSend.c, 649 :: 		UART4_Write(0x5A);
0x20E2	0x205A    MOVS	R0, #90
0x20E4	0xF7FEFC50  BL	_UART4_Write+0
;uartSend.c, 650 :: 		UART4_Write(0xA5);
0x20E8	0x20A5    MOVS	R0, #165
0x20EA	0xF7FEFC4D  BL	_UART4_Write+0
;uartSend.c, 651 :: 		UART4_Write(0x04);
0x20EE	0x2004    MOVS	R0, #4
0x20F0	0xF7FEFC4A  BL	_UART4_Write+0
;uartSend.c, 652 :: 		UART4_Write(0x83);
0x20F4	0x2083    MOVS	R0, #131
0x20F6	0xF7FEFC47  BL	_UART4_Write+0
;uartSend.c, 653 :: 		UART4_Write(0x18);
0x20FA	0x2018    MOVS	R0, #24
0x20FC	0xF7FEFC44  BL	_UART4_Write+0
;uartSend.c, 654 :: 		UART4_Write(0x40);
0x2100	0x2040    MOVS	R0, #64
0x2102	0xF7FEFC41  BL	_UART4_Write+0
;uartSend.c, 655 :: 		UART4_Write(0x01);
0x2106	0x2001    MOVS	R0, #1
0x2108	0xF7FEFC3E  BL	_UART4_Write+0
;uartSend.c, 656 :: 		}
L_end_uart4LeopardCheckStatus:
0x210C	0xF8DDE000  LDR	LR, [SP, #0]
0x2110	0xB001    ADD	SP, SP, #4
0x2112	0x4770    BX	LR
; end of _uart4LeopardCheckStatus
_uart3SendJoystickForced:
;uartSend.c, 776 :: 		void uart3SendJoystickForced(){
0x2114	0xB081    SUB	SP, SP, #4
0x2116	0xF8CDE000  STR	LR, [SP, #0]
;uartSend.c, 778 :: 		UART3_Write(0x21);
0x211A	0x2021    MOVS	R0, #33
0x211C	0xF7FEFAE8  BL	_UART3_Write+0
;uartSend.c, 779 :: 		UART3_Write(0x40);
0x2120	0x2040    MOVS	R0, #64
0x2122	0xF7FEFAE5  BL	_UART3_Write+0
;uartSend.c, 780 :: 		UART3_Write((char)gear_status);
0x2126	0x4809    LDR	R0, [PC, #36]
0x2128	0x8800    LDRH	R0, [R0, #0]
0x212A	0xF7FEFAE1  BL	_UART3_Write+0
;uartSend.c, 781 :: 		UART3_Write((char)dutyy);
0x212E	0x4808    LDR	R0, [PC, #32]
0x2130	0xF9B00000  LDRSH	R0, [R0, #0]
0x2134	0xF7FEFADC  BL	_UART3_Write+0
;uartSend.c, 782 :: 		UART3_Write(0x01);
0x2138	0x2001    MOVS	R0, #1
0x213A	0xF7FEFAD9  BL	_UART3_Write+0
;uartSend.c, 783 :: 		UART3_Write(0x3B);
0x213E	0x203B    MOVS	R0, #59
0x2140	0xF7FEFAD6  BL	_UART3_Write+0
;uartSend.c, 784 :: 		}
L_end_uart3SendJoystickForced:
0x2144	0xF8DDE000  LDR	LR, [SP, #0]
0x2148	0xB001    ADD	SP, SP, #4
0x214A	0x4770    BX	LR
0x214C	0x00342000  	_gear_status+0
0x2150	0x004E2000  	_dutyy+0
; end of _uart3SendJoystickForced
_uart3ResetSensorTouch:
;uartSend.c, 786 :: 		void uart3ResetSensorTouch(){
0x205C	0xB081    SUB	SP, SP, #4
0x205E	0xF8CDE000  STR	LR, [SP, #0]
;uartSend.c, 787 :: 		UART3_Write(0x21);
0x2062	0x2021    MOVS	R0, #33
0x2064	0xF7FEFB44  BL	_UART3_Write+0
;uartSend.c, 788 :: 		UART3_Write(0x45);
0x2068	0x2045    MOVS	R0, #69
0x206A	0xF7FEFB41  BL	_UART3_Write+0
;uartSend.c, 789 :: 		UART3_Write(0x01);
0x206E	0x2001    MOVS	R0, #1
0x2070	0xF7FEFB3E  BL	_UART3_Write+0
;uartSend.c, 790 :: 		UART3_Write(0x01);
0x2074	0x2001    MOVS	R0, #1
0x2076	0xF7FEFB3B  BL	_UART3_Write+0
;uartSend.c, 791 :: 		UART3_Write(0x01);
0x207A	0x2001    MOVS	R0, #1
0x207C	0xF7FEFB38  BL	_UART3_Write+0
;uartSend.c, 792 :: 		UART3_Write(0x3B);
0x2080	0x203B    MOVS	R0, #59
0x2082	0xF7FEFB35  BL	_UART3_Write+0
;uartSend.c, 793 :: 		}
L_end_uart3ResetSensorTouch:
0x2086	0xF8DDE000  LDR	LR, [SP, #0]
0x208A	0xB001    ADD	SP, SP, #4
0x208C	0x4770    BX	LR
; end of _uart3ResetSensorTouch
__Lib_System_4XX_InitialSetUpRCCRCC2:
;__Lib_System_4XX.c, 465 :: 		
0x3F94	0xB082    SUB	SP, SP, #8
0x3F96	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_System_4XX.c, 468 :: 		
; ulRCC_CR start address is: 8 (R2)
0x3F9A	0x4A92    LDR	R2, [PC, #584]
;__Lib_System_4XX.c, 469 :: 		
; ulRCC_PLLCFGR start address is: 12 (R3)
0x3F9C	0x4B92    LDR	R3, [PC, #584]
;__Lib_System_4XX.c, 470 :: 		
; ulRCC_CFGR start address is: 16 (R4)
0x3F9E	0x4C93    LDR	R4, [PC, #588]
;__Lib_System_4XX.c, 471 :: 		
; ulVOLTAGE_RANGE start address is: 0 (R0)
0x3FA0	0x4893    LDR	R0, [PC, #588]
;__Lib_System_4XX.c, 472 :: 		
; Fosc_kHz start address is: 4 (R1)
0x3FA2	0x4994    LDR	R1, [PC, #592]
;__Lib_System_4XX.c, 474 :: 		
0x3FA4	0x2803    CMP	R0, #3
0x3FA6	0xF040803C  BNE	L___Lib_System_4XX_InitialSetUpRCCRCC234
; ulVOLTAGE_RANGE end address is: 0 (R0)
;__Lib_System_4XX.c, 475 :: 		
0x3FAA	0x4893    LDR	R0, [PC, #588]
0x3FAC	0x4281    CMP	R1, R0
0x3FAE	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC235
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 476 :: 		
0x3FB0	0x4892    LDR	R0, [PC, #584]
0x3FB2	0x6800    LDR	R0, [R0, #0]
0x3FB4	0xF0400105  ORR	R1, R0, #5
0x3FB8	0x4890    LDR	R0, [PC, #576]
0x3FBA	0x6001    STR	R1, [R0, #0]
0x3FBC	0xE030    B	L___Lib_System_4XX_InitialSetUpRCCRCC236
L___Lib_System_4XX_InitialSetUpRCCRCC235:
;__Lib_System_4XX.c, 477 :: 		
; Fosc_kHz start address is: 4 (R1)
0x3FBE	0x4890    LDR	R0, [PC, #576]
0x3FC0	0x4281    CMP	R1, R0
0x3FC2	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC237
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 478 :: 		
0x3FC4	0x488D    LDR	R0, [PC, #564]
0x3FC6	0x6800    LDR	R0, [R0, #0]
0x3FC8	0xF0400104  ORR	R1, R0, #4
0x3FCC	0x488B    LDR	R0, [PC, #556]
0x3FCE	0x6001    STR	R1, [R0, #0]
0x3FD0	0xE026    B	L___Lib_System_4XX_InitialSetUpRCCRCC238
L___Lib_System_4XX_InitialSetUpRCCRCC237:
;__Lib_System_4XX.c, 479 :: 		
; Fosc_kHz start address is: 4 (R1)
0x3FD2	0x488C    LDR	R0, [PC, #560]
0x3FD4	0x4281    CMP	R1, R0
0x3FD6	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC239
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 480 :: 		
0x3FD8	0x4888    LDR	R0, [PC, #544]
0x3FDA	0x6800    LDR	R0, [R0, #0]
0x3FDC	0xF0400103  ORR	R1, R0, #3
0x3FE0	0x4886    LDR	R0, [PC, #536]
0x3FE2	0x6001    STR	R1, [R0, #0]
0x3FE4	0xE01C    B	L___Lib_System_4XX_InitialSetUpRCCRCC240
L___Lib_System_4XX_InitialSetUpRCCRCC239:
;__Lib_System_4XX.c, 481 :: 		
; Fosc_kHz start address is: 4 (R1)
0x3FE6	0xF64E2060  MOVW	R0, #60000
0x3FEA	0x4281    CMP	R1, R0
0x3FEC	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC241
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 482 :: 		
0x3FEE	0x4883    LDR	R0, [PC, #524]
0x3FF0	0x6800    LDR	R0, [R0, #0]
0x3FF2	0xF0400102  ORR	R1, R0, #2
0x3FF6	0x4881    LDR	R0, [PC, #516]
0x3FF8	0x6001    STR	R1, [R0, #0]
0x3FFA	0xE011    B	L___Lib_System_4XX_InitialSetUpRCCRCC242
L___Lib_System_4XX_InitialSetUpRCCRCC241:
;__Lib_System_4XX.c, 483 :: 		
; Fosc_kHz start address is: 4 (R1)
0x3FFC	0xF2475030  MOVW	R0, #30000
0x4000	0x4281    CMP	R1, R0
0x4002	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC243
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 484 :: 		
0x4004	0x487D    LDR	R0, [PC, #500]
0x4006	0x6800    LDR	R0, [R0, #0]
0x4008	0xF0400101  ORR	R1, R0, #1
0x400C	0x487B    LDR	R0, [PC, #492]
0x400E	0x6001    STR	R1, [R0, #0]
0x4010	0xE006    B	L___Lib_System_4XX_InitialSetUpRCCRCC244
L___Lib_System_4XX_InitialSetUpRCCRCC243:
;__Lib_System_4XX.c, 486 :: 		
0x4012	0x487A    LDR	R0, [PC, #488]
0x4014	0x6801    LDR	R1, [R0, #0]
0x4016	0xF06F0007  MVN	R0, #7
0x401A	0x4001    ANDS	R1, R0
0x401C	0x4877    LDR	R0, [PC, #476]
0x401E	0x6001    STR	R1, [R0, #0]
L___Lib_System_4XX_InitialSetUpRCCRCC244:
L___Lib_System_4XX_InitialSetUpRCCRCC242:
L___Lib_System_4XX_InitialSetUpRCCRCC240:
L___Lib_System_4XX_InitialSetUpRCCRCC238:
L___Lib_System_4XX_InitialSetUpRCCRCC236:
;__Lib_System_4XX.c, 487 :: 		
0x4020	0xE10C    B	L___Lib_System_4XX_InitialSetUpRCCRCC245
L___Lib_System_4XX_InitialSetUpRCCRCC234:
;__Lib_System_4XX.c, 488 :: 		
; Fosc_kHz start address is: 4 (R1)
; ulVOLTAGE_RANGE start address is: 0 (R0)
0x4022	0x2802    CMP	R0, #2
0x4024	0xF0408046  BNE	L___Lib_System_4XX_InitialSetUpRCCRCC246
; ulVOLTAGE_RANGE end address is: 0 (R0)
;__Lib_System_4XX.c, 489 :: 		
0x4028	0x4877    LDR	R0, [PC, #476]
0x402A	0x4281    CMP	R1, R0
0x402C	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC247
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 490 :: 		
0x402E	0x4873    LDR	R0, [PC, #460]
0x4030	0x6800    LDR	R0, [R0, #0]
0x4032	0xF0400106  ORR	R1, R0, #6
0x4036	0x4871    LDR	R0, [PC, #452]
0x4038	0x6001    STR	R1, [R0, #0]
0x403A	0xE03A    B	L___Lib_System_4XX_InitialSetUpRCCRCC248
L___Lib_System_4XX_InitialSetUpRCCRCC247:
;__Lib_System_4XX.c, 491 :: 		
; Fosc_kHz start address is: 4 (R1)
0x403C	0x4870    LDR	R0, [PC, #448]
0x403E	0x4281    CMP	R1, R0
0x4040	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC249
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 492 :: 		
0x4042	0x486E    LDR	R0, [PC, #440]
0x4044	0x6800    LDR	R0, [R0, #0]
0x4046	0xF0400105  ORR	R1, R0, #5
0x404A	0x486C    LDR	R0, [PC, #432]
0x404C	0x6001    STR	R1, [R0, #0]
0x404E	0xE030    B	L___Lib_System_4XX_InitialSetUpRCCRCC250
L___Lib_System_4XX_InitialSetUpRCCRCC249:
;__Lib_System_4XX.c, 493 :: 		
; Fosc_kHz start address is: 4 (R1)
0x4050	0x486E    LDR	R0, [PC, #440]
0x4052	0x4281    CMP	R1, R0
0x4054	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC251
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 494 :: 		
0x4056	0x4869    LDR	R0, [PC, #420]
0x4058	0x6800    LDR	R0, [R0, #0]
0x405A	0xF0400104  ORR	R1, R0, #4
0x405E	0x4867    LDR	R0, [PC, #412]
0x4060	0x6001    STR	R1, [R0, #0]
0x4062	0xE026    B	L___Lib_System_4XX_InitialSetUpRCCRCC252
L___Lib_System_4XX_InitialSetUpRCCRCC251:
;__Lib_System_4XX.c, 495 :: 		
; Fosc_kHz start address is: 4 (R1)
0x4064	0x486A    LDR	R0, [PC, #424]
0x4066	0x4281    CMP	R1, R0
0x4068	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC253
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 496 :: 		
0x406A	0x4864    LDR	R0, [PC, #400]
0x406C	0x6800    LDR	R0, [R0, #0]
0x406E	0xF0400103  ORR	R1, R0, #3
0x4072	0x4862    LDR	R0, [PC, #392]
0x4074	0x6001    STR	R1, [R0, #0]
0x4076	0xE01C    B	L___Lib_System_4XX_InitialSetUpRCCRCC254
L___Lib_System_4XX_InitialSetUpRCCRCC253:
;__Lib_System_4XX.c, 497 :: 		
; Fosc_kHz start address is: 4 (R1)
0x4078	0xF64B3080  MOVW	R0, #48000
0x407C	0x4281    CMP	R1, R0
0x407E	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC255
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 498 :: 		
0x4080	0x485E    LDR	R0, [PC, #376]
0x4082	0x6800    LDR	R0, [R0, #0]
0x4084	0xF0400102  ORR	R1, R0, #2
0x4088	0x485C    LDR	R0, [PC, #368]
0x408A	0x6001    STR	R1, [R0, #0]
0x408C	0xE011    B	L___Lib_System_4XX_InitialSetUpRCCRCC256
L___Lib_System_4XX_InitialSetUpRCCRCC255:
;__Lib_System_4XX.c, 499 :: 		
; Fosc_kHz start address is: 4 (R1)
0x408E	0xF64550C0  MOVW	R0, #24000
0x4092	0x4281    CMP	R1, R0
0x4094	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC257
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 500 :: 		
0x4096	0x4859    LDR	R0, [PC, #356]
0x4098	0x6800    LDR	R0, [R0, #0]
0x409A	0xF0400101  ORR	R1, R0, #1
0x409E	0x4857    LDR	R0, [PC, #348]
0x40A0	0x6001    STR	R1, [R0, #0]
0x40A2	0xE006    B	L___Lib_System_4XX_InitialSetUpRCCRCC258
L___Lib_System_4XX_InitialSetUpRCCRCC257:
;__Lib_System_4XX.c, 502 :: 		
0x40A4	0x4855    LDR	R0, [PC, #340]
0x40A6	0x6801    LDR	R1, [R0, #0]
0x40A8	0xF06F0007  MVN	R0, #7
0x40AC	0x4001    ANDS	R1, R0
0x40AE	0x4853    LDR	R0, [PC, #332]
0x40B0	0x6001    STR	R1, [R0, #0]
L___Lib_System_4XX_InitialSetUpRCCRCC258:
L___Lib_System_4XX_InitialSetUpRCCRCC256:
L___Lib_System_4XX_InitialSetUpRCCRCC254:
L___Lib_System_4XX_InitialSetUpRCCRCC252:
L___Lib_System_4XX_InitialSetUpRCCRCC250:
L___Lib_System_4XX_InitialSetUpRCCRCC248:
;__Lib_System_4XX.c, 503 :: 		
0x40B2	0xE0C3    B	L___Lib_System_4XX_InitialSetUpRCCRCC259
L___Lib_System_4XX_InitialSetUpRCCRCC246:
;__Lib_System_4XX.c, 504 :: 		
; Fosc_kHz start address is: 4 (R1)
; ulVOLTAGE_RANGE start address is: 0 (R0)
0x40B4	0x2801    CMP	R0, #1
0x40B6	0xF0408051  BNE	L___Lib_System_4XX_InitialSetUpRCCRCC260
; ulVOLTAGE_RANGE end address is: 0 (R0)
;__Lib_System_4XX.c, 505 :: 		
0x40BA	0x4851    LDR	R0, [PC, #324]
0x40BC	0x4281    CMP	R1, R0
0x40BE	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC261
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 506 :: 		
0x40C0	0x484E    LDR	R0, [PC, #312]
0x40C2	0x6800    LDR	R0, [R0, #0]
0x40C4	0xF0400107  ORR	R1, R0, #7
0x40C8	0x484C    LDR	R0, [PC, #304]
0x40CA	0x6001    STR	R1, [R0, #0]
0x40CC	0xE045    B	L___Lib_System_4XX_InitialSetUpRCCRCC262
L___Lib_System_4XX_InitialSetUpRCCRCC261:
;__Lib_System_4XX.c, 507 :: 		
; Fosc_kHz start address is: 4 (R1)
0x40CE	0x4851    LDR	R0, [PC, #324]
0x40D0	0x4281    CMP	R1, R0
0x40D2	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC263
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 508 :: 		
0x40D4	0x4849    LDR	R0, [PC, #292]
0x40D6	0x6800    LDR	R0, [R0, #0]
0x40D8	0xF0400106  ORR	R1, R0, #6
0x40DC	0x4847    LDR	R0, [PC, #284]
0x40DE	0x6001    STR	R1, [R0, #0]
0x40E0	0xE03B    B	L___Lib_System_4XX_InitialSetUpRCCRCC264
L___Lib_System_4XX_InitialSetUpRCCRCC263:
;__Lib_System_4XX.c, 509 :: 		
; Fosc_kHz start address is: 4 (R1)
0x40E2	0x4848    LDR	R0, [PC, #288]
0x40E4	0x4281    CMP	R1, R0
0x40E6	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC265
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 510 :: 		
0x40E8	0x4844    LDR	R0, [PC, #272]
0x40EA	0x6800    LDR	R0, [R0, #0]
0x40EC	0xF0400105  ORR	R1, R0, #5
0x40F0	0x4842    LDR	R0, [PC, #264]
0x40F2	0x6001    STR	R1, [R0, #0]
0x40F4	0xE031    B	L___Lib_System_4XX_InitialSetUpRCCRCC266
L___Lib_System_4XX_InitialSetUpRCCRCC265:
;__Lib_System_4XX.c, 511 :: 		
; Fosc_kHz start address is: 4 (R1)
0x40F6	0x4846    LDR	R0, [PC, #280]
0x40F8	0x4281    CMP	R1, R0
0x40FA	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC267
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 512 :: 		
0x40FC	0x483F    LDR	R0, [PC, #252]
0x40FE	0x6800    LDR	R0, [R0, #0]
0x4100	0xF0400104  ORR	R1, R0, #4
0x4104	0x483D    LDR	R0, [PC, #244]
0x4106	0x6001    STR	R1, [R0, #0]
0x4108	0xE027    B	L___Lib_System_4XX_InitialSetUpRCCRCC268
L___Lib_System_4XX_InitialSetUpRCCRCC267:
;__Lib_System_4XX.c, 513 :: 		
; Fosc_kHz start address is: 4 (R1)
0x410A	0xF24D20F0  MOVW	R0, #54000
0x410E	0x4281    CMP	R1, R0
0x4110	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC269
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 514 :: 		
0x4112	0x483A    LDR	R0, [PC, #232]
0x4114	0x6800    LDR	R0, [R0, #0]
0x4116	0xF0400103  ORR	R1, R0, #3
0x411A	0x4838    LDR	R0, [PC, #224]
0x411C	0x6001    STR	R1, [R0, #0]
0x411E	0xE01C    B	L___Lib_System_4XX_InitialSetUpRCCRCC270
L___Lib_System_4XX_InitialSetUpRCCRCC269:
;__Lib_System_4XX.c, 515 :: 		
; Fosc_kHz start address is: 4 (R1)
0x4120	0xF64840A0  MOVW	R0, #36000
0x4124	0x4281    CMP	R1, R0
0x4126	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC271
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 516 :: 		
0x4128	0x4834    LDR	R0, [PC, #208]
0x412A	0x6800    LDR	R0, [R0, #0]
0x412C	0xF0400102  ORR	R1, R0, #2
0x4130	0x4832    LDR	R0, [PC, #200]
0x4132	0x6001    STR	R1, [R0, #0]
0x4134	0xE011    B	L___Lib_System_4XX_InitialSetUpRCCRCC272
L___Lib_System_4XX_InitialSetUpRCCRCC271:
;__Lib_System_4XX.c, 517 :: 		
; Fosc_kHz start address is: 4 (R1)
0x4136	0xF2446050  MOVW	R0, #18000
0x413A	0x4281    CMP	R1, R0
0x413C	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC273
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 518 :: 		
0x413E	0x482F    LDR	R0, [PC, #188]
0x4140	0x6800    LDR	R0, [R0, #0]
0x4142	0xF0400101  ORR	R1, R0, #1
0x4146	0x482D    LDR	R0, [PC, #180]
0x4148	0x6001    STR	R1, [R0, #0]
0x414A	0xE006    B	L___Lib_System_4XX_InitialSetUpRCCRCC274
L___Lib_System_4XX_InitialSetUpRCCRCC273:
;__Lib_System_4XX.c, 520 :: 		
0x414C	0x482B    LDR	R0, [PC, #172]
0x414E	0x6801    LDR	R1, [R0, #0]
0x4150	0xF06F0007  MVN	R0, #7
0x4154	0x4001    ANDS	R1, R0
0x4156	0x4829    LDR	R0, [PC, #164]
0x4158	0x6001    STR	R1, [R0, #0]
L___Lib_System_4XX_InitialSetUpRCCRCC274:
L___Lib_System_4XX_InitialSetUpRCCRCC272:
L___Lib_System_4XX_InitialSetUpRCCRCC270:
L___Lib_System_4XX_InitialSetUpRCCRCC268:
L___Lib_System_4XX_InitialSetUpRCCRCC266:
L___Lib_System_4XX_InitialSetUpRCCRCC264:
L___Lib_System_4XX_InitialSetUpRCCRCC262:
;__Lib_System_4XX.c, 521 :: 		
0x415A	0xE06F    B	L___Lib_System_4XX_InitialSetUpRCCRCC275
L___Lib_System_4XX_InitialSetUpRCCRCC260:
;__Lib_System_4XX.c, 522 :: 		
; Fosc_kHz start address is: 4 (R1)
; ulVOLTAGE_RANGE start address is: 0 (R0)
0x415C	0x2800    CMP	R0, #0
0x415E	0xF040806D  BNE	L___Lib_System_4XX_InitialSetUpRCCRCC276
; ulVOLTAGE_RANGE end address is: 0 (R0)
;__Lib_System_4XX.c, 523 :: 		
0x4162	0x482D    LDR	R0, [PC, #180]
0x4164	0x4281    CMP	R1, R0
0x4166	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC277
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 524 :: 		
0x4168	0x4824    LDR	R0, [PC, #144]
0x416A	0x6800    LDR	R0, [R0, #0]
0x416C	0xF0400107  ORR	R1, R0, #7
0x4170	0x4822    LDR	R0, [PC, #136]
0x4172	0x6001    STR	R1, [R0, #0]
0x4174	0xE062    B	L___Lib_System_4XX_InitialSetUpRCCRCC278
L___Lib_System_4XX_InitialSetUpRCCRCC277:
;__Lib_System_4XX.c, 525 :: 		
; Fosc_kHz start address is: 4 (R1)
0x4176	0x4825    LDR	R0, [PC, #148]
0x4178	0x4281    CMP	R1, R0
0x417A	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC279
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 526 :: 		
0x417C	0x481F    LDR	R0, [PC, #124]
0x417E	0x6800    LDR	R0, [R0, #0]
0x4180	0xF0400106  ORR	R1, R0, #6
0x4184	0x481D    LDR	R0, [PC, #116]
0x4186	0x6001    STR	R1, [R0, #0]
0x4188	0xE058    B	L___Lib_System_4XX_InitialSetUpRCCRCC280
L___Lib_System_4XX_InitialSetUpRCCRCC279:
;__Lib_System_4XX.c, 527 :: 		
; Fosc_kHz start address is: 4 (R1)
0x418A	0x4824    LDR	R0, [PC, #144]
0x418C	0x4281    CMP	R1, R0
0x418E	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC281
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 528 :: 		
0x4190	0x481A    LDR	R0, [PC, #104]
0x4192	0x6800    LDR	R0, [R0, #0]
0x4194	0xF0400105  ORR	R1, R0, #5
0x4198	0x4818    LDR	R0, [PC, #96]
0x419A	0x6001    STR	R1, [R0, #0]
0x419C	0xE04E    B	L___Lib_System_4XX_InitialSetUpRCCRCC282
L___Lib_System_4XX_InitialSetUpRCCRCC281:
;__Lib_System_4XX.c, 529 :: 		
; Fosc_kHz start address is: 4 (R1)
0x419E	0xF5B14F7A  CMP	R1, #64000
0x41A2	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC283
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 530 :: 		
0x41A4	0x4815    LDR	R0, [PC, #84]
0x41A6	0x6800    LDR	R0, [R0, #0]
0x41A8	0xF0400104  ORR	R1, R0, #4
0x41AC	0x4813    LDR	R0, [PC, #76]
0x41AE	0x6001    STR	R1, [R0, #0]
0x41B0	0xE044    B	L___Lib_System_4XX_InitialSetUpRCCRCC284
L___Lib_System_4XX_InitialSetUpRCCRCC283:
;__Lib_System_4XX.c, 531 :: 		
; Fosc_kHz start address is: 4 (R1)
0x41B2	0xF64B3080  MOVW	R0, #48000
0x41B6	0x4281    CMP	R1, R0
0x41B8	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC285
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 532 :: 		
0x41BA	0x4810    LDR	R0, [PC, #64]
0x41BC	0x6800    LDR	R0, [R0, #0]
0x41BE	0xF0400103  ORR	R1, R0, #3
0x41C2	0x480E    LDR	R0, [PC, #56]
0x41C4	0x6001    STR	R1, [R0, #0]
0x41C6	0xE039    B	L___Lib_System_4XX_InitialSetUpRCCRCC286
L___Lib_System_4XX_InitialSetUpRCCRCC285:
;__Lib_System_4XX.c, 533 :: 		
; Fosc_kHz start address is: 4 (R1)
0x41C8	0xF5B14FFA  CMP	R1, #32000
0x41CC	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC287
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 534 :: 		
0x41CE	0x480B    LDR	R0, [PC, #44]
0x41D0	0x6800    LDR	R0, [R0, #0]
0x41D2	0xF0400102  ORR	R1, R0, #2
0x41D6	0x4809    LDR	R0, [PC, #36]
0x41D8	0x6001    STR	R1, [R0, #0]
0x41DA	0xE02F    B	L___Lib_System_4XX_InitialSetUpRCCRCC288
L___Lib_System_4XX_InitialSetUpRCCRCC287:
;__Lib_System_4XX.c, 535 :: 		
; Fosc_kHz start address is: 4 (R1)
0x41DC	0xF5B15F7A  CMP	R1, #16000
0x41E0	0xD925    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC289
0x41E2	0xE01D    B	#58
0x41E4	0x00800109  	#17367168
0x41E8	0x2A040440  	#71313924
0x41EC	0x94020002  	#168962
0x41F0	0x00030000  	#3
0x41F4	0x90400002  	#168000
0x41F8	0x49F00002  	#150000
0x41FC	0x3C004002  	FLASH_ACR+0
0x4200	0xD4C00001  	#120000
0x4204	0x5F900001  	#90000
0x4208	0x32800002  	#144000
0x420C	0x77000001  	#96000
0x4210	0x19400001  	#72000
0x4214	0xA5E00001  	#108000
0x4218	0xB5800001  	#112000
0x421C	0x38800001  	#80000
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 536 :: 		
0x4220	0x482D    LDR	R0, [PC, #180]
0x4222	0x6800    LDR	R0, [R0, #0]
0x4224	0xF0400101  ORR	R1, R0, #1
0x4228	0x482B    LDR	R0, [PC, #172]
0x422A	0x6001    STR	R1, [R0, #0]
0x422C	0xE006    B	L___Lib_System_4XX_InitialSetUpRCCRCC290
L___Lib_System_4XX_InitialSetUpRCCRCC289:
;__Lib_System_4XX.c, 538 :: 		
0x422E	0x482A    LDR	R0, [PC, #168]
0x4230	0x6801    LDR	R1, [R0, #0]
0x4232	0xF06F0007  MVN	R0, #7
0x4236	0x4001    ANDS	R1, R0
0x4238	0x4827    LDR	R0, [PC, #156]
0x423A	0x6001    STR	R1, [R0, #0]
L___Lib_System_4XX_InitialSetUpRCCRCC290:
L___Lib_System_4XX_InitialSetUpRCCRCC288:
L___Lib_System_4XX_InitialSetUpRCCRCC286:
L___Lib_System_4XX_InitialSetUpRCCRCC284:
L___Lib_System_4XX_InitialSetUpRCCRCC282:
L___Lib_System_4XX_InitialSetUpRCCRCC280:
L___Lib_System_4XX_InitialSetUpRCCRCC278:
;__Lib_System_4XX.c, 539 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC276:
L___Lib_System_4XX_InitialSetUpRCCRCC275:
L___Lib_System_4XX_InitialSetUpRCCRCC259:
L___Lib_System_4XX_InitialSetUpRCCRCC245:
;__Lib_System_4XX.c, 541 :: 		
0x423C	0x2101    MOVS	R1, #1
0x423E	0xB249    SXTB	R1, R1
0x4240	0x4826    LDR	R0, [PC, #152]
0x4242	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 542 :: 		
0x4244	0x4826    LDR	R0, [PC, #152]
0x4246	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 544 :: 		
0x4248	0xF7FDFF22  BL	__Lib_System_4XX_SystemClockSetDefault+0
;__Lib_System_4XX.c, 546 :: 		
0x424C	0x4825    LDR	R0, [PC, #148]
0x424E	0x6003    STR	R3, [R0, #0]
; ulRCC_PLLCFGR end address is: 12 (R3)
;__Lib_System_4XX.c, 547 :: 		
0x4250	0x4825    LDR	R0, [PC, #148]
0x4252	0x6004    STR	R4, [R0, #0]
;__Lib_System_4XX.c, 548 :: 		
0x4254	0x4825    LDR	R0, [PC, #148]
0x4256	0xEA020100  AND	R1, R2, R0, LSL #0
0x425A	0x4825    LDR	R0, [PC, #148]
0x425C	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 550 :: 		
0x425E	0xF0020001  AND	R0, R2, #1
0x4262	0xB140    CBZ	R0, L___Lib_System_4XX_InitialSetUpRCCRCC2102
; ulRCC_CFGR end address is: 16 (R4)
; ulRCC_CR end address is: 8 (R2)
0x4264	0x4621    MOV	R1, R4
;__Lib_System_4XX.c, 551 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC292:
; ulRCC_CFGR start address is: 4 (R1)
; ulRCC_CR start address is: 8 (R2)
0x4266	0x4822    LDR	R0, [PC, #136]
0x4268	0x6800    LDR	R0, [R0, #0]
0x426A	0xF0000002  AND	R0, R0, #2
0x426E	0x2800    CMP	R0, #0
0x4270	0xD100    BNE	L___Lib_System_4XX_InitialSetUpRCCRCC293
;__Lib_System_4XX.c, 552 :: 		
0x4272	0xE7F8    B	L___Lib_System_4XX_InitialSetUpRCCRCC292
L___Lib_System_4XX_InitialSetUpRCCRCC293:
;__Lib_System_4XX.c, 553 :: 		
; ulRCC_CFGR end address is: 4 (R1)
0x4274	0xE000    B	L___Lib_System_4XX_InitialSetUpRCCRCC291
; ulRCC_CR end address is: 8 (R2)
L___Lib_System_4XX_InitialSetUpRCCRCC2102:
;__Lib_System_4XX.c, 550 :: 		
0x4276	0x4621    MOV	R1, R4
;__Lib_System_4XX.c, 553 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC291:
;__Lib_System_4XX.c, 555 :: 		
; ulRCC_CFGR start address is: 4 (R1)
; ulRCC_CR start address is: 8 (R2)
0x4278	0xF4023080  AND	R0, R2, #65536
0x427C	0xB148    CBZ	R0, L___Lib_System_4XX_InitialSetUpRCCRCC2103
; ulRCC_CR end address is: 8 (R2)
; ulRCC_CFGR end address is: 4 (R1)
;__Lib_System_4XX.c, 556 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC295:
; ulRCC_CR start address is: 8 (R2)
; ulRCC_CFGR start address is: 4 (R1)
0x427E	0x481C    LDR	R0, [PC, #112]
0x4280	0x6800    LDR	R0, [R0, #0]
0x4282	0xF4003000  AND	R0, R0, #131072
0x4286	0xB900    CBNZ	R0, L___Lib_System_4XX_InitialSetUpRCCRCC296
;__Lib_System_4XX.c, 557 :: 		
0x4288	0xE7F9    B	L___Lib_System_4XX_InitialSetUpRCCRCC295
L___Lib_System_4XX_InitialSetUpRCCRCC296:
;__Lib_System_4XX.c, 558 :: 		
0x428A	0x9201    STR	R2, [SP, #4]
; ulRCC_CFGR end address is: 4 (R1)
0x428C	0x460A    MOV	R2, R1
0x428E	0x9901    LDR	R1, [SP, #4]
0x4290	0xE002    B	L___Lib_System_4XX_InitialSetUpRCCRCC294
; ulRCC_CR end address is: 8 (R2)
L___Lib_System_4XX_InitialSetUpRCCRCC2103:
;__Lib_System_4XX.c, 555 :: 		
0x4292	0x9101    STR	R1, [SP, #4]
0x4294	0x4611    MOV	R1, R2
0x4296	0x9A01    LDR	R2, [SP, #4]
;__Lib_System_4XX.c, 558 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC294:
;__Lib_System_4XX.c, 560 :: 		
; ulRCC_CR start address is: 4 (R1)
; ulRCC_CFGR start address is: 8 (R2)
0x4298	0xF0017080  AND	R0, R1, #16777216
; ulRCC_CR end address is: 4 (R1)
0x429C	0xB170    CBZ	R0, L___Lib_System_4XX_InitialSetUpRCCRCC2104
;__Lib_System_4XX.c, 561 :: 		
0x429E	0x4814    LDR	R0, [PC, #80]
0x42A0	0x6800    LDR	R0, [R0, #0]
0x42A2	0xF0407180  ORR	R1, R0, #16777216
0x42A6	0x4812    LDR	R0, [PC, #72]
0x42A8	0x6001    STR	R1, [R0, #0]
; ulRCC_CFGR end address is: 8 (R2)
0x42AA	0x4611    MOV	R1, R2
;__Lib_System_4XX.c, 562 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC298:
; ulRCC_CFGR start address is: 4 (R1)
0x42AC	0x4810    LDR	R0, [PC, #64]
0x42AE	0x6800    LDR	R0, [R0, #0]
0x42B0	0xF0007000  AND	R0, R0, #33554432
0x42B4	0xB900    CBNZ	R0, L___Lib_System_4XX_InitialSetUpRCCRCC299
;__Lib_System_4XX.c, 563 :: 		
0x42B6	0xE7F9    B	L___Lib_System_4XX_InitialSetUpRCCRCC298
L___Lib_System_4XX_InitialSetUpRCCRCC299:
;__Lib_System_4XX.c, 564 :: 		
0x42B8	0x460A    MOV	R2, R1
0x42BA	0xE7FF    B	L___Lib_System_4XX_InitialSetUpRCCRCC297
; ulRCC_CFGR end address is: 4 (R1)
L___Lib_System_4XX_InitialSetUpRCCRCC2104:
;__Lib_System_4XX.c, 560 :: 		
;__Lib_System_4XX.c, 564 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC297:
;__Lib_System_4XX.c, 567 :: 		
; ulRCC_CFGR start address is: 8 (R2)
; ulRCC_CFGR end address is: 8 (R2)
L___Lib_System_4XX_InitialSetUpRCCRCC2100:
; ulRCC_CFGR start address is: 8 (R2)
0x42BC	0x480A    LDR	R0, [PC, #40]
0x42BE	0x6800    LDR	R0, [R0, #0]
0x42C0	0xF000010C  AND	R1, R0, #12
0x42C4	0x0090    LSLS	R0, R2, #2
0x42C6	0xF000000C  AND	R0, R0, #12
0x42CA	0x4281    CMP	R1, R0
0x42CC	0xD000    BEQ	L___Lib_System_4XX_InitialSetUpRCCRCC2101
;__Lib_System_4XX.c, 568 :: 		
; ulRCC_CFGR end address is: 8 (R2)
0x42CE	0xE7F5    B	L___Lib_System_4XX_InitialSetUpRCCRCC2100
L___Lib_System_4XX_InitialSetUpRCCRCC2101:
;__Lib_System_4XX.c, 570 :: 		
L_end_InitialSetUpRCCRCC2:
0x42D0	0xF8DDE000  LDR	LR, [SP, #0]
0x42D4	0xB002    ADD	SP, SP, #8
0x42D6	0x4770    BX	LR
0x42D8	0x3C004002  	FLASH_ACR+0
0x42DC	0x80204247  	FLASH_ACR+0
0x42E0	0x80244247  	FLASH_ACR+0
0x42E4	0x38044002  	RCC_PLLCFGR+0
0x42E8	0x38084002  	RCC_CFGR+0
0x42EC	0xFFFF000F  	#1048575
0x42F0	0x38004002  	RCC_CR+0
; end of __Lib_System_4XX_InitialSetUpRCCRCC2
__Lib_System_4XX_SystemClockSetDefault:
;__Lib_System_4XX.c, 444 :: 		
0x2090	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 447 :: 		
0x2092	0x480D    LDR	R0, [PC, #52]
0x2094	0x6800    LDR	R0, [R0, #0]
0x2096	0xF0400101  ORR	R1, R0, #1
0x209A	0x480B    LDR	R0, [PC, #44]
0x209C	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 450 :: 		
0x209E	0x2100    MOVS	R1, #0
0x20A0	0x480A    LDR	R0, [PC, #40]
0x20A2	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 453 :: 		
0x20A4	0x4808    LDR	R0, [PC, #32]
0x20A6	0x6801    LDR	R1, [R0, #0]
0x20A8	0x4809    LDR	R0, [PC, #36]
0x20AA	0x4001    ANDS	R1, R0
0x20AC	0x4806    LDR	R0, [PC, #24]
0x20AE	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 456 :: 		
0x20B0	0x4908    LDR	R1, [PC, #32]
0x20B2	0x4809    LDR	R0, [PC, #36]
0x20B4	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 459 :: 		
0x20B6	0x4804    LDR	R0, [PC, #16]
0x20B8	0x6801    LDR	R1, [R0, #0]
0x20BA	0xF46F2080  MVN	R0, #262144
0x20BE	0x4001    ANDS	R1, R0
0x20C0	0x4801    LDR	R0, [PC, #4]
0x20C2	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 463 :: 		
L_end_SystemClockSetDefault:
0x20C4	0xB001    ADD	SP, SP, #4
0x20C6	0x4770    BX	LR
0x20C8	0x38004002  	RCC_CR+0
0x20CC	0x38084002  	RCC_CFGR+0
0x20D0	0xFFFFFEF6  	#-17367041
0x20D4	0x30102400  	#603992080
0x20D8	0x38044002  	RCC_PLLCFGR+0
; end of __Lib_System_4XX_SystemClockSetDefault
__Lib_System_4XX_InitialSetUpFosc:
;__Lib_System_4XX.c, 382 :: 		
0x3F70	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 383 :: 		
0x3F72	0x4904    LDR	R1, [PC, #16]
0x3F74	0x4804    LDR	R0, [PC, #16]
0x3F76	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 384 :: 		
0x3F78	0x4904    LDR	R1, [PC, #16]
0x3F7A	0x4805    LDR	R0, [PC, #20]
0x3F7C	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 385 :: 		
L_end_InitialSetUpFosc:
0x3F7E	0xB001    ADD	SP, SP, #4
0x3F80	0x4770    BX	LR
0x3F82	0xBF00    NOP
0x3F84	0x90400002  	#168000
0x3F88	0x0A0C2000  	___System_CLOCK_IN_KHZ+0
0x3F8C	0x00030000  	#3
0x3F90	0x0A1C2000  	__VOLTAGE_RANGE+0
; end of __Lib_System_4XX_InitialSetUpFosc
___GenExcept:
;__Lib_System_4XX.c, 327 :: 		
0x3F68	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 328 :: 		
L___GenExcept30:
0x3F6A	0xE7FE    B	L___GenExcept30
;__Lib_System_4XX.c, 329 :: 		
L_end___GenExcept:
0x3F6C	0xB001    ADD	SP, SP, #4
0x3F6E	0x4770    BX	LR
; end of ___GenExcept
___EnableFPU:
;__Lib_System_4XX.c, 360 :: 		
0x42F4	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 363 :: 		
0x42F6	0xF64E5088  MOVW	R0, #60808
;__Lib_System_4XX.c, 364 :: 		
0x42FA	0xF2CE0000  MOVT	R0, #57344
;__Lib_System_4XX.c, 366 :: 		
0x42FE	0x6801    LDR	R1, [R0, #0]
;__Lib_System_4XX.c, 368 :: 		
0x4300	0xF4410170  ORR	R1, R1, #15728640
;__Lib_System_4XX.c, 370 :: 		
0x4304	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 372 :: 		
0x4306	0xBF00    NOP
;__Lib_System_4XX.c, 373 :: 		
0x4308	0xBF00    NOP
;__Lib_System_4XX.c, 374 :: 		
0x430A	0xBF00    NOP
;__Lib_System_4XX.c, 375 :: 		
0x430C	0xBF00    NOP
;__Lib_System_4XX.c, 377 :: 		
0x430E	0xEEF10A10  VMRS	R0, FPSCR
;__Lib_System_4XX.c, 378 :: 		
0x4312	0xF4400040  ORR	R0, R0, #12582912
;__Lib_System_4XX.c, 379 :: 		
0x4316	0xEEE10A10  VMSR	FPSCR, R0
;__Lib_System_4XX.c, 380 :: 		
L_end___EnableFPU:
0x431A	0xB001    ADD	SP, SP, #4
0x431C	0x4770    BX	LR
; end of ___EnableFPU
0x5168	0xB500    PUSH	(R14)
0x516A	0xF8DFB024  LDR	R11, [PC, #36]
0x516E	0xF8DFA024  LDR	R10, [PC, #36]
0x5172	0xF8DFC024  LDR	R12, [PC, #36]
0x5176	0xF7FDFB09  BL	10124
0x517A	0xF8DFB020  LDR	R11, [PC, #32]
0x517E	0xF8DFA020  LDR	R10, [PC, #32]
0x5182	0xF8DFC020  LDR	R12, [PC, #32]
0x5186	0xF7FDFB01  BL	10124
0x518A	0xBD00    POP	(R15)
0x518C	0x4770    BX	LR
0x518E	0xBF00    NOP
0x5190	0x00002000  	#536870912
0x5194	0x007D2000  	#536871037
0x5198	0x4E580000  	#20056
0x519C	0x007E2000  	#536871038
0x51A0	0x00842000  	#536871044
0x51A4	0x51600000  	#20832
0x5204	0xB500    PUSH	(R14)
0x5206	0xF8DFB010  LDR	R11, [PC, #16]
0x520A	0xF8DFA010  LDR	R10, [PC, #16]
0x520E	0xF7FDFA4F  BL	9904
0x5212	0xBD00    POP	(R15)
0x5214	0x4770    BX	LR
0x5216	0xBF00    NOP
0x5218	0x00002000  	#536870912
0x521C	0x0A582000  	#536873560
_Timer4_interrupt:
;timers.c, 39 :: 		void Timer4_interrupt() iv IVT_INT_TIM4 {
;timers.c, 40 :: 		TIM4_SR.UIF = 0;
0x4CE4	0x2100    MOVS	R1, #0
0x4CE6	0xB249    SXTB	R1, R1
0x4CE8	0x4847    LDR	R0, [PC, #284]
0x4CEA	0x6001    STR	R1, [R0, #0]
;timers.c, 56 :: 		if(bitBatteryChangeBlockCounter){
0x4CEC	0x4947    LDR	R1, [PC, #284]
0x4CEE	0x6808    LDR	R0, [R1, #0]
0x4CF0	0xB168    CBZ	R0, L_Timer4_interrupt8
;timers.c, 57 :: 		batteryChangeBlockCounter++;
0x4CF2	0x4947    LDR	R1, [PC, #284]
0x4CF4	0x8808    LDRH	R0, [R1, #0]
0x4CF6	0x1C40    ADDS	R0, R0, #1
0x4CF8	0xB280    UXTH	R0, R0
0x4CFA	0x8008    STRH	R0, [R1, #0]
;timers.c, 58 :: 		if(batteryChangeBlockCounter >= 60){
0x4CFC	0x283C    CMP	R0, #60
0x4CFE	0xD306    BCC	L_Timer4_interrupt9
;timers.c, 59 :: 		bitBatteryChangeBlockCounter = 0;
0x4D00	0x2100    MOVS	R1, #0
0x4D02	0xB249    SXTB	R1, R1
0x4D04	0x4841    LDR	R0, [PC, #260]
0x4D06	0x6001    STR	R1, [R0, #0]
;timers.c, 60 :: 		batteryChangeBlockCounter = 0;
0x4D08	0x2100    MOVS	R1, #0
0x4D0A	0x4841    LDR	R0, [PC, #260]
0x4D0C	0x8001    STRH	R1, [R0, #0]
;timers.c, 61 :: 		}
L_Timer4_interrupt9:
;timers.c, 62 :: 		}
L_Timer4_interrupt8:
;timers.c, 66 :: 		countedTimer = 1;
0x4D0E	0x2101    MOVS	R1, #1
0x4D10	0xB249    SXTB	R1, R1
0x4D12	0x4840    LDR	R0, [PC, #256]
0x4D14	0x6001    STR	R1, [R0, #0]
;timers.c, 67 :: 		buzzerCounter++;
0x4D16	0x4940    LDR	R1, [PC, #256]
0x4D18	0x8808    LDRH	R0, [R1, #0]
0x4D1A	0x1C40    ADDS	R0, R0, #1
0x4D1C	0x8008    STRH	R0, [R1, #0]
;timers.c, 68 :: 		battry_percentage_check_counter++;
0x4D1E	0x493F    LDR	R1, [PC, #252]
0x4D20	0x8808    LDRH	R0, [R1, #0]
0x4D22	0x1C40    ADDS	R0, R0, #1
0x4D24	0xB280    UXTH	R0, R0
0x4D26	0x8008    STRH	R0, [R1, #0]
;timers.c, 69 :: 		if(battry_percentage_check_counter >= 80){
0x4D28	0x2850    CMP	R0, #80
0x4D2A	0xD306    BCC	L_Timer4_interrupt10
;timers.c, 70 :: 		battry_percentage_check = 1;
0x4D2C	0x2101    MOVS	R1, #1
0x4D2E	0xB249    SXTB	R1, R1
0x4D30	0x483B    LDR	R0, [PC, #236]
0x4D32	0x6001    STR	R1, [R0, #0]
;timers.c, 71 :: 		battry_percentage_check_counter = 0;
0x4D34	0x2100    MOVS	R1, #0
0x4D36	0x4839    LDR	R0, [PC, #228]
0x4D38	0x8001    STRH	R1, [R0, #0]
;timers.c, 72 :: 		}
L_Timer4_interrupt10:
;timers.c, 74 :: 		if(buzzerCounter >= 10000){
0x4D3A	0x4837    LDR	R0, [PC, #220]
0x4D3C	0x8801    LDRH	R1, [R0, #0]
0x4D3E	0xF2427010  MOVW	R0, #10000
0x4D42	0x4281    CMP	R1, R0
0x4D44	0xD302    BCC	L_Timer4_interrupt11
;timers.c, 75 :: 		buzzerCounter = 0;
0x4D46	0x2100    MOVS	R1, #0
0x4D48	0x4833    LDR	R0, [PC, #204]
0x4D4A	0x8001    STRH	R1, [R0, #0]
;timers.c, 76 :: 		}
L_Timer4_interrupt11:
;timers.c, 78 :: 		if(battery_change){
0x4D4C	0x4935    LDR	R1, [PC, #212]
0x4D4E	0x6808    LDR	R0, [R1, #0]
0x4D50	0xB158    CBZ	R0, L_Timer4_interrupt12
;timers.c, 79 :: 		battery_change_count++;
0x4D52	0x4935    LDR	R1, [PC, #212]
0x4D54	0xF9B10000  LDRSH	R0, [R1, #0]
0x4D58	0x1C40    ADDS	R0, R0, #1
0x4D5A	0xB200    SXTH	R0, R0
0x4D5C	0x8008    STRH	R0, [R1, #0]
;timers.c, 80 :: 		if(battery_change_count> 100){
0x4D5E	0x2864    CMP	R0, #100
0x4D60	0xDD03    BLE	L_Timer4_interrupt13
;timers.c, 81 :: 		battery_change_count = 0;
0x4D62	0x2100    MOVS	R1, #0
0x4D64	0xB209    SXTH	R1, R1
0x4D66	0x4830    LDR	R0, [PC, #192]
0x4D68	0x8001    STRH	R1, [R0, #0]
;timers.c, 82 :: 		}
L_Timer4_interrupt13:
;timers.c, 83 :: 		}
L_Timer4_interrupt12:
;timers.c, 85 :: 		if(bitStart3SecondsCount){
0x4D6A	0x4930    LDR	R1, [PC, #192]
0x4D6C	0x6808    LDR	R0, [R1, #0]
0x4D6E	0xB178    CBZ	R0, L_Timer4_interrupt14
;timers.c, 86 :: 		delay3secndsCount++;
0x4D70	0x492F    LDR	R1, [PC, #188]
0x4D72	0x8808    LDRH	R0, [R1, #0]
0x4D74	0x1C40    ADDS	R0, R0, #1
0x4D76	0xB280    UXTH	R0, R0
0x4D78	0x8008    STRH	R0, [R1, #0]
;timers.c, 87 :: 		if(delay3secndsCount >= 60){
0x4D7A	0x283C    CMP	R0, #60
0x4D7C	0xD308    BCC	L_Timer4_interrupt15
;timers.c, 88 :: 		bitDelay3Seconds = 0;
0x4D7E	0x2100    MOVS	R1, #0
0x4D80	0xB249    SXTB	R1, R1
0x4D82	0x482C    LDR	R0, [PC, #176]
0x4D84	0x6001    STR	R1, [R0, #0]
;timers.c, 89 :: 		bitStart3SecondsCount = 0;
0x4D86	0x4829    LDR	R0, [PC, #164]
0x4D88	0x6001    STR	R1, [R0, #0]
;timers.c, 90 :: 		delay3secndsCount = 0;
0x4D8A	0x2100    MOVS	R1, #0
0x4D8C	0x4828    LDR	R0, [PC, #160]
0x4D8E	0x8001    STRH	R1, [R0, #0]
;timers.c, 91 :: 		}
L_Timer4_interrupt15:
;timers.c, 92 :: 		}
L_Timer4_interrupt14:
;timers.c, 94 :: 		if(bitControlTaken){
0x4D90	0x4929    LDR	R1, [PC, #164]
0x4D92	0x6808    LDR	R0, [R1, #0]
0x4D94	0xB188    CBZ	R0, L_Timer4_interrupt16
;timers.c, 95 :: 		controlTakenCount++;
0x4D96	0x4929    LDR	R1, [PC, #164]
0x4D98	0xF9B10000  LDRSH	R0, [R1, #0]
0x4D9C	0x1C40    ADDS	R0, R0, #1
0x4D9E	0xB200    SXTH	R0, R0
0x4DA0	0x8008    STRH	R0, [R1, #0]
;timers.c, 96 :: 		if(controlTakenCount>60){
0x4DA2	0x283C    CMP	R0, #60
0x4DA4	0xDD09    BLE	L_Timer4_interrupt17
;timers.c, 97 :: 		controlTakenCount = 0;
0x4DA6	0x2100    MOVS	R1, #0
0x4DA8	0xB209    SXTH	R1, R1
0x4DAA	0x4824    LDR	R0, [PC, #144]
0x4DAC	0x8001    STRH	R1, [R0, #0]
;timers.c, 98 :: 		bitControlTaken = 0;
0x4DAE	0x2100    MOVS	R1, #0
0x4DB0	0xB249    SXTB	R1, R1
0x4DB2	0x4821    LDR	R0, [PC, #132]
0x4DB4	0x6001    STR	R1, [R0, #0]
;timers.c, 99 :: 		control_taken = 0;
0x4DB6	0x4822    LDR	R0, [PC, #136]
0x4DB8	0x6001    STR	R1, [R0, #0]
;timers.c, 100 :: 		}
L_Timer4_interrupt17:
;timers.c, 101 :: 		}
L_Timer4_interrupt16:
;timers.c, 103 :: 		countJoystickConnection++;
0x4DBA	0x4922    LDR	R1, [PC, #136]
0x4DBC	0x8808    LDRH	R0, [R1, #0]
0x4DBE	0x1C40    ADDS	R0, R0, #1
0x4DC0	0xB280    UXTH	R0, R0
0x4DC2	0x8008    STRH	R0, [R1, #0]
;timers.c, 104 :: 		if(countJoystickConnection > 60){
0x4DC4	0x283C    CMP	R0, #60
0x4DC6	0xD906    BLS	L_Timer4_interrupt18
;timers.c, 105 :: 		countJoystickConnection = 60;
0x4DC8	0x213C    MOVS	R1, #60
0x4DCA	0x481E    LDR	R0, [PC, #120]
0x4DCC	0x8001    STRH	R1, [R0, #0]
;timers.c, 106 :: 		bitCheckJoystick = 1;
0x4DCE	0x2101    MOVS	R1, #1
0x4DD0	0xB249    SXTB	R1, R1
0x4DD2	0x481D    LDR	R0, [PC, #116]
0x4DD4	0x6001    STR	R1, [R0, #0]
;timers.c, 107 :: 		}
L_Timer4_interrupt18:
;timers.c, 110 :: 		couterJoystickDisplay++;
0x4DD6	0x491D    LDR	R1, [PC, #116]
0x4DD8	0x8808    LDRH	R0, [R1, #0]
0x4DDA	0x1C40    ADDS	R0, R0, #1
0x4DDC	0xB280    UXTH	R0, R0
0x4DDE	0x8008    STRH	R0, [R1, #0]
;timers.c, 111 :: 		if(couterJoystickDisplay == 1){
0x4DE0	0x2801    CMP	R0, #1
0x4DE2	0xD104    BNE	L_Timer4_interrupt19
;timers.c, 112 :: 		bitCheckStatusDisplay = 1;
0x4DE4	0x2101    MOVS	R1, #1
0x4DE6	0xB249    SXTB	R1, R1
0x4DE8	0x4819    LDR	R0, [PC, #100]
0x4DEA	0x6001    STR	R1, [R0, #0]
;timers.c, 113 :: 		}
0x4DEC	0xE00A    B	L_Timer4_interrupt20
L_Timer4_interrupt19:
;timers.c, 114 :: 		else if(couterJoystickDisplay >= 2){
0x4DEE	0x4817    LDR	R0, [PC, #92]
0x4DF0	0x8800    LDRH	R0, [R0, #0]
0x4DF2	0x2802    CMP	R0, #2
0x4DF4	0xD306    BCC	L_Timer4_interrupt21
;timers.c, 115 :: 		bitCheckStatusJoystick = 1;
0x4DF6	0x2101    MOVS	R1, #1
0x4DF8	0xB249    SXTB	R1, R1
0x4DFA	0x4816    LDR	R0, [PC, #88]
0x4DFC	0x6001    STR	R1, [R0, #0]
;timers.c, 116 :: 		couterJoystickDisplay = 0;
0x4DFE	0x2100    MOVS	R1, #0
0x4E00	0x4812    LDR	R0, [PC, #72]
0x4E02	0x8001    STRH	R1, [R0, #0]
;timers.c, 117 :: 		}
L_Timer4_interrupt21:
L_Timer4_interrupt20:
;timers.c, 125 :: 		}
L_end_Timer4_interrupt:
0x4E04	0x4770    BX	LR
0x4E06	0xBF00    NOP
0x4E08	0x02004201  	TIM4_SR+0
0x4E0C	0x0FA82200  	_bitBatteryChangeBlockCounter+0
0x4E10	0x00102000  	_batteryChangeBlockCounter+0
0x4E14	0x0FB02200  	_countedTimer+0
0x4E18	0x00142000  	_buzzerCounter+0
0x4E1C	0x00122000  	_battry_percentage_check_counter+0
0x4E20	0x0FAC2200  	_battry_percentage_check+0
0x4E24	0x0FA02200  	_battery_change+0
0x4E28	0x00042000  	_battery_change_count+0
0x4E2C	0x0FB82200  	_bitStart3SecondsCount+0
0x4E30	0x006E2000  	_delay3secndsCount+0
0x4E34	0x0FB42200  	_bitDelay3Seconds+0
0x4E38	0x40F42201  	_bitControlTaken+0
0x4E3C	0x00702000  	_controlTakenCount+0
0x4E40	0x408C2201  	_control_taken+0
0x4E44	0x00722000  	_countJoystickConnection+0
0x4E48	0x40A42201  	_bitCheckJoystick+0
0x4E4C	0x00742000  	_couterJoystickDisplay+0
0x4E50	0x40DC2201  	_bitCheckStatusDisplay+0
0x4E54	0x40D82201  	_bitCheckStatusJoystick+0
; end of _Timer4_interrupt
_interruptDisplay:
;interruptUart4.c, 8 :: 		void interruptDisplay() iv IVT_INT_UART4 ics ICS_AUTO {
0x4544	0xB081    SUB	SP, SP, #4
0x4546	0xF8CDE000  STR	LR, [SP, #0]
;interruptUart4.c, 9 :: 		receive4 = UART4_Read();
0x454A	0xF7FDFE03  BL	_UART4_Read+0
0x454E	0x497F    LDR	R1, [PC, #508]
0x4550	0x7008    STRB	R0, [R1, #0]
;interruptUart4.c, 11 :: 		if (receive4 == 0x5A && rcv_count_helper4 == 0 && startReceivingData4 == 0x00) {
0x4552	0xB2C0    UXTB	R0, R0
0x4554	0x285A    CMP	R0, #90
0x4556	0xD10D    BNE	L__interruptDisplay127
0x4558	0x487D    LDR	R0, [PC, #500]
0x455A	0x7800    LDRB	R0, [R0, #0]
0x455C	0xB950    CBNZ	R0, L__interruptDisplay126
0x455E	0x497D    LDR	R1, [PC, #500]
0x4560	0x6808    LDR	R0, [R1, #0]
0x4562	0xB938    CBNZ	R0, L__interruptDisplay125
L__interruptDisplay124:
;interruptUart4.c, 12 :: 		rcv_helper4[0] = receive4;
0x4564	0x4879    LDR	R0, [PC, #484]
0x4566	0x7801    LDRB	R1, [R0, #0]
0x4568	0x487B    LDR	R0, [PC, #492]
0x456A	0x7001    STRB	R1, [R0, #0]
;interruptUart4.c, 13 :: 		rcv_count_helper4 = 1;
0x456C	0x2101    MOVS	R1, #1
0x456E	0x4878    LDR	R0, [PC, #480]
0x4570	0x7001    STRB	R1, [R0, #0]
;interruptUart4.c, 14 :: 		}
0x4572	0xE092    B	L_interruptDisplay3
;interruptUart4.c, 11 :: 		if (receive4 == 0x5A && rcv_count_helper4 == 0 && startReceivingData4 == 0x00) {
L__interruptDisplay127:
L__interruptDisplay126:
L__interruptDisplay125:
;interruptUart4.c, 15 :: 		else if (receive4 == 0xA5 && rcv_count_helper4 == 1 && startReceivingData4 == 0x00) {
0x4574	0x4875    LDR	R0, [PC, #468]
0x4576	0x7800    LDRB	R0, [R0, #0]
0x4578	0x28A5    CMP	R0, #165
0x457A	0xD112    BNE	L__interruptDisplay130
0x457C	0x4874    LDR	R0, [PC, #464]
0x457E	0x7800    LDRB	R0, [R0, #0]
0x4580	0x2801    CMP	R0, #1
0x4582	0xD10E    BNE	L__interruptDisplay129
0x4584	0x4973    LDR	R1, [PC, #460]
0x4586	0x6808    LDR	R0, [R1, #0]
0x4588	0xB958    CBNZ	R0, L__interruptDisplay128
L__interruptDisplay123:
;interruptUart4.c, 16 :: 		rcv_helper4[1] = receive4;
0x458A	0x4870    LDR	R0, [PC, #448]
0x458C	0x7801    LDRB	R1, [R0, #0]
0x458E	0x4873    LDR	R0, [PC, #460]
0x4590	0x7001    STRB	R1, [R0, #0]
;interruptUart4.c, 17 :: 		rcv_count_helper4 = 2;
0x4592	0x2102    MOVS	R1, #2
0x4594	0x486E    LDR	R0, [PC, #440]
0x4596	0x7001    STRB	R1, [R0, #0]
;interruptUart4.c, 18 :: 		startReceivingData4 = 0x01;
0x4598	0x2101    MOVS	R1, #1
0x459A	0xB249    SXTB	R1, R1
0x459C	0x486D    LDR	R0, [PC, #436]
0x459E	0x6001    STR	R1, [R0, #0]
;interruptUart4.c, 19 :: 		}
0x45A0	0xE07B    B	L_interruptDisplay7
;interruptUart4.c, 15 :: 		else if (receive4 == 0xA5 && rcv_count_helper4 == 1 && startReceivingData4 == 0x00) {
L__interruptDisplay130:
L__interruptDisplay129:
L__interruptDisplay128:
;interruptUart4.c, 20 :: 		else if (rcv_count_helper4 != 2 && startReceivingData4 == 0x00) {
0x45A2	0x486B    LDR	R0, [PC, #428]
0x45A4	0x7800    LDRB	R0, [R0, #0]
0x45A6	0x2802    CMP	R0, #2
0x45A8	0xD00F    BEQ	L__interruptDisplay132
0x45AA	0x496A    LDR	R1, [PC, #424]
0x45AC	0x6808    LDR	R0, [R1, #0]
0x45AE	0xB960    CBNZ	R0, L__interruptDisplay131
L__interruptDisplay122:
;interruptUart4.c, 21 :: 		rcv_helper4[0] = 0x00;
0x45B0	0x2100    MOVS	R1, #0
0x45B2	0x4869    LDR	R0, [PC, #420]
0x45B4	0x7001    STRB	R1, [R0, #0]
;interruptUart4.c, 22 :: 		rcv_helper4[1] = 0x00;
0x45B6	0x2100    MOVS	R1, #0
0x45B8	0x4868    LDR	R0, [PC, #416]
0x45BA	0x7001    STRB	R1, [R0, #0]
;interruptUart4.c, 23 :: 		rcv_count_helper4 = 0;
0x45BC	0x2100    MOVS	R1, #0
0x45BE	0x4864    LDR	R0, [PC, #400]
0x45C0	0x7001    STRB	R1, [R0, #0]
;interruptUart4.c, 24 :: 		uart_count4 = 0;
0x45C2	0x2100    MOVS	R1, #0
0x45C4	0x4866    LDR	R0, [PC, #408]
0x45C6	0x8001    STRH	R1, [R0, #0]
;interruptUart4.c, 25 :: 		}
0x45C8	0xE067    B	L_interruptDisplay11
;interruptUart4.c, 20 :: 		else if (rcv_count_helper4 != 2 && startReceivingData4 == 0x00) {
L__interruptDisplay132:
L__interruptDisplay131:
;interruptUart4.c, 26 :: 		else if (rcv_count_helper4 == 2 && startReceivingData4 == 0x01) {
0x45CA	0x4861    LDR	R0, [PC, #388]
0x45CC	0x7800    LDRB	R0, [R0, #0]
0x45CE	0x2802    CMP	R0, #2
0x45D0	0xF040804A  BNE	L__interruptDisplay134
0x45D4	0x495F    LDR	R1, [PC, #380]
0x45D6	0x6808    LDR	R0, [R1, #0]
0x45D8	0x2800    CMP	R0, #0
0x45DA	0xF0008045  BEQ	L__interruptDisplay133
L__interruptDisplay121:
;interruptUart4.c, 27 :: 		uart_receive4[0] = rcv_helper4[0];
0x45DE	0x4B5E    LDR	R3, [PC, #376]
0x45E0	0x7819    LDRB	R1, [R3, #0]
0x45E2	0x4860    LDR	R0, [PC, #384]
0x45E4	0x7001    STRB	R1, [R0, #0]
;interruptUart4.c, 28 :: 		uart_receive4[1] = rcv_helper4[1];
0x45E6	0x4A5D    LDR	R2, [PC, #372]
0x45E8	0x7811    LDRB	R1, [R2, #0]
0x45EA	0x485F    LDR	R0, [PC, #380]
0x45EC	0x7001    STRB	R1, [R0, #0]
;interruptUart4.c, 29 :: 		rcv_count_helper4 = 0;
0x45EE	0x2100    MOVS	R1, #0
0x45F0	0x4857    LDR	R0, [PC, #348]
0x45F2	0x7001    STRB	R1, [R0, #0]
;interruptUart4.c, 30 :: 		rcv_helper4[0] = 0x00;
0x45F4	0x2000    MOVS	R0, #0
0x45F6	0x7018    STRB	R0, [R3, #0]
;interruptUart4.c, 31 :: 		rcv_helper4[1] = 0x00;
0x45F8	0x2000    MOVS	R0, #0
0x45FA	0x7010    STRB	R0, [R2, #0]
;interruptUart4.c, 32 :: 		uart_receive4[2] = receive4;
0x45FC	0x4A53    LDR	R2, [PC, #332]
0x45FE	0x7811    LDRB	R1, [R2, #0]
0x4600	0x485A    LDR	R0, [PC, #360]
0x4602	0x7001    STRB	R1, [R0, #0]
;interruptUart4.c, 33 :: 		uart_count4 = 3;
0x4604	0x2103    MOVS	R1, #3
0x4606	0x4856    LDR	R0, [PC, #344]
0x4608	0x8001    STRH	R1, [R0, #0]
;interruptUart4.c, 34 :: 		if (uart_receive4[2] > 6) {
0x460A	0x4610    MOV	R0, R2
0x460C	0x7800    LDRB	R0, [R0, #0]
0x460E	0x2806    CMP	R0, #6
0x4610	0xD929    BLS	L_interruptDisplay15
;interruptUart4.c, 35 :: 		rcv_helper4[0] = 0x00;
0x4612	0x2000    MOVS	R0, #0
0x4614	0x4B50    LDR	R3, [PC, #320]
0x4616	0x7018    STRB	R0, [R3, #0]
;interruptUart4.c, 36 :: 		rcv_helper4[1] = 0x00;
0x4618	0x2000    MOVS	R0, #0
0x461A	0x4A50    LDR	R2, [PC, #320]
0x461C	0x7010    STRB	R0, [R2, #0]
;interruptUart4.c, 37 :: 		uart_count4 = 0;
0x461E	0x2100    MOVS	R1, #0
0x4620	0x484F    LDR	R0, [PC, #316]
0x4622	0x8001    STRH	R1, [R0, #0]
;interruptUart4.c, 38 :: 		startReceivingData4 = 0x00;
0x4624	0x2100    MOVS	R1, #0
0x4626	0xB249    SXTB	R1, R1
0x4628	0x484A    LDR	R0, [PC, #296]
0x462A	0x6001    STR	R1, [R0, #0]
;interruptUart4.c, 39 :: 		rcv_count_helper4 = 0;
0x462C	0x2100    MOVS	R1, #0
0x462E	0x4848    LDR	R0, [PC, #288]
0x4630	0x7001    STRB	R1, [R0, #0]
;interruptUart4.c, 40 :: 		rcv_helper4[0] = 0x00;
0x4632	0x2000    MOVS	R0, #0
0x4634	0x7018    STRB	R0, [R3, #0]
;interruptUart4.c, 41 :: 		rcv_helper4[1] = 0x00;
0x4636	0x2000    MOVS	R0, #0
0x4638	0x7010    STRB	R0, [R2, #0]
;interruptUart4.c, 43 :: 		for (i = 0; i < 10; i++) {
0x463A	0x2100    MOVS	R1, #0
0x463C	0xB209    SXTH	R1, R1
0x463E	0x484C    LDR	R0, [PC, #304]
0x4640	0x8001    STRH	R1, [R0, #0]
L_interruptDisplay16:
0x4642	0x484B    LDR	R0, [PC, #300]
0x4644	0xF9B00000  LDRSH	R0, [R0, #0]
0x4648	0x280A    CMP	R0, #10
0x464A	0xDA0C    BGE	L_interruptDisplay17
;interruptUart4.c, 44 :: 		uart_receive4[i] = 0x00;
0x464C	0x4A48    LDR	R2, [PC, #288]
0x464E	0xF9B21000  LDRSH	R1, [R2, #0]
0x4652	0x4844    LDR	R0, [PC, #272]
0x4654	0x1841    ADDS	R1, R0, R1
0x4656	0x2000    MOVS	R0, #0
0x4658	0x7008    STRB	R0, [R1, #0]
;interruptUart4.c, 43 :: 		for (i = 0; i < 10; i++) {
0x465A	0x4610    MOV	R0, R2
0x465C	0xF9B00000  LDRSH	R0, [R0, #0]
0x4660	0x1C40    ADDS	R0, R0, #1
0x4662	0x8010    STRH	R0, [R2, #0]
;interruptUart4.c, 45 :: 		}
0x4664	0xE7ED    B	L_interruptDisplay16
L_interruptDisplay17:
;interruptUart4.c, 46 :: 		}
L_interruptDisplay15:
;interruptUart4.c, 47 :: 		}
0x4666	0xE018    B	L_interruptDisplay19
;interruptUart4.c, 26 :: 		else if (rcv_count_helper4 == 2 && startReceivingData4 == 0x01) {
L__interruptDisplay134:
L__interruptDisplay133:
;interruptUart4.c, 48 :: 		else if (rcv_count_helper4 == 0 && startReceivingData4 == 0x01 && uart_count4 < uart_receive4[2] + 3) {
0x4668	0x4839    LDR	R0, [PC, #228]
0x466A	0x7800    LDRB	R0, [R0, #0]
0x466C	0xB9A8    CBNZ	R0, L__interruptDisplay137
0x466E	0x4939    LDR	R1, [PC, #228]
0x4670	0x6808    LDR	R0, [R1, #0]
0x4672	0xB190    CBZ	R0, L__interruptDisplay136
0x4674	0x483D    LDR	R0, [PC, #244]
0x4676	0x7800    LDRB	R0, [R0, #0]
0x4678	0x1CC1    ADDS	R1, R0, #3
0x467A	0xB209    SXTH	R1, R1
0x467C	0x4838    LDR	R0, [PC, #224]
0x467E	0x8800    LDRH	R0, [R0, #0]
0x4680	0x4288    CMP	R0, R1
0x4682	0xD20A    BCS	L__interruptDisplay135
L__interruptDisplay120:
;interruptUart4.c, 49 :: 		uart_receive4[uart_count4] = receive4;
0x4684	0x4A36    LDR	R2, [PC, #216]
0x4686	0x8811    LDRH	R1, [R2, #0]
0x4688	0x4836    LDR	R0, [PC, #216]
0x468A	0x1841    ADDS	R1, R0, R1
0x468C	0x482F    LDR	R0, [PC, #188]
0x468E	0x7800    LDRB	R0, [R0, #0]
0x4690	0x7008    STRB	R0, [R1, #0]
;interruptUart4.c, 50 :: 		uart_count4++;
0x4692	0x4610    MOV	R0, R2
0x4694	0x8800    LDRH	R0, [R0, #0]
0x4696	0x1C40    ADDS	R0, R0, #1
0x4698	0x8010    STRH	R0, [R2, #0]
;interruptUart4.c, 48 :: 		else if (rcv_count_helper4 == 0 && startReceivingData4 == 0x01 && uart_count4 < uart_receive4[2] + 3) {
L__interruptDisplay137:
L__interruptDisplay136:
L__interruptDisplay135:
;interruptUart4.c, 51 :: 		}
L_interruptDisplay19:
L_interruptDisplay11:
L_interruptDisplay7:
L_interruptDisplay3:
;interruptUart4.c, 53 :: 		if (rcv_count_helper4 == 0 && startReceivingData4 == 0x01 && uart_count4 >= uart_receive4[2] + 3) {
0x469A	0x482D    LDR	R0, [PC, #180]
0x469C	0x7800    LDRB	R0, [R0, #0]
0x469E	0x2800    CMP	R0, #0
0x46A0	0xF04082EA  BNE	L__interruptDisplay200
0x46A4	0x492B    LDR	R1, [PC, #172]
0x46A6	0x6808    LDR	R0, [R1, #0]
0x46A8	0x2800    CMP	R0, #0
0x46AA	0xF00082E5  BEQ	L__interruptDisplay199
0x46AE	0x482F    LDR	R0, [PC, #188]
0x46B0	0x7800    LDRB	R0, [R0, #0]
0x46B2	0x1CC1    ADDS	R1, R0, #3
0x46B4	0xB209    SXTH	R1, R1
0x46B6	0x482A    LDR	R0, [PC, #168]
0x46B8	0x8800    LDRH	R0, [R0, #0]
0x46BA	0x4288    CMP	R0, R1
0x46BC	0xF0C082DC  BCC	L__interruptDisplay198
L__interruptDisplay119:
;interruptUart4.c, 54 :: 		if (uart_receive4[0] == 0x5A && uart_receive4[1] == 0xA5 && uart_receive4[2] == 0x06
0x46C0	0x4828    LDR	R0, [PC, #160]
0x46C2	0x7800    LDRB	R0, [R0, #0]
0x46C4	0x285A    CMP	R0, #90
0x46C6	0xF0408038  BNE	L__interruptDisplay145
0x46CA	0x4827    LDR	R0, [PC, #156]
0x46CC	0x7800    LDRB	R0, [R0, #0]
0x46CE	0x28A5    CMP	R0, #165
0x46D0	0xD133    BNE	L__interruptDisplay144
0x46D2	0x4826    LDR	R0, [PC, #152]
0x46D4	0x7800    LDRB	R0, [R0, #0]
0x46D6	0x2806    CMP	R0, #6
0x46D8	0xD12F    BNE	L__interruptDisplay143
;interruptUart4.c, 55 :: 		&& uart_receive4[3] == 0x83 && uart_receive4[4] == 0x16
0x46DA	0x4826    LDR	R0, [PC, #152]
0x46DC	0x7800    LDRB	R0, [R0, #0]
0x46DE	0x2883    CMP	R0, #131
0x46E0	0xD12B    BNE	L__interruptDisplay142
0x46E2	0x4825    LDR	R0, [PC, #148]
0x46E4	0x7800    LDRB	R0, [R0, #0]
0x46E6	0x2816    CMP	R0, #22
0x46E8	0xD127    BNE	L__interruptDisplay141
;interruptUart4.c, 56 :: 		&& uart_receive4[5] == 0x00 && uart_receive4[6] == 0x01
0x46EA	0x4824    LDR	R0, [PC, #144]
0x46EC	0x7800    LDRB	R0, [R0, #0]
0x46EE	0x2800    CMP	R0, #0
0x46F0	0xD123    BNE	L__interruptDisplay140
0x46F2	0x4823    LDR	R0, [PC, #140]
0x46F4	0x7800    LDRB	R0, [R0, #0]
0x46F6	0x2801    CMP	R0, #1
0x46F8	0xD11F    BNE	L__interruptDisplay139
;interruptUart4.c, 57 :: 		&& uart_receive4[7] == 0x00) {
0x46FA	0x4822    LDR	R0, [PC, #136]
0x46FC	0x7800    LDRB	R0, [R0, #0]
0x46FE	0xB9E0    CBNZ	R0, L__interruptDisplay138
L__interruptDisplay118:
;interruptUart4.c, 59 :: 		if(!control_taken){
0x4700	0x4921    LDR	R1, [PC, #132]
0x4702	0x6808    LDR	R0, [R1, #0]
0x4704	0xB950    CBNZ	R0, L_interruptDisplay29
;interruptUart4.c, 60 :: 		if (uart_receive4[8] == 0x00) {
0x4706	0x4821    LDR	R0, [PC, #132]
0x4708	0x7800    LDRB	R0, [R0, #0]
0x470A	0xB918    CBNZ	R0, L_interruptDisplay30
;interruptUart4.c, 62 :: 		navigationLightState = 1;
0x470C	0x2101    MOVS	R1, #1
0x470E	0x4820    LDR	R0, [PC, #128]
0x4710	0x8001    STRH	R1, [R0, #0]
;interruptUart4.c, 63 :: 		}
0x4712	0xE002    B	L_interruptDisplay31
L_interruptDisplay30:
;interruptUart4.c, 66 :: 		navigationLightState = 0;
0x4714	0x2100    MOVS	R1, #0
0x4716	0x481E    LDR	R0, [PC, #120]
0x4718	0x8001    STRH	R1, [R0, #0]
;interruptUart4.c, 67 :: 		}
L_interruptDisplay31:
;interruptUart4.c, 68 :: 		}
0x471A	0xE00C    B	L_interruptDisplay32
L_interruptDisplay29:
;interruptUart4.c, 70 :: 		if(navigationLightState_old == 1){
0x471C	0x481D    LDR	R0, [PC, #116]
0x471E	0x8800    LDRH	R0, [R0, #0]
0x4720	0x2801    CMP	R0, #1
0x4722	0xD104    BNE	L_interruptDisplay33
;interruptUart4.c, 72 :: 		navLightOn = 1;
0x4724	0x2101    MOVS	R1, #1
0x4726	0xB249    SXTB	R1, R1
0x4728	0x481B    LDR	R0, [PC, #108]
0x472A	0x6001    STR	R1, [R0, #0]
;interruptUart4.c, 75 :: 		}
0x472C	0xE003    B	L_interruptDisplay34
L_interruptDisplay33:
;interruptUart4.c, 78 :: 		navLightOff = 1;
0x472E	0x2101    MOVS	R1, #1
0x4730	0xB249    SXTB	R1, R1
0x4732	0x481A    LDR	R0, [PC, #104]
0x4734	0x6001    STR	R1, [R0, #0]
;interruptUart4.c, 80 :: 		}
L_interruptDisplay34:
;interruptUart4.c, 81 :: 		}
L_interruptDisplay32:
;interruptUart4.c, 82 :: 		}
0x4736	0xF000BA79  B	L_interruptDisplay35
;interruptUart4.c, 54 :: 		if (uart_receive4[0] == 0x5A && uart_receive4[1] == 0xA5 && uart_receive4[2] == 0x06
L__interruptDisplay145:
L__interruptDisplay144:
L__interruptDisplay143:
;interruptUart4.c, 55 :: 		&& uart_receive4[3] == 0x83 && uart_receive4[4] == 0x16
L__interruptDisplay142:
L__interruptDisplay141:
;interruptUart4.c, 56 :: 		&& uart_receive4[5] == 0x00 && uart_receive4[6] == 0x01
L__interruptDisplay140:
L__interruptDisplay139:
;interruptUart4.c, 57 :: 		&& uart_receive4[7] == 0x00) {
L__interruptDisplay138:
;interruptUart4.c, 83 :: 		else if (uart_receive4[0] == 0x5A && uart_receive4[1] == 0xA5 && uart_receive4[2] == 0x06
0x473A	0x480A    LDR	R0, [PC, #40]
0x473C	0x7800    LDRB	R0, [R0, #0]
0x473E	0x285A    CMP	R0, #90
0x4740	0xF0408062  BNE	L__interruptDisplay153
0x4744	0x4808    LDR	R0, [PC, #32]
0x4746	0x7800    LDRB	R0, [R0, #0]
0x4748	0x28A5    CMP	R0, #165
0x474A	0xE029    B	#82
0x474C	0x006D2000  	_receive4+0
0x4750	0x00762000  	_rcv_count_helper4+0
0x4754	0x40A82201  	_startReceivingData4+0
0x4758	0x0A302000  	_rcv_helper4+0
0x475C	0x0A312000  	_rcv_helper4+1
0x4760	0x00782000  	_uart_count4+0
0x4764	0x0A322000  	_uart_receive4+0
0x4768	0x0A332000  	_uart_receive4+1
0x476C	0x0A342000  	_uart_receive4+2
0x4770	0x00182000  	_i+0
0x4774	0x0A352000  	_uart_receive4+3
0x4778	0x0A362000  	_uart_receive4+4
0x477C	0x0A372000  	_uart_receive4+5
0x4780	0x0A382000  	_uart_receive4+6
0x4784	0x0A392000  	_uart_receive4+7
0x4788	0x408C2201  	_control_taken+0
0x478C	0x0A3A2000  	_uart_receive4+8
0x4790	0x003A2000  	_navigationLightState+0
0x4794	0x00382000  	_navigationLightState_old+0
0x4798	0x40BC2201  	_navLightOn+0
0x479C	0x40B82201  	_navLightOff+0
0x47A0	0xD132    BNE	L__interruptDisplay152
0x47A2	0x488E    LDR	R0, [PC, #568]
0x47A4	0x7800    LDRB	R0, [R0, #0]
0x47A6	0x2806    CMP	R0, #6
0x47A8	0xD12E    BNE	L__interruptDisplay151
;interruptUart4.c, 84 :: 		&& uart_receive4[3] == 0x83 && uart_receive4[4] == 0x16
0x47AA	0x488D    LDR	R0, [PC, #564]
0x47AC	0x7800    LDRB	R0, [R0, #0]
0x47AE	0x2883    CMP	R0, #131
0x47B0	0xD12A    BNE	L__interruptDisplay150
0x47B2	0x488C    LDR	R0, [PC, #560]
0x47B4	0x7800    LDRB	R0, [R0, #0]
0x47B6	0x2816    CMP	R0, #22
0x47B8	0xD126    BNE	L__interruptDisplay149
;interruptUart4.c, 85 :: 		&& uart_receive4[5] == 0x20 && uart_receive4[6] == 0x01
0x47BA	0x488B    LDR	R0, [PC, #556]
0x47BC	0x7800    LDRB	R0, [R0, #0]
0x47BE	0x2820    CMP	R0, #32
0x47C0	0xD122    BNE	L__interruptDisplay148
0x47C2	0x488A    LDR	R0, [PC, #552]
0x47C4	0x7800    LDRB	R0, [R0, #0]
0x47C6	0x2801    CMP	R0, #1
0x47C8	0xD11E    BNE	L__interruptDisplay147
;interruptUart4.c, 86 :: 		&& uart_receive4[7] == 0x00) {
0x47CA	0x4889    LDR	R0, [PC, #548]
0x47CC	0x7800    LDRB	R0, [R0, #0]
0x47CE	0xB9D8    CBNZ	R0, L__interruptDisplay146
L__interruptDisplay117:
;interruptUart4.c, 88 :: 		if(!control_taken){
0x47D0	0x4988    LDR	R1, [PC, #544]
0x47D2	0x6808    LDR	R0, [R1, #0]
0x47D4	0xB950    CBNZ	R0, L_interruptDisplay39
;interruptUart4.c, 89 :: 		if (uart_receive4[8] == 0x00) {
0x47D6	0x4888    LDR	R0, [PC, #544]
0x47D8	0x7800    LDRB	R0, [R0, #0]
0x47DA	0xB918    CBNZ	R0, L_interruptDisplay40
;interruptUart4.c, 91 :: 		interiorLightState = 1;
0x47DC	0x2101    MOVS	R1, #1
0x47DE	0x4887    LDR	R0, [PC, #540]
0x47E0	0x8001    STRH	R1, [R0, #0]
;interruptUart4.c, 92 :: 		}
0x47E2	0xE002    B	L_interruptDisplay41
L_interruptDisplay40:
;interruptUart4.c, 95 :: 		interiorLightState = 0;
0x47E4	0x2100    MOVS	R1, #0
0x47E6	0x4885    LDR	R0, [PC, #532]
0x47E8	0x8001    STRH	R1, [R0, #0]
;interruptUart4.c, 96 :: 		}
L_interruptDisplay41:
;interruptUart4.c, 97 :: 		}
0x47EA	0xE00C    B	L_interruptDisplay42
L_interruptDisplay39:
;interruptUart4.c, 99 :: 		if(interiorLightState_old == 1){
0x47EC	0x4884    LDR	R0, [PC, #528]
0x47EE	0x8800    LDRH	R0, [R0, #0]
0x47F0	0x2801    CMP	R0, #1
0x47F2	0xD104    BNE	L_interruptDisplay43
;interruptUart4.c, 101 :: 		intLightOn = 1;
0x47F4	0x2101    MOVS	R1, #1
0x47F6	0xB249    SXTB	R1, R1
0x47F8	0x4882    LDR	R0, [PC, #520]
0x47FA	0x6001    STR	R1, [R0, #0]
;interruptUart4.c, 102 :: 		}
0x47FC	0xE003    B	L_interruptDisplay44
L_interruptDisplay43:
;interruptUart4.c, 105 :: 		intLightOff = 1;
0x47FE	0x2101    MOVS	R1, #1
0x4800	0xB249    SXTB	R1, R1
0x4802	0x4881    LDR	R0, [PC, #516]
0x4804	0x6001    STR	R1, [R0, #0]
;interruptUart4.c, 106 :: 		}
L_interruptDisplay44:
;interruptUart4.c, 107 :: 		}
L_interruptDisplay42:
;interruptUart4.c, 108 :: 		}
0x4806	0xE211    B	L_interruptDisplay45
;interruptUart4.c, 83 :: 		else if (uart_receive4[0] == 0x5A && uart_receive4[1] == 0xA5 && uart_receive4[2] == 0x06
L__interruptDisplay153:
L__interruptDisplay152:
L__interruptDisplay151:
;interruptUart4.c, 84 :: 		&& uart_receive4[3] == 0x83 && uart_receive4[4] == 0x16
L__interruptDisplay150:
L__interruptDisplay149:
;interruptUart4.c, 85 :: 		&& uart_receive4[5] == 0x20 && uart_receive4[6] == 0x01
L__interruptDisplay148:
L__interruptDisplay147:
;interruptUart4.c, 86 :: 		&& uart_receive4[7] == 0x00) {
L__interruptDisplay146:
;interruptUart4.c, 109 :: 		else if (uart_receive4[0] == 0x5A && uart_receive4[1] == 0xA5 && uart_receive4[2] == 0x06
0x4808	0x4880    LDR	R0, [PC, #512]
0x480A	0x7800    LDRB	R0, [R0, #0]
0x480C	0x285A    CMP	R0, #90
0x480E	0xF0408087  BNE	L__interruptDisplay163
0x4812	0x487F    LDR	R0, [PC, #508]
0x4814	0x7800    LDRB	R0, [R0, #0]
0x4816	0x28A5    CMP	R0, #165
0x4818	0xF0408082  BNE	L__interruptDisplay162
0x481C	0x486F    LDR	R0, [PC, #444]
0x481E	0x7800    LDRB	R0, [R0, #0]
0x4820	0x2806    CMP	R0, #6
0x4822	0xF040807D  BNE	L__interruptDisplay161
;interruptUart4.c, 110 :: 		&& uart_receive4[3] == 0x83 && uart_receive4[4] == 0x16
0x4826	0x486E    LDR	R0, [PC, #440]
0x4828	0x7800    LDRB	R0, [R0, #0]
0x482A	0x2883    CMP	R0, #131
0x482C	0xF0408078  BNE	L__interruptDisplay160
0x4830	0x486C    LDR	R0, [PC, #432]
0x4832	0x7800    LDRB	R0, [R0, #0]
0x4834	0x2816    CMP	R0, #22
0x4836	0xF0408073  BNE	L__interruptDisplay159
;interruptUart4.c, 111 :: 		&& uart_receive4[5] == 0x40 && uart_receive4[6] == 0x01
0x483A	0x486B    LDR	R0, [PC, #428]
0x483C	0x7800    LDRB	R0, [R0, #0]
0x483E	0x2840    CMP	R0, #64
0x4840	0xF040806E  BNE	L__interruptDisplay158
0x4844	0x4869    LDR	R0, [PC, #420]
0x4846	0x7800    LDRB	R0, [R0, #0]
0x4848	0x2801    CMP	R0, #1
0x484A	0xF0408069  BNE	L__interruptDisplay157
;interruptUart4.c, 112 :: 		&& uart_receive4[7] == 0x00) {
0x484E	0x4868    LDR	R0, [PC, #416]
0x4850	0x7800    LDRB	R0, [R0, #0]
0x4852	0x2800    CMP	R0, #0
0x4854	0xF0408064  BNE	L__interruptDisplay156
L__interruptDisplay116:
;interruptUart4.c, 114 :: 		if((!control_taken)&&(!bitBatteryChangeBlockCounter)){
0x4858	0x4966    LDR	R1, [PC, #408]
0x485A	0x6808    LDR	R0, [R1, #0]
0x485C	0x2800    CMP	R0, #0
0x485E	0xF0408044  BNE	L__interruptDisplay155
0x4862	0x496C    LDR	R1, [PC, #432]
0x4864	0x6808    LDR	R0, [R1, #0]
0x4866	0x2800    CMP	R0, #0
0x4868	0xF040803F  BNE	L__interruptDisplay154
L__interruptDisplay115:
;interruptUart4.c, 115 :: 		if (uart_receive4[8] == 0x00) {
0x486C	0x4862    LDR	R0, [PC, #392]
0x486E	0x7800    LDRB	R0, [R0, #0]
0x4870	0x2800    CMP	R0, #0
0x4872	0xD121    BNE	L_interruptDisplay52
;interruptUart4.c, 118 :: 		wannaBeActiveBattery1 = 1;
0x4874	0x2101    MOVS	R1, #1
0x4876	0x4868    LDR	R0, [PC, #416]
0x4878	0x8001    STRH	R1, [R0, #0]
;interruptUart4.c, 119 :: 		if(wannaBeActiveBattery1 != wannaBeActiveBattery1_old){
0x487A	0x4868    LDR	R0, [PC, #416]
0x487C	0x8800    LDRH	R0, [R0, #0]
0x487E	0x2801    CMP	R0, #1
0x4880	0xD019    BEQ	L_interruptDisplay53
;interruptUart4.c, 120 :: 		wannaBeActiveBattery1_old = wannaBeActiveBattery1;
0x4882	0x4865    LDR	R0, [PC, #404]
0x4884	0x8801    LDRH	R1, [R0, #0]
0x4886	0x4865    LDR	R0, [PC, #404]
0x4888	0x8001    STRH	R1, [R0, #0]
;interruptUart4.c, 122 :: 		uart4Battery2TurnedOff();
0x488A	0xF7FEFB73  BL	_uart4Battery2TurnedOff+0
;interruptUart4.c, 123 :: 		wannaBeActiveBattery2_old = 0;
0x488E	0x2100    MOVS	R1, #0
0x4890	0x4863    LDR	R0, [PC, #396]
0x4892	0x8001    STRH	R1, [R0, #0]
;interruptUart4.c, 124 :: 		wannaBeActiveBattery2 = 0;
0x4894	0x2100    MOVS	R1, #0
0x4896	0x4863    LDR	R0, [PC, #396]
0x4898	0x8001    STRH	R1, [R0, #0]
;interruptUart4.c, 126 :: 		battery_change_continue = 0;
0x489A	0x2100    MOVS	R1, #0
0x489C	0xB249    SXTB	R1, R1
0x489E	0x4862    LDR	R0, [PC, #392]
0x48A0	0x6001    STR	R1, [R0, #0]
;interruptUart4.c, 127 :: 		battery_change = 0;
0x48A2	0x4862    LDR	R0, [PC, #392]
0x48A4	0x6001    STR	R1, [R0, #0]
;interruptUart4.c, 128 :: 		battery_change_count = 0;
0x48A6	0x2100    MOVS	R1, #0
0x48A8	0xB209    SXTH	R1, R1
0x48AA	0x4861    LDR	R0, [PC, #388]
0x48AC	0x8001    STRH	R1, [R0, #0]
;interruptUart4.c, 129 :: 		battery_chosen = 1;
0x48AE	0x2101    MOVS	R1, #1
0x48B0	0xB209    SXTH	R1, R1
0x48B2	0x4860    LDR	R0, [PC, #384]
0x48B4	0x8001    STRH	R1, [R0, #0]
;interruptUart4.c, 130 :: 		}
L_interruptDisplay53:
;interruptUart4.c, 131 :: 		}
0x48B6	0xE017    B	L_interruptDisplay54
L_interruptDisplay52:
;interruptUart4.c, 136 :: 		wannaBeActiveBattery1 = 0;
0x48B8	0x2100    MOVS	R1, #0
0x48BA	0x4857    LDR	R0, [PC, #348]
0x48BC	0x8001    STRH	R1, [R0, #0]
;interruptUart4.c, 137 :: 		if(wannaBeActiveBattery1 != wannaBeActiveBattery1_old){
0x48BE	0x4857    LDR	R0, [PC, #348]
0x48C0	0x8800    LDRH	R0, [R0, #0]
0x48C2	0xB188    CBZ	R0, L_interruptDisplay55
;interruptUart4.c, 138 :: 		wannaBeActiveBattery1_old = wannaBeActiveBattery1;
0x48C4	0x4854    LDR	R0, [PC, #336]
0x48C6	0x8801    LDRH	R1, [R0, #0]
0x48C8	0x4854    LDR	R0, [PC, #336]
0x48CA	0x8001    STRH	R1, [R0, #0]
;interruptUart4.c, 140 :: 		battery_change_continue = 0;
0x48CC	0x2100    MOVS	R1, #0
0x48CE	0xB249    SXTB	R1, R1
0x48D0	0x4855    LDR	R0, [PC, #340]
0x48D2	0x6001    STR	R1, [R0, #0]
;interruptUart4.c, 141 :: 		battery_change = 0;
0x48D4	0x4855    LDR	R0, [PC, #340]
0x48D6	0x6001    STR	R1, [R0, #0]
;interruptUart4.c, 142 :: 		battery_change_count = 0;
0x48D8	0x2100    MOVS	R1, #0
0x48DA	0xB209    SXTH	R1, R1
0x48DC	0x4854    LDR	R0, [PC, #336]
0x48DE	0x8001    STRH	R1, [R0, #0]
;interruptUart4.c, 143 :: 		battery_chosen = 0;
0x48E0	0x2100    MOVS	R1, #0
0x48E2	0xB209    SXTH	R1, R1
0x48E4	0x4853    LDR	R0, [PC, #332]
0x48E6	0x8001    STRH	R1, [R0, #0]
;interruptUart4.c, 144 :: 		}
L_interruptDisplay55:
;interruptUart4.c, 145 :: 		}
L_interruptDisplay54:
;interruptUart4.c, 146 :: 		}
0x48E8	0xE019    B	L_interruptDisplay56
;interruptUart4.c, 114 :: 		if((!control_taken)&&(!bitBatteryChangeBlockCounter)){
L__interruptDisplay155:
L__interruptDisplay154:
;interruptUart4.c, 148 :: 		if(wannaBeActiveBattery1_old == 1){
0x48EA	0x484C    LDR	R0, [PC, #304]
0x48EC	0x8800    LDRH	R0, [R0, #0]
0x48EE	0x2801    CMP	R0, #1
0x48F0	0xD106    BNE	L_interruptDisplay57
;interruptUart4.c, 149 :: 		uart4Battery1TurnedOn();
0x48F2	0xF7FEF9CF  BL	_uart4Battery1TurnedOn+0
;interruptUart4.c, 150 :: 		uart4Battery2TurnedOff();
0x48F6	0xF7FEFB3D  BL	_uart4Battery2TurnedOff+0
;interruptUart4.c, 151 :: 		uart4LightingTurnedOn();
0x48FA	0xF7FEF81B  BL	_uart4LightingTurnedOn+0
;interruptUart4.c, 152 :: 		}
0x48FE	0xE00E    B	L_interruptDisplay58
L_interruptDisplay57:
;interruptUart4.c, 154 :: 		uart4Battery1TurnedOff();
0x4900	0xF7FDFF98  BL	_uart4Battery1TurnedOff+0
;interruptUart4.c, 155 :: 		if(wannaBeActiveBattery2_old == 1){
0x4904	0x4846    LDR	R0, [PC, #280]
0x4906	0x8800    LDRH	R0, [R0, #0]
0x4908	0x2801    CMP	R0, #1
0x490A	0xD104    BNE	L_interruptDisplay59
;interruptUart4.c, 156 :: 		uart4Battery2TurnedOn();
0x490C	0xF7FEFA36  BL	_uart4Battery2TurnedOn+0
;interruptUart4.c, 157 :: 		uart4LightingTurnedOn();
0x4910	0xF7FEF810  BL	_uart4LightingTurnedOn+0
;interruptUart4.c, 158 :: 		}
0x4914	0xE003    B	L_interruptDisplay60
L_interruptDisplay59:
;interruptUart4.c, 160 :: 		uart4Battery2TurnedOff();
0x4916	0xF7FEFB2D  BL	_uart4Battery2TurnedOff+0
;interruptUart4.c, 161 :: 		uart4LightingTurnedOff();
0x491A	0xF7FEFB0B  BL	_uart4LightingTurnedOff+0
;interruptUart4.c, 162 :: 		}
L_interruptDisplay60:
;interruptUart4.c, 163 :: 		}
L_interruptDisplay58:
;interruptUart4.c, 164 :: 		}
L_interruptDisplay56:
;interruptUart4.c, 168 :: 		}
0x491E	0xE185    B	L_interruptDisplay61
;interruptUart4.c, 109 :: 		else if (uart_receive4[0] == 0x5A && uart_receive4[1] == 0xA5 && uart_receive4[2] == 0x06
L__interruptDisplay163:
L__interruptDisplay162:
L__interruptDisplay161:
;interruptUart4.c, 110 :: 		&& uart_receive4[3] == 0x83 && uart_receive4[4] == 0x16
L__interruptDisplay160:
L__interruptDisplay159:
;interruptUart4.c, 111 :: 		&& uart_receive4[5] == 0x40 && uart_receive4[6] == 0x01
L__interruptDisplay158:
L__interruptDisplay157:
;interruptUart4.c, 112 :: 		&& uart_receive4[7] == 0x00) {
L__interruptDisplay156:
;interruptUart4.c, 169 :: 		else if (uart_receive4[0] == 0x5A && uart_receive4[1] == 0xA5 && uart_receive4[2] == 0x06
0x4920	0x483A    LDR	R0, [PC, #232]
0x4922	0x7800    LDRB	R0, [R0, #0]
0x4924	0x285A    CMP	R0, #90
0x4926	0xF04080B6  BNE	L__interruptDisplay173
0x492A	0x4839    LDR	R0, [PC, #228]
0x492C	0x7800    LDRB	R0, [R0, #0]
0x492E	0x28A5    CMP	R0, #165
0x4930	0xF04080B1  BNE	L__interruptDisplay172
0x4934	0x4829    LDR	R0, [PC, #164]
0x4936	0x7800    LDRB	R0, [R0, #0]
0x4938	0x2806    CMP	R0, #6
0x493A	0xF04080AC  BNE	L__interruptDisplay171
;interruptUart4.c, 170 :: 		&& uart_receive4[3] == 0x83 && uart_receive4[4] == 0x16
0x493E	0x4828    LDR	R0, [PC, #160]
0x4940	0x7800    LDRB	R0, [R0, #0]
0x4942	0x2883    CMP	R0, #131
0x4944	0xF04080A7  BNE	L__interruptDisplay170
0x4948	0x4826    LDR	R0, [PC, #152]
0x494A	0x7800    LDRB	R0, [R0, #0]
0x494C	0x2816    CMP	R0, #22
0x494E	0xF04080A2  BNE	L__interruptDisplay169
;interruptUart4.c, 171 :: 		&& uart_receive4[5] == 0x60 && uart_receive4[6] == 0x01
0x4952	0x4825    LDR	R0, [PC, #148]
0x4954	0x7800    LDRB	R0, [R0, #0]
0x4956	0x2860    CMP	R0, #96
0x4958	0xF040809D  BNE	L__interruptDisplay168
0x495C	0x4823    LDR	R0, [PC, #140]
0x495E	0x7800    LDRB	R0, [R0, #0]
0x4960	0x2801    CMP	R0, #1
0x4962	0xF0408098  BNE	L__interruptDisplay167
;interruptUart4.c, 172 :: 		&& uart_receive4[7] == 0x00) {
0x4966	0x4822    LDR	R0, [PC, #136]
0x4968	0x7800    LDRB	R0, [R0, #0]
0x496A	0x2800    CMP	R0, #0
0x496C	0xF0408093  BNE	L__interruptDisplay166
L__interruptDisplay114:
;interruptUart4.c, 174 :: 		if((!control_taken)&&(!bitBatteryChangeBlockCounter)){
0x4970	0x4920    LDR	R1, [PC, #128]
0x4972	0x6808    LDR	R0, [R1, #0]
0x4974	0x2800    CMP	R0, #0
0x4976	0xF0408073  BNE	L__interruptDisplay165
0x497A	0x4926    LDR	R1, [PC, #152]
0x497C	0x6808    LDR	R0, [R1, #0]
0x497E	0x2800    CMP	R0, #0
0x4980	0xF040806E  BNE	L__interruptDisplay164
L__interruptDisplay113:
;interruptUart4.c, 175 :: 		if (uart_receive4[8] == 0x00) {
0x4984	0x481C    LDR	R0, [PC, #112]
0x4986	0x7800    LDRB	R0, [R0, #0]
0x4988	0x2800    CMP	R0, #0
0x498A	0xD121    BNE	L_interruptDisplay68
;interruptUart4.c, 177 :: 		wannaBeActiveBattery2 = 1;
0x498C	0x2101    MOVS	R1, #1
0x498E	0x4825    LDR	R0, [PC, #148]
0x4990	0x8001    STRH	R1, [R0, #0]
;interruptUart4.c, 178 :: 		if(wannaBeActiveBattery2 != wannaBeActiveBattery2_old){
0x4992	0x4823    LDR	R0, [PC, #140]
0x4994	0x8800    LDRH	R0, [R0, #0]
0x4996	0x2801    CMP	R0, #1
0x4998	0xD019    BEQ	L_interruptDisplay69
;interruptUart4.c, 179 :: 		wannaBeActiveBattery2_old = wannaBeActiveBattery2;
0x499A	0x4822    LDR	R0, [PC, #136]
0x499C	0x8801    LDRH	R1, [R0, #0]
0x499E	0x4820    LDR	R0, [PC, #128]
0x49A0	0x8001    STRH	R1, [R0, #0]
;interruptUart4.c, 181 :: 		uart4Battery1TurnedOff();
0x49A2	0xF7FDFF47  BL	_uart4Battery1TurnedOff+0
;interruptUart4.c, 182 :: 		wannaBeActiveBattery1_old = 0;
0x49A6	0x2100    MOVS	R1, #0
0x49A8	0x481C    LDR	R0, [PC, #112]
0x49AA	0x8001    STRH	R1, [R0, #0]
;interruptUart4.c, 183 :: 		wannaBeActiveBattery1 = 0;
0x49AC	0x2100    MOVS	R1, #0
0x49AE	0x481A    LDR	R0, [PC, #104]
0x49B0	0x8001    STRH	R1, [R0, #0]
;interruptUart4.c, 186 :: 		battery_change_continue = 0;
0x49B2	0x2100    MOVS	R1, #0
0x49B4	0xB249    SXTB	R1, R1
0x49B6	0x481C    LDR	R0, [PC, #112]
0x49B8	0x6001    STR	R1, [R0, #0]
;interruptUart4.c, 187 :: 		battery_change = 0;
0x49BA	0x481C    LDR	R0, [PC, #112]
0x49BC	0x6001    STR	R1, [R0, #0]
;interruptUart4.c, 188 :: 		battery_change_count = 0;
0x49BE	0x2100    MOVS	R1, #0
0x49C0	0xB209    SXTH	R1, R1
0x49C2	0x481B    LDR	R0, [PC, #108]
0x49C4	0x8001    STRH	R1, [R0, #0]
;interruptUart4.c, 189 :: 		battery_chosen = 2;
0x49C6	0x2102    MOVS	R1, #2
0x49C8	0xB209    SXTH	R1, R1
0x49CA	0x481A    LDR	R0, [PC, #104]
0x49CC	0x8001    STRH	R1, [R0, #0]
;interruptUart4.c, 190 :: 		}
L_interruptDisplay69:
;interruptUart4.c, 191 :: 		}
0x49CE	0xE046    B	L_interruptDisplay70
L_interruptDisplay68:
;interruptUart4.c, 193 :: 		wannaBeActiveBattery2 = 0;
0x49D0	0x2100    MOVS	R1, #0
0x49D2	0x4814    LDR	R0, [PC, #80]
0x49D4	0x8001    STRH	R1, [R0, #0]
;interruptUart4.c, 194 :: 		if(wannaBeActiveBattery2 != wannaBeActiveBattery2_old){
0x49D6	0x4812    LDR	R0, [PC, #72]
0x49D8	0x8800    LDRH	R0, [R0, #0]
0x49DA	0xE02D    B	#90
0x49DC	0x0A342000  	_uart_receive4+2
0x49E0	0x0A352000  	_uart_receive4+3
0x49E4	0x0A362000  	_uart_receive4+4
0x49E8	0x0A372000  	_uart_receive4+5
0x49EC	0x0A382000  	_uart_receive4+6
0x49F0	0x0A392000  	_uart_receive4+7
0x49F4	0x408C2201  	_control_taken+0
0x49F8	0x0A3A2000  	_uart_receive4+8
0x49FC	0x003E2000  	_interiorLightState+0
0x4A00	0x003C2000  	_interiorLightState_old+0
0x4A04	0x40C02201  	_intLightOn+0
0x4A08	0x40C42201  	_intLightOff+0
0x4A0C	0x0A322000  	_uart_receive4+0
0x4A10	0x0A332000  	_uart_receive4+1
0x4A14	0x0FA82200  	_bitBatteryChangeBlockCounter+0
0x4A18	0x000A2000  	_wannaBeActiveBattery1+0
0x4A1C	0x000C2000  	_wannaBeActiveBattery1_old+0
0x4A20	0x00082000  	_wannaBeActiveBattery2_old+0
0x4A24	0x00062000  	_wannaBeActiveBattery2+0
0x4A28	0x0FA42200  	_battery_change_continue+0
0x4A2C	0x0FA02200  	_battery_change+0
0x4A30	0x00042000  	_battery_change_count+0
0x4A34	0x00002000  	_battery_chosen+0
0x4A38	0xB188    CBZ	R0, L_interruptDisplay71
;interruptUart4.c, 195 :: 		wannaBeActiveBattery2_old = wannaBeActiveBattery2;
0x4A3A	0x4891    LDR	R0, [PC, #580]
0x4A3C	0x8801    LDRH	R1, [R0, #0]
0x4A3E	0x4891    LDR	R0, [PC, #580]
0x4A40	0x8001    STRH	R1, [R0, #0]
;interruptUart4.c, 197 :: 		battery_change_continue = 0;
0x4A42	0x2100    MOVS	R1, #0
0x4A44	0xB249    SXTB	R1, R1
0x4A46	0x4890    LDR	R0, [PC, #576]
0x4A48	0x6001    STR	R1, [R0, #0]
;interruptUart4.c, 198 :: 		battery_change = 0;
0x4A4A	0x4890    LDR	R0, [PC, #576]
0x4A4C	0x6001    STR	R1, [R0, #0]
;interruptUart4.c, 199 :: 		battery_change_count = 0;
0x4A4E	0x2100    MOVS	R1, #0
0x4A50	0xB209    SXTH	R1, R1
0x4A52	0x488F    LDR	R0, [PC, #572]
0x4A54	0x8001    STRH	R1, [R0, #0]
;interruptUart4.c, 200 :: 		battery_chosen = 0;
0x4A56	0x2100    MOVS	R1, #0
0x4A58	0xB209    SXTH	R1, R1
0x4A5A	0x488E    LDR	R0, [PC, #568]
0x4A5C	0x8001    STRH	R1, [R0, #0]
;interruptUart4.c, 201 :: 		}
L_interruptDisplay71:
;interruptUart4.c, 202 :: 		}
L_interruptDisplay70:
;interruptUart4.c, 204 :: 		}
0x4A5E	0xE019    B	L_interruptDisplay72
;interruptUart4.c, 174 :: 		if((!control_taken)&&(!bitBatteryChangeBlockCounter)){
L__interruptDisplay165:
L__interruptDisplay164:
;interruptUart4.c, 206 :: 		if(wannaBeActiveBattery2_old == 1){
0x4A60	0x4888    LDR	R0, [PC, #544]
0x4A62	0x8800    LDRH	R0, [R0, #0]
0x4A64	0x2801    CMP	R0, #1
0x4A66	0xD106    BNE	L_interruptDisplay73
;interruptUart4.c, 207 :: 		uart4Battery2TurnedOn();
0x4A68	0xF7FEF988  BL	_uart4Battery2TurnedOn+0
;interruptUart4.c, 208 :: 		uart4Battery1TurnedOff();
0x4A6C	0xF7FDFEE2  BL	_uart4Battery1TurnedOff+0
;interruptUart4.c, 209 :: 		uart4LightingTurnedOn();
0x4A70	0xF7FDFF60  BL	_uart4LightingTurnedOn+0
;interruptUart4.c, 210 :: 		}
0x4A74	0xE00E    B	L_interruptDisplay74
L_interruptDisplay73:
;interruptUart4.c, 212 :: 		uart4Battery2TurnedOff();
0x4A76	0xF7FEFA7D  BL	_uart4Battery2TurnedOff+0
;interruptUart4.c, 213 :: 		if(wannaBeActiveBattery1_old == 1){
0x4A7A	0x4887    LDR	R0, [PC, #540]
0x4A7C	0x8800    LDRH	R0, [R0, #0]
0x4A7E	0x2801    CMP	R0, #1
0x4A80	0xD104    BNE	L_interruptDisplay75
;interruptUart4.c, 214 :: 		uart4Battery1TurnedOn();
0x4A82	0xF7FEF907  BL	_uart4Battery1TurnedOn+0
;interruptUart4.c, 215 :: 		uart4LightingTurnedOn();
0x4A86	0xF7FDFF55  BL	_uart4LightingTurnedOn+0
;interruptUart4.c, 216 :: 		}
0x4A8A	0xE003    B	L_interruptDisplay76
L_interruptDisplay75:
;interruptUart4.c, 218 :: 		uart4Battery1TurnedOff();
0x4A8C	0xF7FDFED2  BL	_uart4Battery1TurnedOff+0
;interruptUart4.c, 219 :: 		uart4LightingTurnedOff();
0x4A90	0xF7FEFA50  BL	_uart4LightingTurnedOff+0
;interruptUart4.c, 220 :: 		}
L_interruptDisplay76:
;interruptUart4.c, 221 :: 		}
L_interruptDisplay74:
;interruptUart4.c, 222 :: 		}
L_interruptDisplay72:
;interruptUart4.c, 224 :: 		}
0x4A94	0xE0CA    B	L_interruptDisplay77
;interruptUart4.c, 169 :: 		else if (uart_receive4[0] == 0x5A && uart_receive4[1] == 0xA5 && uart_receive4[2] == 0x06
L__interruptDisplay173:
L__interruptDisplay172:
L__interruptDisplay171:
;interruptUart4.c, 170 :: 		&& uart_receive4[3] == 0x83 && uart_receive4[4] == 0x16
L__interruptDisplay170:
L__interruptDisplay169:
;interruptUart4.c, 171 :: 		&& uart_receive4[5] == 0x60 && uart_receive4[6] == 0x01
L__interruptDisplay168:
L__interruptDisplay167:
;interruptUart4.c, 172 :: 		&& uart_receive4[7] == 0x00) {
L__interruptDisplay166:
;interruptUart4.c, 227 :: 		else if (uart_receive4[0] == 0x5A && uart_receive4[1] == 0xA5 && uart_receive4[2] == 0x06
0x4A96	0x4881    LDR	R0, [PC, #516]
0x4A98	0x7800    LDRB	R0, [R0, #0]
0x4A9A	0x285A    CMP	R0, #90
0x4A9C	0xF040803E  BNE	L__interruptDisplay181
0x4AA0	0x487F    LDR	R0, [PC, #508]
0x4AA2	0x7800    LDRB	R0, [R0, #0]
0x4AA4	0x28A5    CMP	R0, #165
0x4AA6	0xF0408039  BNE	L__interruptDisplay180
0x4AAA	0x487E    LDR	R0, [PC, #504]
0x4AAC	0x7800    LDRB	R0, [R0, #0]
0x4AAE	0x2806    CMP	R0, #6
0x4AB0	0xD134    BNE	L__interruptDisplay179
;interruptUart4.c, 228 :: 		&& uart_receive4[3] == 0x83 && uart_receive4[4] == 0x18
0x4AB2	0x487D    LDR	R0, [PC, #500]
0x4AB4	0x7800    LDRB	R0, [R0, #0]
0x4AB6	0x2883    CMP	R0, #131
0x4AB8	0xD130    BNE	L__interruptDisplay178
0x4ABA	0x487C    LDR	R0, [PC, #496]
0x4ABC	0x7800    LDRB	R0, [R0, #0]
0x4ABE	0x2818    CMP	R0, #24
0x4AC0	0xD12C    BNE	L__interruptDisplay177
;interruptUart4.c, 229 :: 		&& uart_receive4[5] == 0x00 && uart_receive4[6] == 0x01
0x4AC2	0x487B    LDR	R0, [PC, #492]
0x4AC4	0x7800    LDRB	R0, [R0, #0]
0x4AC6	0x2800    CMP	R0, #0
0x4AC8	0xD128    BNE	L__interruptDisplay176
0x4ACA	0x487A    LDR	R0, [PC, #488]
0x4ACC	0x7800    LDRB	R0, [R0, #0]
0x4ACE	0x2801    CMP	R0, #1
0x4AD0	0xD124    BNE	L__interruptDisplay175
;interruptUart4.c, 230 :: 		&& uart_receive4[7] == 0x00) {
0x4AD2	0x4879    LDR	R0, [PC, #484]
0x4AD4	0x7800    LDRB	R0, [R0, #0]
0x4AD6	0x2800    CMP	R0, #0
0x4AD8	0xD120    BNE	L__interruptDisplay174
L__interruptDisplay112:
;interruptUart4.c, 232 :: 		if(!control_taken){
0x4ADA	0x4978    LDR	R1, [PC, #480]
0x4ADC	0x6808    LDR	R0, [R1, #0]
0x4ADE	0xB9C0    CBNZ	R0, L_interruptDisplay81
;interruptUart4.c, 234 :: 		if (uart_receive4[8] == 0x00) {
0x4AE0	0x4877    LDR	R0, [PC, #476]
0x4AE2	0x7800    LDRB	R0, [R0, #0]
0x4AE4	0xB968    CBNZ	R0, L_interruptDisplay82
;interruptUart4.c, 235 :: 		if(velocity_mode != VELOCITY_TURTLE){
0x4AE6	0x4877    LDR	R0, [PC, #476]
0x4AE8	0x8800    LDRH	R0, [R0, #0]
0x4AEA	0xB148    CBZ	R0, L_interruptDisplay83
;interruptUart4.c, 236 :: 		velocity_mode_new = VELOCITY_TURTLE;
0x4AEC	0x2100    MOVS	R1, #0
0x4AEE	0x4876    LDR	R0, [PC, #472]
0x4AF0	0x8001    STRH	R1, [R0, #0]
;interruptUart4.c, 237 :: 		velocity_mode = VELOCITY_TURTLE;
0x4AF2	0x2100    MOVS	R1, #0
0x4AF4	0x4873    LDR	R0, [PC, #460]
0x4AF6	0x8001    STRH	R1, [R0, #0]
;interruptUart4.c, 238 :: 		change_velocity_mode(velocity_mode);
0x4AF8	0xF2400000  MOVW	R0, #0
0x4AFC	0xF7FEFA9A  BL	_change_velocity_mode+0
;interruptUart4.c, 239 :: 		}
L_interruptDisplay83:
;interruptUart4.c, 240 :: 		}
0x4B00	0xE006    B	L_interruptDisplay84
L_interruptDisplay82:
;interruptUart4.c, 242 :: 		if(velocity_mode == VELOCITY_TURTLE){
0x4B02	0x4870    LDR	R0, [PC, #448]
0x4B04	0x8800    LDRH	R0, [R0, #0]
0x4B06	0xB918    CBNZ	R0, L_interruptDisplay85
;interruptUart4.c, 243 :: 		change_velocity_mode(velocity_mode);
0x4B08	0x486E    LDR	R0, [PC, #440]
0x4B0A	0x8800    LDRH	R0, [R0, #0]
0x4B0C	0xF7FEFA92  BL	_change_velocity_mode+0
;interruptUart4.c, 244 :: 		}
L_interruptDisplay85:
;interruptUart4.c, 245 :: 		}
L_interruptDisplay84:
;interruptUart4.c, 246 :: 		}
0x4B10	0xE003    B	L_interruptDisplay86
L_interruptDisplay81:
;interruptUart4.c, 248 :: 		change_velocity_mode(velocity_mode);
0x4B12	0x486C    LDR	R0, [PC, #432]
0x4B14	0x8800    LDRH	R0, [R0, #0]
0x4B16	0xF7FEFA8D  BL	_change_velocity_mode+0
;interruptUart4.c, 255 :: 		}
L_interruptDisplay86:
;interruptUart4.c, 257 :: 		}
0x4B1A	0xE087    B	L_interruptDisplay87
;interruptUart4.c, 227 :: 		else if (uart_receive4[0] == 0x5A && uart_receive4[1] == 0xA5 && uart_receive4[2] == 0x06
L__interruptDisplay181:
L__interruptDisplay180:
L__interruptDisplay179:
;interruptUart4.c, 228 :: 		&& uart_receive4[3] == 0x83 && uart_receive4[4] == 0x18
L__interruptDisplay178:
L__interruptDisplay177:
;interruptUart4.c, 229 :: 		&& uart_receive4[5] == 0x00 && uart_receive4[6] == 0x01
L__interruptDisplay176:
L__interruptDisplay175:
;interruptUart4.c, 230 :: 		&& uart_receive4[7] == 0x00) {
L__interruptDisplay174:
;interruptUart4.c, 261 :: 		else if (uart_receive4[0] == 0x5A && uart_receive4[1] == 0xA5 && uart_receive4[2] == 0x06
0x4B1C	0x485F    LDR	R0, [PC, #380]
0x4B1E	0x7800    LDRB	R0, [R0, #0]
0x4B20	0x285A    CMP	R0, #90
0x4B22	0xF0408040  BNE	L__interruptDisplay189
0x4B26	0x485E    LDR	R0, [PC, #376]
0x4B28	0x7800    LDRB	R0, [R0, #0]
0x4B2A	0x28A5    CMP	R0, #165
0x4B2C	0xF040803B  BNE	L__interruptDisplay188
0x4B30	0x485C    LDR	R0, [PC, #368]
0x4B32	0x7800    LDRB	R0, [R0, #0]
0x4B34	0x2806    CMP	R0, #6
0x4B36	0xD136    BNE	L__interruptDisplay187
;interruptUart4.c, 262 :: 		&& uart_receive4[3] == 0x83 && uart_receive4[4] == 0x18
0x4B38	0x485B    LDR	R0, [PC, #364]
0x4B3A	0x7800    LDRB	R0, [R0, #0]
0x4B3C	0x2883    CMP	R0, #131
0x4B3E	0xD132    BNE	L__interruptDisplay186
0x4B40	0x485A    LDR	R0, [PC, #360]
0x4B42	0x7800    LDRB	R0, [R0, #0]
0x4B44	0x2818    CMP	R0, #24
0x4B46	0xD12E    BNE	L__interruptDisplay185
;interruptUart4.c, 263 :: 		&& uart_receive4[5] == 0x20 && uart_receive4[6] == 0x01
0x4B48	0x4859    LDR	R0, [PC, #356]
0x4B4A	0x7800    LDRB	R0, [R0, #0]
0x4B4C	0x2820    CMP	R0, #32
0x4B4E	0xD12A    BNE	L__interruptDisplay184
0x4B50	0x4858    LDR	R0, [PC, #352]
0x4B52	0x7800    LDRB	R0, [R0, #0]
0x4B54	0x2801    CMP	R0, #1
0x4B56	0xD126    BNE	L__interruptDisplay183
;interruptUart4.c, 264 :: 		&& uart_receive4[7] == 0x00) {
0x4B58	0x4857    LDR	R0, [PC, #348]
0x4B5A	0x7800    LDRB	R0, [R0, #0]
0x4B5C	0x2800    CMP	R0, #0
0x4B5E	0xD122    BNE	L__interruptDisplay182
L__interruptDisplay111:
;interruptUart4.c, 266 :: 		if(!control_taken){
0x4B60	0x4956    LDR	R1, [PC, #344]
0x4B62	0x6808    LDR	R0, [R1, #0]
0x4B64	0xB9D0    CBNZ	R0, L_interruptDisplay91
;interruptUart4.c, 268 :: 		if (uart_receive4[8] == 0x00) {
0x4B66	0x4856    LDR	R0, [PC, #344]
0x4B68	0x7800    LDRB	R0, [R0, #0]
0x4B6A	0xB970    CBNZ	R0, L_interruptDisplay92
;interruptUart4.c, 269 :: 		if(velocity_mode != VELOCITY_RABBIT){
0x4B6C	0x4855    LDR	R0, [PC, #340]
0x4B6E	0x8800    LDRH	R0, [R0, #0]
0x4B70	0x2801    CMP	R0, #1
0x4B72	0xD009    BEQ	L_interruptDisplay93
;interruptUart4.c, 270 :: 		velocity_mode_new = VELOCITY_RABBIT;
0x4B74	0x2101    MOVS	R1, #1
0x4B76	0x4854    LDR	R0, [PC, #336]
0x4B78	0x8001    STRH	R1, [R0, #0]
;interruptUart4.c, 271 :: 		velocity_mode = VELOCITY_RABBIT;
0x4B7A	0x2101    MOVS	R1, #1
0x4B7C	0x4851    LDR	R0, [PC, #324]
0x4B7E	0x8001    STRH	R1, [R0, #0]
;interruptUart4.c, 272 :: 		change_velocity_mode(velocity_mode);
0x4B80	0xF2400001  MOVW	R0, #1
0x4B84	0xF7FEFA56  BL	_change_velocity_mode+0
;interruptUart4.c, 273 :: 		}
L_interruptDisplay93:
;interruptUart4.c, 274 :: 		}
0x4B88	0xE007    B	L_interruptDisplay94
L_interruptDisplay92:
;interruptUart4.c, 276 :: 		if(velocity_mode == VELOCITY_RABBIT){
0x4B8A	0x484E    LDR	R0, [PC, #312]
0x4B8C	0x8800    LDRH	R0, [R0, #0]
0x4B8E	0x2801    CMP	R0, #1
0x4B90	0xD103    BNE	L_interruptDisplay95
;interruptUart4.c, 277 :: 		change_velocity_mode(velocity_mode);
0x4B92	0x484C    LDR	R0, [PC, #304]
0x4B94	0x8800    LDRH	R0, [R0, #0]
0x4B96	0xF7FEFA4D  BL	_change_velocity_mode+0
;interruptUart4.c, 278 :: 		}
L_interruptDisplay95:
;interruptUart4.c, 279 :: 		}
L_interruptDisplay94:
;interruptUart4.c, 280 :: 		}
0x4B9A	0xE003    B	L_interruptDisplay96
L_interruptDisplay91:
;interruptUart4.c, 282 :: 		change_velocity_mode(velocity_mode);
0x4B9C	0x4849    LDR	R0, [PC, #292]
0x4B9E	0x8800    LDRH	R0, [R0, #0]
0x4BA0	0xF7FEFA48  BL	_change_velocity_mode+0
;interruptUart4.c, 290 :: 		}
L_interruptDisplay96:
;interruptUart4.c, 292 :: 		}
0x4BA4	0xE042    B	L_interruptDisplay97
;interruptUart4.c, 261 :: 		else if (uart_receive4[0] == 0x5A && uart_receive4[1] == 0xA5 && uart_receive4[2] == 0x06
L__interruptDisplay189:
L__interruptDisplay188:
L__interruptDisplay187:
;interruptUart4.c, 262 :: 		&& uart_receive4[3] == 0x83 && uart_receive4[4] == 0x18
L__interruptDisplay186:
L__interruptDisplay185:
;interruptUart4.c, 263 :: 		&& uart_receive4[5] == 0x20 && uart_receive4[6] == 0x01
L__interruptDisplay184:
L__interruptDisplay183:
;interruptUart4.c, 264 :: 		&& uart_receive4[7] == 0x00) {
L__interruptDisplay182:
;interruptUart4.c, 297 :: 		else if (uart_receive4[0] == 0x5A && uart_receive4[1] == 0xA5 && uart_receive4[2] == 0x06
0x4BA6	0x483D    LDR	R0, [PC, #244]
0x4BA8	0x7800    LDRB	R0, [R0, #0]
0x4BAA	0x285A    CMP	R0, #90
0x4BAC	0xF040803E  BNE	L__interruptDisplay197
0x4BB0	0x483B    LDR	R0, [PC, #236]
0x4BB2	0x7800    LDRB	R0, [R0, #0]
0x4BB4	0x28A5    CMP	R0, #165
0x4BB6	0xD139    BNE	L__interruptDisplay196
0x4BB8	0x483A    LDR	R0, [PC, #232]
0x4BBA	0x7800    LDRB	R0, [R0, #0]
0x4BBC	0x2806    CMP	R0, #6
0x4BBE	0xD135    BNE	L__interruptDisplay195
;interruptUart4.c, 298 :: 		&& uart_receive4[3] == 0x83 && uart_receive4[4] == 0x18
0x4BC0	0x4839    LDR	R0, [PC, #228]
0x4BC2	0x7800    LDRB	R0, [R0, #0]
0x4BC4	0x2883    CMP	R0, #131
0x4BC6	0xD131    BNE	L__interruptDisplay194
0x4BC8	0x4838    LDR	R0, [PC, #224]
0x4BCA	0x7800    LDRB	R0, [R0, #0]
0x4BCC	0x2818    CMP	R0, #24
0x4BCE	0xD12D    BNE	L__interruptDisplay193
;interruptUart4.c, 299 :: 		&& uart_receive4[5] == 0x40 && uart_receive4[6] == 0x01
0x4BD0	0x4837    LDR	R0, [PC, #220]
0x4BD2	0x7800    LDRB	R0, [R0, #0]
0x4BD4	0x2840    CMP	R0, #64
0x4BD6	0xD129    BNE	L__interruptDisplay192
0x4BD8	0x4836    LDR	R0, [PC, #216]
0x4BDA	0x7800    LDRB	R0, [R0, #0]
0x4BDC	0x2801    CMP	R0, #1
0x4BDE	0xD125    BNE	L__interruptDisplay191
;interruptUart4.c, 300 :: 		&& uart_receive4[7] == 0x00) {
0x4BE0	0x4835    LDR	R0, [PC, #212]
0x4BE2	0x7800    LDRB	R0, [R0, #0]
0x4BE4	0x2800    CMP	R0, #0
0x4BE6	0xD121    BNE	L__interruptDisplay190
L__interruptDisplay110:
;interruptUart4.c, 302 :: 		if(!control_taken){
0x4BE8	0x4934    LDR	R1, [PC, #208]
0x4BEA	0x6808    LDR	R0, [R1, #0]
0x4BEC	0xB9D0    CBNZ	R0, L_interruptDisplay101
;interruptUart4.c, 304 :: 		if (uart_receive4[8] == 0x00) {
0x4BEE	0x4834    LDR	R0, [PC, #208]
0x4BF0	0x7800    LDRB	R0, [R0, #0]
0x4BF2	0xB970    CBNZ	R0, L_interruptDisplay102
;interruptUart4.c, 305 :: 		if(velocity_mode != VELOCITY_LEOPARD){
0x4BF4	0x4833    LDR	R0, [PC, #204]
0x4BF6	0x8800    LDRH	R0, [R0, #0]
0x4BF8	0x2802    CMP	R0, #2
0x4BFA	0xD009    BEQ	L_interruptDisplay103
;interruptUart4.c, 306 :: 		velocity_mode_new = VELOCITY_LEOPARD;
0x4BFC	0x2102    MOVS	R1, #2
0x4BFE	0x4832    LDR	R0, [PC, #200]
0x4C00	0x8001    STRH	R1, [R0, #0]
;interruptUart4.c, 307 :: 		velocity_mode = VELOCITY_LEOPARD;
0x4C02	0x2102    MOVS	R1, #2
0x4C04	0x482F    LDR	R0, [PC, #188]
0x4C06	0x8001    STRH	R1, [R0, #0]
;interruptUart4.c, 308 :: 		change_velocity_mode(velocity_mode);
0x4C08	0xF2400002  MOVW	R0, #2
0x4C0C	0xF7FEFA12  BL	_change_velocity_mode+0
;interruptUart4.c, 309 :: 		}
L_interruptDisplay103:
;interruptUart4.c, 310 :: 		}
0x4C10	0xE007    B	L_interruptDisplay104
L_interruptDisplay102:
;interruptUart4.c, 312 :: 		if(velocity_mode == VELOCITY_LEOPARD){
0x4C12	0x482C    LDR	R0, [PC, #176]
0x4C14	0x8800    LDRH	R0, [R0, #0]
0x4C16	0x2802    CMP	R0, #2
0x4C18	0xD103    BNE	L_interruptDisplay105
;interruptUart4.c, 313 :: 		change_velocity_mode(velocity_mode);
0x4C1A	0x482A    LDR	R0, [PC, #168]
0x4C1C	0x8800    LDRH	R0, [R0, #0]
0x4C1E	0xF7FEFA09  BL	_change_velocity_mode+0
;interruptUart4.c, 314 :: 		}
L_interruptDisplay105:
;interruptUart4.c, 315 :: 		}
L_interruptDisplay104:
;interruptUart4.c, 316 :: 		}
0x4C22	0xE003    B	L_interruptDisplay106
L_interruptDisplay101:
;interruptUart4.c, 318 :: 		change_velocity_mode(velocity_mode);
0x4C24	0x4827    LDR	R0, [PC, #156]
0x4C26	0x8800    LDRH	R0, [R0, #0]
0x4C28	0xF7FEFA04  BL	_change_velocity_mode+0
;interruptUart4.c, 325 :: 		}
L_interruptDisplay106:
;interruptUart4.c, 297 :: 		else if (uart_receive4[0] == 0x5A && uart_receive4[1] == 0xA5 && uart_receive4[2] == 0x06
L__interruptDisplay197:
L__interruptDisplay196:
L__interruptDisplay195:
;interruptUart4.c, 298 :: 		&& uart_receive4[3] == 0x83 && uart_receive4[4] == 0x18
L__interruptDisplay194:
L__interruptDisplay193:
;interruptUart4.c, 299 :: 		&& uart_receive4[5] == 0x40 && uart_receive4[6] == 0x01
L__interruptDisplay192:
L__interruptDisplay191:
;interruptUart4.c, 300 :: 		&& uart_receive4[7] == 0x00) {
L__interruptDisplay190:
;interruptUart4.c, 327 :: 		}
L_interruptDisplay97:
L_interruptDisplay87:
L_interruptDisplay77:
L_interruptDisplay61:
L_interruptDisplay45:
L_interruptDisplay35:
;interruptUart4.c, 330 :: 		uart_count4 = 0;
0x4C2C	0x2100    MOVS	R1, #0
0x4C2E	0x4827    LDR	R0, [PC, #156]
0x4C30	0x8001    STRH	R1, [R0, #0]
;interruptUart4.c, 331 :: 		startReceivingData4 = 0x00;
0x4C32	0x2100    MOVS	R1, #0
0x4C34	0xB249    SXTB	R1, R1
0x4C36	0x4826    LDR	R0, [PC, #152]
0x4C38	0x6001    STR	R1, [R0, #0]
;interruptUart4.c, 332 :: 		rcv_count_helper4 = 0;
0x4C3A	0x2100    MOVS	R1, #0
0x4C3C	0x4825    LDR	R0, [PC, #148]
0x4C3E	0x7001    STRB	R1, [R0, #0]
;interruptUart4.c, 333 :: 		rcv_helper4[0] = 0x00;
0x4C40	0x2100    MOVS	R1, #0
0x4C42	0x4825    LDR	R0, [PC, #148]
0x4C44	0x7001    STRB	R1, [R0, #0]
;interruptUart4.c, 334 :: 		rcv_helper4[1] = 0x00;
0x4C46	0x2100    MOVS	R1, #0
0x4C48	0x4824    LDR	R0, [PC, #144]
0x4C4A	0x7001    STRB	R1, [R0, #0]
;interruptUart4.c, 336 :: 		for (i = 0; i < 10; i++) {
0x4C4C	0x2100    MOVS	R1, #0
0x4C4E	0xB209    SXTH	R1, R1
0x4C50	0x4823    LDR	R0, [PC, #140]
0x4C52	0x8001    STRH	R1, [R0, #0]
L_interruptDisplay107:
0x4C54	0x4822    LDR	R0, [PC, #136]
0x4C56	0xF9B00000  LDRSH	R0, [R0, #0]
0x4C5A	0x280A    CMP	R0, #10
0x4C5C	0xDA0C    BGE	L_interruptDisplay108
;interruptUart4.c, 337 :: 		uart_receive4[i] = 0x00;
0x4C5E	0x4A20    LDR	R2, [PC, #128]
0x4C60	0xF9B21000  LDRSH	R1, [R2, #0]
0x4C64	0x480D    LDR	R0, [PC, #52]
0x4C66	0x1841    ADDS	R1, R0, R1
0x4C68	0x2000    MOVS	R0, #0
0x4C6A	0x7008    STRB	R0, [R1, #0]
;interruptUart4.c, 336 :: 		for (i = 0; i < 10; i++) {
0x4C6C	0x4610    MOV	R0, R2
0x4C6E	0xF9B00000  LDRSH	R0, [R0, #0]
0x4C72	0x1C40    ADDS	R0, R0, #1
0x4C74	0x8010    STRH	R0, [R2, #0]
;interruptUart4.c, 338 :: 		}
0x4C76	0xE7ED    B	L_interruptDisplay107
L_interruptDisplay108:
;interruptUart4.c, 53 :: 		if (rcv_count_helper4 == 0 && startReceivingData4 == 0x01 && uart_count4 >= uart_receive4[2] + 3) {
L__interruptDisplay200:
L__interruptDisplay199:
L__interruptDisplay198:
;interruptUart4.c, 340 :: 		}
L_end_interruptDisplay:
0x4C78	0xF8DDE000  LDR	LR, [SP, #0]
0x4C7C	0xB001    ADD	SP, SP, #4
0x4C7E	0x4770    BX	LR
0x4C80	0x00062000  	_wannaBeActiveBattery2+0
0x4C84	0x00082000  	_wannaBeActiveBattery2_old+0
0x4C88	0x0FA42200  	_battery_change_continue+0
0x4C8C	0x0FA02200  	_battery_change+0
0x4C90	0x00042000  	_battery_change_count+0
0x4C94	0x00002000  	_battery_chosen+0
0x4C98	0x000C2000  	_wannaBeActiveBattery1_old+0
0x4C9C	0x0A322000  	_uart_receive4+0
0x4CA0	0x0A332000  	_uart_receive4+1
0x4CA4	0x0A342000  	_uart_receive4+2
0x4CA8	0x0A352000  	_uart_receive4+3
0x4CAC	0x0A362000  	_uart_receive4+4
0x4CB0	0x0A372000  	_uart_receive4+5
0x4CB4	0x0A382000  	_uart_receive4+6
0x4CB8	0x0A392000  	_uart_receive4+7
0x4CBC	0x408C2201  	_control_taken+0
0x4CC0	0x0A3A2000  	_uart_receive4+8
0x4CC4	0x09FE2000  	_velocity_mode+0
0x4CC8	0x00482000  	_velocity_mode_new+0
0x4CCC	0x00782000  	_uart_count4+0
0x4CD0	0x40A82201  	_startReceivingData4+0
0x4CD4	0x00762000  	_rcv_count_helper4+0
0x4CD8	0x0A302000  	_rcv_helper4+0
0x4CDC	0x0A312000  	_rcv_helper4+1
0x4CE0	0x00182000  	_i+0
; end of _interruptDisplay
_UART4_Read:
;__Lib_UART_123_45_6.c, 122 :: 		
0x2154	0xB081    SUB	SP, SP, #4
0x2156	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45_6.c, 123 :: 		
0x215A	0x4803    LDR	R0, [PC, #12]
0x215C	0xF7FFF9B4  BL	__Lib_UART_123_45_6_UARTx_Read+0
;__Lib_UART_123_45_6.c, 124 :: 		
L_end_UART4_Read:
0x2160	0xF8DDE000  LDR	LR, [SP, #0]
0x2164	0xB001    ADD	SP, SP, #4
0x2166	0x4770    BX	LR
0x2168	0x4C004000  	UART4_SR+0
; end of _UART4_Read
__Lib_UART_123_45_6_UARTx_Read:
;__Lib_UART_123_45_6.c, 102 :: 		
; UART_Base start address is: 0 (R0)
0x14C8	0xB081    SUB	SP, SP, #4
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 0 (R0)
; UART_Base end address is: 0 (R0)
;__Lib_UART_123_45_6.c, 104 :: 		
L___Lib_UART_123_45_6_UARTx_Read4:
; UART_Base start address is: 0 (R0)
0x14CA	0x6802    LDR	R2, [R0, #0]
0x14CC	0xF3C21140  UBFX	R1, R2, #5, #1
0x14D0	0xB901    CBNZ	R1, L___Lib_UART_123_45_6_UARTx_Read5
0x14D2	0xE7FA    B	L___Lib_UART_123_45_6_UARTx_Read4
L___Lib_UART_123_45_6_UARTx_Read5:
;__Lib_UART_123_45_6.c, 107 :: 		
0x14D4	0x1D01    ADDS	R1, R0, #4
; UART_Base end address is: 0 (R0)
0x14D6	0x6809    LDR	R1, [R1, #0]
0x14D8	0xB288    UXTH	R0, R1
;__Lib_UART_123_45_6.c, 108 :: 		
L_end_UARTx_Read:
0x14DA	0xB001    ADD	SP, SP, #4
0x14DC	0x4770    BX	LR
; end of __Lib_UART_123_45_6_UARTx_Read
_interruptJoystick:
;interruptUart3.c, 4 :: 		void interruptJoystick() iv IVT_INT_USART3 ics ICS_AUTO {
0x4320	0xB081    SUB	SP, SP, #4
0x4322	0xF8CDE000  STR	LR, [SP, #0]
;interruptUart3.c, 5 :: 		receive3 = UART3_Read();
0x4326	0xF7FDFF39  BL	_UART3_Read+0
0x432A	0x4973    LDR	R1, [PC, #460]
0x432C	0x7008    STRB	R0, [R1, #0]
;interruptUart3.c, 7 :: 		if((receive3 == 0x21)&&(!startReceivingData3)){
0x432E	0xB2C0    UXTB	R0, R0
0x4330	0x2821    CMP	R0, #33
0x4332	0xD120    BNE	L__interruptJoystick38
0x4334	0x4971    LDR	R1, [PC, #452]
0x4336	0x6808    LDR	R0, [R1, #0]
0x4338	0xB9E8    CBNZ	R0, L__interruptJoystick37
L__interruptJoystick36:
;interruptUart3.c, 8 :: 		uart_count3=0;
0x433A	0x2100    MOVS	R1, #0
0x433C	0x4870    LDR	R0, [PC, #448]
0x433E	0x8001    STRH	R1, [R0, #0]
;interruptUart3.c, 9 :: 		startReceivingData3 = 1;
0x4340	0x2101    MOVS	R1, #1
0x4342	0xB249    SXTB	R1, R1
0x4344	0x486D    LDR	R0, [PC, #436]
0x4346	0x6001    STR	R1, [R0, #0]
;interruptUart3.c, 10 :: 		for(i=0; i<10; i++){
0x4348	0x2100    MOVS	R1, #0
0x434A	0xB209    SXTH	R1, R1
0x434C	0x486D    LDR	R0, [PC, #436]
0x434E	0x8001    STRH	R1, [R0, #0]
L_interruptJoystick3:
0x4350	0x486C    LDR	R0, [PC, #432]
0x4352	0xF9B00000  LDRSH	R0, [R0, #0]
0x4356	0x280A    CMP	R0, #10
0x4358	0xDA0C    BGE	L_interruptJoystick4
;interruptUart3.c, 11 :: 		uart_receive3[i] = 0;
0x435A	0x4A6A    LDR	R2, [PC, #424]
0x435C	0xF9B21000  LDRSH	R1, [R2, #0]
0x4360	0x4869    LDR	R0, [PC, #420]
0x4362	0x1841    ADDS	R1, R0, R1
0x4364	0x2000    MOVS	R0, #0
0x4366	0x7008    STRB	R0, [R1, #0]
;interruptUart3.c, 10 :: 		for(i=0; i<10; i++){
0x4368	0x4610    MOV	R0, R2
0x436A	0xF9B00000  LDRSH	R0, [R0, #0]
0x436E	0x1C40    ADDS	R0, R0, #1
0x4370	0x8010    STRH	R0, [R2, #0]
;interruptUart3.c, 12 :: 		}
0x4372	0xE7ED    B	L_interruptJoystick3
L_interruptJoystick4:
;interruptUart3.c, 13 :: 		}
0x4374	0xE07C    B	L_interruptJoystick6
;interruptUart3.c, 7 :: 		if((receive3 == 0x21)&&(!startReceivingData3)){
L__interruptJoystick38:
L__interruptJoystick37:
;interruptUart3.c, 15 :: 		else if((receive3 == 0x3B)&&(startReceivingData3)&&(uart_count3 + 1 == uartLength3)){
0x4376	0x4860    LDR	R0, [PC, #384]
0x4378	0x7800    LDRB	R0, [R0, #0]
0x437A	0x283B    CMP	R0, #59
0x437C	0xF0408078  BNE	L__interruptJoystick46
0x4380	0x495E    LDR	R1, [PC, #376]
0x4382	0x6808    LDR	R0, [R1, #0]
0x4384	0x2800    CMP	R0, #0
0x4386	0xF0008073  BEQ	L__interruptJoystick45
0x438A	0x485D    LDR	R0, [PC, #372]
0x438C	0x8800    LDRH	R0, [R0, #0]
0x438E	0x1C41    ADDS	R1, R0, #1
0x4390	0xB289    UXTH	R1, R1
0x4392	0x485E    LDR	R0, [PC, #376]
0x4394	0x8800    LDRH	R0, [R0, #0]
0x4396	0x4281    CMP	R1, R0
0x4398	0xF040806A  BNE	L__interruptJoystick44
L__interruptJoystick35:
;interruptUart3.c, 16 :: 		uart_receive3[uart_count3] = receive3;
0x439C	0x4A58    LDR	R2, [PC, #352]
0x439E	0x8811    LDRH	R1, [R2, #0]
0x43A0	0x4859    LDR	R0, [PC, #356]
0x43A2	0x1841    ADDS	R1, R0, R1
0x43A4	0x4854    LDR	R0, [PC, #336]
0x43A6	0x7800    LDRB	R0, [R0, #0]
0x43A8	0x7008    STRB	R0, [R1, #0]
;interruptUart3.c, 17 :: 		uart_count3 = 0;
0x43AA	0x2000    MOVS	R0, #0
0x43AC	0x8010    STRH	R0, [R2, #0]
;interruptUart3.c, 18 :: 		startReceivingData3 = 0;
0x43AE	0x2100    MOVS	R1, #0
0x43B0	0xB249    SXTB	R1, R1
0x43B2	0x4852    LDR	R0, [PC, #328]
0x43B4	0x6001    STR	R1, [R0, #0]
;interruptUart3.c, 19 :: 		uartLength3 = 0;
0x43B6	0x2100    MOVS	R1, #0
0x43B8	0x4854    LDR	R0, [PC, #336]
0x43BA	0x8001    STRH	R1, [R0, #0]
;interruptUart3.c, 24 :: 		if((uart_receive3[0]==0x21)&&(uart_receive3[1]==0x50)&&(uart_receive3[5] = 0x3B)){
0x43BC	0x4852    LDR	R0, [PC, #328]
0x43BE	0x7800    LDRB	R0, [R0, #0]
0x43C0	0x2821    CMP	R0, #33
0x43C2	0xF040803F  BNE	L__interruptJoystick43
0x43C6	0x4852    LDR	R0, [PC, #328]
0x43C8	0x7800    LDRB	R0, [R0, #0]
0x43CA	0x2850    CMP	R0, #80
0x43CC	0xD13A    BNE	L__interruptJoystick42
0x43CE	0x213B    MOVS	R1, #59
0x43D0	0x4850    LDR	R0, [PC, #320]
0x43D2	0x7001    STRB	R1, [R0, #0]
L__interruptJoystick34:
;interruptUart3.c, 26 :: 		countJoystickConnection = 0;
0x43D4	0x2100    MOVS	R1, #0
0x43D6	0x4850    LDR	R0, [PC, #320]
0x43D8	0x8001    STRH	R1, [R0, #0]
;interruptUart3.c, 27 :: 		bitCheckJoystick = 0;
0x43DA	0x2100    MOVS	R1, #0
0x43DC	0xB249    SXTB	R1, R1
0x43DE	0x484F    LDR	R0, [PC, #316]
0x43E0	0x6001    STR	R1, [R0, #0]
;interruptUart3.c, 30 :: 		if(!control_taken){
0x43E2	0x494F    LDR	R1, [PC, #316]
0x43E4	0x6808    LDR	R0, [R1, #0]
0x43E6	0x2800    CMP	R0, #0
0x43E8	0xD11D    BNE	L_interruptJoystick13
;interruptUart3.c, 31 :: 		gear_status = uart_receive3[2];
0x43EA	0x484E    LDR	R0, [PC, #312]
0x43EC	0x7800    LDRB	R0, [R0, #0]
0x43EE	0x4A4E    LDR	R2, [PC, #312]
0x43F0	0x8010    STRH	R0, [R2, #0]
;interruptUart3.c, 32 :: 		dutyy = uart_receive3[3];
0x43F2	0x484E    LDR	R0, [PC, #312]
0x43F4	0x7801    LDRB	R1, [R0, #0]
0x43F6	0x484E    LDR	R0, [PC, #312]
0x43F8	0x8001    STRH	R1, [R0, #0]
;interruptUart3.c, 34 :: 		if((gear_status == 4) && (!resetedTouchSensor)){
0x43FA	0x4610    MOV	R0, R2
0x43FC	0x8800    LDRH	R0, [R0, #0]
0x43FE	0x2804    CMP	R0, #4
0x4400	0xD109    BNE	L__interruptJoystick40
0x4402	0x494C    LDR	R1, [PC, #304]
0x4404	0x6808    LDR	R0, [R1, #0]
0x4406	0xB930    CBNZ	R0, L__interruptJoystick39
L__interruptJoystick33:
;interruptUart3.c, 35 :: 		resetedTouchSensor = 1;
0x4408	0x2101    MOVS	R1, #1
0x440A	0xB249    SXTB	R1, R1
0x440C	0x4849    LDR	R0, [PC, #292]
0x440E	0x6001    STR	R1, [R0, #0]
;interruptUart3.c, 36 :: 		resetTouchSensor = 1;
0x4410	0x4849    LDR	R0, [PC, #292]
0x4412	0x6001    STR	R1, [R0, #0]
;interruptUart3.c, 37 :: 		}
0x4414	0xE007    B	L_interruptJoystick17
;interruptUart3.c, 34 :: 		if((gear_status == 4) && (!resetedTouchSensor)){
L__interruptJoystick40:
L__interruptJoystick39:
;interruptUart3.c, 38 :: 		else if(gear_status != 4){
0x4416	0x4844    LDR	R0, [PC, #272]
0x4418	0x8800    LDRH	R0, [R0, #0]
0x441A	0x2804    CMP	R0, #4
0x441C	0xD003    BEQ	L_interruptJoystick18
;interruptUart3.c, 39 :: 		resetedTouchSensor = 0;
0x441E	0x2100    MOVS	R1, #0
0x4420	0xB249    SXTB	R1, R1
0x4422	0x4844    LDR	R0, [PC, #272]
0x4424	0x6001    STR	R1, [R0, #0]
;interruptUart3.c, 40 :: 		}
L_interruptJoystick18:
L_interruptJoystick17:
;interruptUart3.c, 43 :: 		}
L_interruptJoystick13:
;interruptUart3.c, 45 :: 		if(bitCheckIsItStoppedGear){
0x4426	0x4945    LDR	R1, [PC, #276]
0x4428	0x6808    LDR	R0, [R1, #0]
0x442A	0xB158    CBZ	R0, L_interruptJoystick19
;interruptUart3.c, 46 :: 		bitCheckIsItStoppedGear = 0;
0x442C	0x2100    MOVS	R1, #0
0x442E	0xB249    SXTB	R1, R1
0x4430	0x4842    LDR	R0, [PC, #264]
0x4432	0x6001    STR	R1, [R0, #0]
;interruptUart3.c, 47 :: 		if(gear_status != 4){
0x4434	0x483C    LDR	R0, [PC, #240]
0x4436	0x8800    LDRH	R0, [R0, #0]
0x4438	0x2804    CMP	R0, #4
0x443A	0xD003    BEQ	L_interruptJoystick20
;interruptUart3.c, 48 :: 		stopGearBit = 1;
0x443C	0x2101    MOVS	R1, #1
0x443E	0xB249    SXTB	R1, R1
0x4440	0x483F    LDR	R0, [PC, #252]
0x4442	0x6001    STR	R1, [R0, #0]
;interruptUart3.c, 49 :: 		}
L_interruptJoystick20:
;interruptUart3.c, 50 :: 		}
L_interruptJoystick19:
;interruptUart3.c, 24 :: 		if((uart_receive3[0]==0x21)&&(uart_receive3[1]==0x50)&&(uart_receive3[5] = 0x3B)){
L__interruptJoystick43:
L__interruptJoystick42:
;interruptUart3.c, 54 :: 		for(i=0; i<10; i++){
0x4444	0x2100    MOVS	R1, #0
0x4446	0xB209    SXTH	R1, R1
0x4448	0x482E    LDR	R0, [PC, #184]
0x444A	0x8001    STRH	R1, [R0, #0]
L_interruptJoystick21:
0x444C	0x482D    LDR	R0, [PC, #180]
0x444E	0xF9B00000  LDRSH	R0, [R0, #0]
0x4452	0x280A    CMP	R0, #10
0x4454	0xDA0C    BGE	L_interruptJoystick22
;interruptUart3.c, 55 :: 		uart_receive3[i] = 0;
0x4456	0x4A2B    LDR	R2, [PC, #172]
0x4458	0xF9B21000  LDRSH	R1, [R2, #0]
0x445C	0x482A    LDR	R0, [PC, #168]
0x445E	0x1841    ADDS	R1, R0, R1
0x4460	0x2000    MOVS	R0, #0
0x4462	0x7008    STRB	R0, [R1, #0]
;interruptUart3.c, 54 :: 		for(i=0; i<10; i++){
0x4464	0x4610    MOV	R0, R2
0x4466	0xF9B00000  LDRSH	R0, [R0, #0]
0x446A	0x1C40    ADDS	R0, R0, #1
0x446C	0x8010    STRH	R0, [R2, #0]
;interruptUart3.c, 56 :: 		}
0x446E	0xE7ED    B	L_interruptJoystick21
L_interruptJoystick22:
;interruptUart3.c, 15 :: 		else if((receive3 == 0x3B)&&(startReceivingData3)&&(uart_count3 + 1 == uartLength3)){
L__interruptJoystick46:
L__interruptJoystick45:
L__interruptJoystick44:
;interruptUart3.c, 58 :: 		}
L_interruptJoystick6:
;interruptUart3.c, 61 :: 		if(startReceivingData3 == 1){
0x4470	0x4922    LDR	R1, [PC, #136]
0x4472	0x6808    LDR	R0, [R1, #0]
0x4474	0x2800    CMP	R0, #0
0x4476	0xD03A    BEQ	L_interruptJoystick24
;interruptUart3.c, 62 :: 		uart_receive3[uart_count3] = receive3;
0x4478	0x4A21    LDR	R2, [PC, #132]
0x447A	0x8811    LDRH	R1, [R2, #0]
0x447C	0x4822    LDR	R0, [PC, #136]
0x447E	0x1841    ADDS	R1, R0, R1
0x4480	0x481D    LDR	R0, [PC, #116]
0x4482	0x7800    LDRB	R0, [R0, #0]
0x4484	0x7008    STRB	R0, [R1, #0]
;interruptUart3.c, 63 :: 		uart_count3++;
0x4486	0x4610    MOV	R0, R2
0x4488	0x8800    LDRH	R0, [R0, #0]
0x448A	0x1C40    ADDS	R0, R0, #1
0x448C	0xB280    UXTH	R0, R0
0x448E	0x8010    STRH	R0, [R2, #0]
;interruptUart3.c, 65 :: 		if(uart_count3 == 2)
0x4490	0x2802    CMP	R0, #2
0x4492	0xD108    BNE	L_interruptJoystick25
;interruptUart3.c, 67 :: 		switch (uart_receive3[1])
0x4494	0xE003    B	L_interruptJoystick26
;interruptUart3.c, 69 :: 		case 0x50:
L_interruptJoystick28:
;interruptUart3.c, 70 :: 		uartLength3 = 6;
0x4496	0x2106    MOVS	R1, #6
0x4498	0x481C    LDR	R0, [PC, #112]
0x449A	0x8001    STRH	R1, [R0, #0]
;interruptUart3.c, 71 :: 		break;
0x449C	0xE003    B	L_interruptJoystick27
;interruptUart3.c, 72 :: 		}
L_interruptJoystick26:
0x449E	0x481C    LDR	R0, [PC, #112]
0x44A0	0x7800    LDRB	R0, [R0, #0]
0x44A2	0x2850    CMP	R0, #80
0x44A4	0xD0F7    BEQ	L_interruptJoystick28
L_interruptJoystick27:
;interruptUart3.c, 73 :: 		}
L_interruptJoystick25:
;interruptUart3.c, 75 :: 		if(uart_count3 > 9){
0x44A6	0x4816    LDR	R0, [PC, #88]
0x44A8	0x8800    LDRH	R0, [R0, #0]
0x44AA	0x2809    CMP	R0, #9
0x44AC	0xD91F    BLS	L_interruptJoystick29
;interruptUart3.c, 76 :: 		uart_count3 = 0;
0x44AE	0x2100    MOVS	R1, #0
0x44B0	0x4813    LDR	R0, [PC, #76]
0x44B2	0x8001    STRH	R1, [R0, #0]
;interruptUart3.c, 77 :: 		uartLength3 = 0;
0x44B4	0x2100    MOVS	R1, #0
0x44B6	0x4815    LDR	R0, [PC, #84]
0x44B8	0x8001    STRH	R1, [R0, #0]
;interruptUart3.c, 78 :: 		startReceivingData3 = 0;
0x44BA	0x2100    MOVS	R1, #0
0x44BC	0xB249    SXTB	R1, R1
0x44BE	0x480F    LDR	R0, [PC, #60]
0x44C0	0x6001    STR	R1, [R0, #0]
;interruptUart3.c, 79 :: 		for(i=0; i<10; i++){
0x44C2	0x2100    MOVS	R1, #0
0x44C4	0xB209    SXTH	R1, R1
0x44C6	0x480F    LDR	R0, [PC, #60]
0x44C8	0x8001    STRH	R1, [R0, #0]
L_interruptJoystick30:
0x44CA	0x480E    LDR	R0, [PC, #56]
0x44CC	0xF9B00000  LDRSH	R0, [R0, #0]
0x44D0	0x280A    CMP	R0, #10
0x44D2	0xDA0C    BGE	L_interruptJoystick31
;interruptUart3.c, 80 :: 		uart_receive3[i] = 0;
0x44D4	0x4A0B    LDR	R2, [PC, #44]
0x44D6	0xF9B21000  LDRSH	R1, [R2, #0]
0x44DA	0x480B    LDR	R0, [PC, #44]
0x44DC	0x1841    ADDS	R1, R0, R1
0x44DE	0x2000    MOVS	R0, #0
0x44E0	0x7008    STRB	R0, [R1, #0]
;interruptUart3.c, 79 :: 		for(i=0; i<10; i++){
0x44E2	0x4610    MOV	R0, R2
0x44E4	0xF9B00000  LDRSH	R0, [R0, #0]
0x44E8	0x1C40    ADDS	R0, R0, #1
0x44EA	0x8010    STRH	R0, [R2, #0]
;interruptUart3.c, 81 :: 		}
0x44EC	0xE7ED    B	L_interruptJoystick30
L_interruptJoystick31:
;interruptUart3.c, 82 :: 		}
L_interruptJoystick29:
;interruptUart3.c, 83 :: 		}
L_interruptJoystick24:
;interruptUart3.c, 85 :: 		}
L_end_interruptJoystick:
0x44EE	0xF8DDE000  LDR	LR, [SP, #0]
0x44F2	0xB001    ADD	SP, SP, #4
0x44F4	0x4770    BX	LR
0x44F6	0xBF00    NOP
0x44F8	0x00772000  	_receive3+0
0x44FC	0x40AC2201  	_startReceivingData3+0
0x4500	0x007A2000  	_uart_count3+0
0x4504	0x00182000  	_i+0
0x4508	0x0A3C2000  	_uart_receive3+0
0x450C	0x0A462000  	_uartLength3+0
0x4510	0x0A3D2000  	_uart_receive3+1
0x4514	0x0A412000  	_uart_receive3+5
0x4518	0x00722000  	_countJoystickConnection+0
0x451C	0x40A42201  	_bitCheckJoystick+0
0x4520	0x408C2201  	_control_taken+0
0x4524	0x0A3E2000  	_uart_receive3+2
0x4528	0x00342000  	_gear_status+0
0x452C	0x0A3F2000  	_uart_receive3+3
0x4530	0x004E2000  	_dutyy+0
0x4534	0x40B42201  	_resetedTouchSensor+0
0x4538	0x40B02201  	_resetTouchSensor+0
0x453C	0x40EC2201  	_bitCheckIsItStoppedGear+0
0x4540	0x40E82201  	_stopGearBit+0
; end of _interruptJoystick
_UART3_Read:
;__Lib_UART_123_45_6.c, 118 :: 		
0x219C	0xB081    SUB	SP, SP, #4
0x219E	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45_6.c, 119 :: 		
0x21A2	0x4803    LDR	R0, [PC, #12]
0x21A4	0xF7FFF990  BL	__Lib_UART_123_45_6_UARTx_Read+0
;__Lib_UART_123_45_6.c, 120 :: 		
L_end_UART3_Read:
0x21A8	0xF8DDE000  LDR	LR, [SP, #0]
0x21AC	0xB001    ADD	SP, SP, #4
0x21AE	0x4770    BX	LR
0x21B0	0x48004000  	USART3_SR+0
; end of _UART3_Read
_Timer2_interrupt:
;timers.c, 6 :: 		void Timer2_interrupt() iv IVT_INT_TIM2 {
0x3240	0xB430    PUSH	(R4, R5)
0x3242	0xB081    SUB	SP, SP, #4
0x3244	0xF8CDE000  STR	LR, [SP, #0]
;timers.c, 7 :: 		TIM2_SR.UIF = 0;
0x3248	0x2100    MOVS	R1, #0
0x324A	0xB249    SXTB	R1, R1
0x324C	0x482B    LDR	R0, [PC, #172]
0x324E	0x6001    STR	R1, [R0, #0]
;timers.c, 23 :: 		if((battery_chosen_old == 1 || battery_chosen_old == 2)&& ACCUMULATOR_SENSE)
0x3250	0x482B    LDR	R0, [PC, #172]
0x3252	0xF9B00000  LDRSH	R0, [R0, #0]
0x3256	0x2801    CMP	R0, #1
0x3258	0xD005    BEQ	L__Timer2_interrupt25
0x325A	0x4829    LDR	R0, [PC, #164]
0x325C	0xF9B00000  LDRSH	R0, [R0, #0]
0x3260	0x2802    CMP	R0, #2
0x3262	0xD000    BEQ	L__Timer2_interrupt24
0x3264	0xE045    B	L_Timer2_interrupt4
L__Timer2_interrupt25:
L__Timer2_interrupt24:
0x3266	0x4927    LDR	R1, [PC, #156]
0x3268	0x6808    LDR	R0, [R1, #0]
0x326A	0x2800    CMP	R0, #0
0x326C	0xD041    BEQ	L__Timer2_interrupt26
L__Timer2_interrupt22:
;timers.c, 25 :: 		if(duzinaSignala2 > dutyy){
0x326E	0x4826    LDR	R0, [PC, #152]
0x3270	0xF9B01000  LDRSH	R1, [R0, #0]
0x3274	0x4825    LDR	R0, [PC, #148]
0x3276	0x6800    LDR	R0, [R0, #0]
0x3278	0x4288    CMP	R0, R1
0x327A	0xDD04    BLE	L_Timer2_interrupt5
;timers.c, 26 :: 		duzinaSignala2--;
0x327C	0x4923    LDR	R1, [PC, #140]
0x327E	0x6808    LDR	R0, [R1, #0]
0x3280	0x1E40    SUBS	R0, R0, #1
0x3282	0x6008    STR	R0, [R1, #0]
;timers.c, 27 :: 		}
0x3284	0xE00A    B	L_Timer2_interrupt6
L_Timer2_interrupt5:
;timers.c, 28 :: 		else if(duzinaSignala2 < dutyy){
0x3286	0x4820    LDR	R0, [PC, #128]
0x3288	0xF9B01000  LDRSH	R1, [R0, #0]
0x328C	0x481F    LDR	R0, [PC, #124]
0x328E	0x6800    LDR	R0, [R0, #0]
0x3290	0x4288    CMP	R0, R1
0x3292	0xDA03    BGE	L_Timer2_interrupt7
;timers.c, 29 :: 		duzinaSignala2++;
0x3294	0x491D    LDR	R1, [PC, #116]
0x3296	0x6808    LDR	R0, [R1, #0]
0x3298	0x1C40    ADDS	R0, R0, #1
0x329A	0x6008    STR	R0, [R1, #0]
;timers.c, 30 :: 		}
L_Timer2_interrupt7:
L_Timer2_interrupt6:
;timers.c, 32 :: 		pwm_percent =  (double)(((double)(((double)duzinaSignala2) * ((double)100))) / ((double)2000));
0x329C	0x481B    LDR	R0, [PC, #108]
0x329E	0xED100A00  VLDR.32	S0, [R0, #0]
0x32A2	0xEEF80AC0  VCVT.F32.S32	S1, S0
0x32A6	0x481A    LDR	R0, [PC, #104]
0x32A8	0xEE000A10  VMOV	S0, R0
0x32AC	0xEE600A80  VMUL.F32	S1, S1, S0
0x32B0	0x4818    LDR	R0, [PC, #96]
0x32B2	0xEE000A10  VMOV	S0, R0
0x32B6	0xEEC00A80  VDIV.F32	S1, S1, S0
0x32BA	0x4817    LDR	R0, [PC, #92]
0x32BC	0xED400A00  VSTR.32	S1, [R0, #0]
;timers.c, 33 :: 		pwm_duty = ((unsigned int)((double)(((double)(((double)pwm_ratio) * pwm_percent)) / ((double)100))));
0x32C0	0x4816    LDR	R0, [PC, #88]
0x32C2	0x8800    LDRH	R0, [R0, #0]
0x32C4	0xEE000A10  VMOV	S0, R0
0x32C8	0xEEB80A40  VCVT.F32.U32	S0, S0
0x32CC	0xEE600A20  VMUL.F32	S1, S0, S1
0x32D0	0x480F    LDR	R0, [PC, #60]
0x32D2	0xEE000A10  VMOV	S0, R0
0x32D6	0xEE800A80  VDIV.F32	S0, S1, S0
0x32DA	0xEEBC0A40  VCVT.U32.F32	S0, S0
0x32DE	0xEE101A10  VMOV	R1, S0
0x32E2	0xB289    UXTH	R1, R1
0x32E4	0x480E    LDR	R0, [PC, #56]
0x32E6	0x8001    STRH	R1, [R0, #0]
;timers.c, 34 :: 		PWM_TIM3_Set_Duty(pwm_duty, _PWM_NON_INVERTED, _PWM_CHANNEL2);
0x32E8	0xB288    UXTH	R0, R1
0x32EA	0x2201    MOVS	R2, #1
0x32EC	0x2100    MOVS	R1, #0
0x32EE	0xF7FFF8AF  BL	_PWM_TIM3_Set_Duty+0
;timers.c, 35 :: 		}
L_Timer2_interrupt4:
;timers.c, 23 :: 		if((battery_chosen_old == 1 || battery_chosen_old == 2)&& ACCUMULATOR_SENSE)
L__Timer2_interrupt26:
;timers.c, 36 :: 		}
L_end_Timer2_interrupt:
0x32F2	0xF8DDE000  LDR	LR, [SP, #0]
0x32F6	0xB001    ADD	SP, SP, #4
0x32F8	0xBC30    POP	(R4, R5)
0x32FA	0x4770    BX	LR
0x32FC	0x02004200  	TIM2_SR+0
0x3300	0x00022000  	_battery_chosen_old+0
0x3304	0x02184240  	ACCUMULATOR_SENSE+0
0x3308	0x004E2000  	_dutyy+0
0x330C	0x00502000  	_duzinaSignala2+0
0x3310	0x000042C8  	#1120403456
0x3314	0x000044FA  	#1157234688
0x3318	0x00442000  	_pwm_percent+0
0x331C	0x0A002000  	_pwm_ratio+0
0x3320	0x0A022000  	_pwm_duty+0
; end of _Timer2_interrupt
_interruptMotor:
;interruptUart1.c, 3 :: 		void interruptMotor() iv IVT_INT_USART1 ics ICS_AUTO {
0x3A9C	0xB081    SUB	SP, SP, #4
0x3A9E	0xF8CDE000  STR	LR, [SP, #0]
;interruptUart1.c, 5 :: 		receiveUart1 = UART1_Read();
0x3AA2	0xF7FEFB87  BL	_UART1_Read+0
0x3AA6	0x4903    LDR	R1, [PC, #12]
0x3AA8	0x7008    STRB	R0, [R1, #0]
;interruptUart1.c, 7 :: 		}
L_end_interruptMotor:
0x3AAA	0xF8DDE000  LDR	LR, [SP, #0]
0x3AAE	0xB001    ADD	SP, SP, #4
0x3AB0	0x4770    BX	LR
0x3AB2	0xBF00    NOP
0x3AB4	0x0A482000  	_receiveUart1+0
; end of _interruptMotor
_UART1_Read:
;__Lib_UART_123_45_6.c, 110 :: 		
0x21B4	0xB081    SUB	SP, SP, #4
0x21B6	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45_6.c, 111 :: 		
0x21BA	0x4803    LDR	R0, [PC, #12]
0x21BC	0xF7FFF984  BL	__Lib_UART_123_45_6_UARTx_Read+0
;__Lib_UART_123_45_6.c, 112 :: 		
L_end_UART1_Read:
0x21C0	0xF8DDE000  LDR	LR, [SP, #0]
0x21C4	0xB001    ADD	SP, SP, #4
0x21C6	0x4770    BX	LR
0x21C8	0x10004001  	USART1_SR+0
; end of _UART1_Read
_interruptLora:
;interruptUart6.c, 9 :: 		void interruptLora() iv IVT_INT_USART6 ics ICS_AUTO {
0x3AB8	0xB082    SUB	SP, SP, #8
0x3ABA	0xF8CDE000  STR	LR, [SP, #0]
;interruptUart6.c, 10 :: 		receive6 = UART6_Read();
0x3ABE	0xF7FEFB55  BL	_UART6_Read+0
0x3AC2	0x4995    LDR	R1, [PC, #596]
0x3AC4	0x7008    STRB	R0, [R1, #0]
;interruptUart6.c, 12 :: 		if((receive6 == 0x21)&&(!startReceivingData6)){
0x3AC6	0xB2C0    UXTB	R0, R0
0x3AC8	0x2821    CMP	R0, #33
0x3ACA	0xD120    BNE	L__interruptLora65
0x3ACC	0x4993    LDR	R1, [PC, #588]
0x3ACE	0x6808    LDR	R0, [R1, #0]
0x3AD0	0xB9E8    CBNZ	R0, L__interruptLora64
L__interruptLora63:
;interruptUart6.c, 13 :: 		uart_count6=0;
0x3AD2	0x2100    MOVS	R1, #0
0x3AD4	0x4892    LDR	R0, [PC, #584]
0x3AD6	0x8001    STRH	R1, [R0, #0]
;interruptUart6.c, 14 :: 		startReceivingData6 = 1;
0x3AD8	0x2101    MOVS	R1, #1
0x3ADA	0xB249    SXTB	R1, R1
0x3ADC	0x488F    LDR	R0, [PC, #572]
0x3ADE	0x6001    STR	R1, [R0, #0]
;interruptUart6.c, 15 :: 		for(i=0; i<12; i++){
0x3AE0	0x2100    MOVS	R1, #0
0x3AE2	0xB209    SXTH	R1, R1
0x3AE4	0x488F    LDR	R0, [PC, #572]
0x3AE6	0x8001    STRH	R1, [R0, #0]
L_interruptLora3:
0x3AE8	0x488E    LDR	R0, [PC, #568]
0x3AEA	0xF9B00000  LDRSH	R0, [R0, #0]
0x3AEE	0x280C    CMP	R0, #12
0x3AF0	0xDA0C    BGE	L_interruptLora4
;interruptUart6.c, 16 :: 		uart_receive6[i] = 0;
0x3AF2	0x4A8C    LDR	R2, [PC, #560]
0x3AF4	0xF9B21000  LDRSH	R1, [R2, #0]
0x3AF8	0x488B    LDR	R0, [PC, #556]
0x3AFA	0x1841    ADDS	R1, R0, R1
0x3AFC	0x2000    MOVS	R0, #0
0x3AFE	0x7008    STRB	R0, [R1, #0]
;interruptUart6.c, 15 :: 		for(i=0; i<12; i++){
0x3B00	0x4610    MOV	R0, R2
0x3B02	0xF9B00000  LDRSH	R0, [R0, #0]
0x3B06	0x1C40    ADDS	R0, R0, #1
0x3B08	0x8010    STRH	R0, [R2, #0]
;interruptUart6.c, 17 :: 		}
0x3B0A	0xE7ED    B	L_interruptLora3
L_interruptLora4:
;interruptUart6.c, 18 :: 		}
0x3B0C	0xE1C7    B	L_interruptLora6
;interruptUart6.c, 12 :: 		if((receive6 == 0x21)&&(!startReceivingData6)){
L__interruptLora65:
L__interruptLora64:
;interruptUart6.c, 22 :: 		else if((receive6 == 0x3B)&&(startReceivingData6)&&(uart_count6 + 1 == uartLength6)){
0x3B0E	0x4882    LDR	R0, [PC, #520]
0x3B10	0x7800    LDRB	R0, [R0, #0]
0x3B12	0x283B    CMP	R0, #59
0x3B14	0xF04081C3  BNE	L__interruptLora71
0x3B18	0x4980    LDR	R1, [PC, #512]
0x3B1A	0x6808    LDR	R0, [R1, #0]
0x3B1C	0x2800    CMP	R0, #0
0x3B1E	0xF00081BE  BEQ	L__interruptLora70
0x3B22	0x487F    LDR	R0, [PC, #508]
0x3B24	0x8800    LDRH	R0, [R0, #0]
0x3B26	0x1C41    ADDS	R1, R0, #1
0x3B28	0xB289    UXTH	R1, R1
0x3B2A	0x4880    LDR	R0, [PC, #512]
0x3B2C	0x8800    LDRH	R0, [R0, #0]
0x3B2E	0x4281    CMP	R1, R0
0x3B30	0xF04081B5  BNE	L__interruptLora69
L__interruptLora62:
;interruptUart6.c, 23 :: 		uart_receive6[uart_count6] = receive6;
0x3B34	0x4A7A    LDR	R2, [PC, #488]
0x3B36	0x8811    LDRH	R1, [R2, #0]
0x3B38	0x487B    LDR	R0, [PC, #492]
0x3B3A	0x1841    ADDS	R1, R0, R1
0x3B3C	0x4876    LDR	R0, [PC, #472]
0x3B3E	0x7800    LDRB	R0, [R0, #0]
0x3B40	0x7008    STRB	R0, [R1, #0]
;interruptUart6.c, 24 :: 		uart_count6 = 0;
0x3B42	0x2000    MOVS	R0, #0
0x3B44	0x8010    STRH	R0, [R2, #0]
;interruptUart6.c, 25 :: 		startReceivingData6 = 0;
0x3B46	0x2100    MOVS	R1, #0
0x3B48	0xB249    SXTB	R1, R1
0x3B4A	0x4874    LDR	R0, [PC, #464]
0x3B4C	0x6001    STR	R1, [R0, #0]
;interruptUart6.c, 26 :: 		uartLength6 = 0;
0x3B4E	0x2100    MOVS	R1, #0
0x3B50	0x4876    LDR	R0, [PC, #472]
0x3B52	0x8001    STRH	R1, [R0, #0]
;interruptUart6.c, 34 :: 		if((uart_receive6[0]==0x21)&&(uart_receive6[1]==0xC0)&&(uart_receive6[6] = 0x3B)){
0x3B54	0x4874    LDR	R0, [PC, #464]
0x3B56	0x7800    LDRB	R0, [R0, #0]
0x3B58	0x2821    CMP	R0, #33
0x3B5A	0xF040818A  BNE	L__interruptLora68
0x3B5E	0x4874    LDR	R0, [PC, #464]
0x3B60	0x7800    LDRB	R0, [R0, #0]
0x3B62	0x28C0    CMP	R0, #192
0x3B64	0xF0408185  BNE	L__interruptLora67
0x3B68	0x213B    MOVS	R1, #59
0x3B6A	0x4872    LDR	R0, [PC, #456]
0x3B6C	0x7001    STRB	R1, [R0, #0]
L__interruptLora61:
;interruptUart6.c, 36 :: 		receivedCheckStatus = 1;
0x3B6E	0x2101    MOVS	R1, #1
0x3B70	0xB249    SXTB	R1, R1
0x3B72	0x4871    LDR	R0, [PC, #452]
0x3B74	0x6001    STR	R1, [R0, #0]
;interruptUart6.c, 39 :: 		if(uart_receive6[4] & 0x02){
0x3B76	0x4871    LDR	R0, [PC, #452]
0x3B78	0x7800    LDRB	R0, [R0, #0]
0x3B7A	0xF0000002  AND	R0, R0, #2
0x3B7E	0xB2C0    UXTB	R0, R0
0x3B80	0xB188    CBZ	R0, L_interruptLora13
;interruptUart6.c, 42 :: 		if(interiorLightState_old == 0){
0x3B82	0x486F    LDR	R0, [PC, #444]
0x3B84	0x8800    LDRH	R0, [R0, #0]
0x3B86	0xB928    CBNZ	R0, L_interruptLora14
;interruptUart6.c, 43 :: 		interiorLightState = 1;
0x3B88	0x2101    MOVS	R1, #1
0x3B8A	0x486E    LDR	R0, [PC, #440]
0x3B8C	0x8001    STRH	R1, [R0, #0]
;interruptUart6.c, 44 :: 		uart4InteriorLightTurnedOn();
0x3B8E	0xF7FEFB1D  BL	_uart4InteriorLightTurnedOn+0
;interruptUart6.c, 45 :: 		}
0x3B92	0xE008    B	L_interruptLora15
L_interruptLora14:
;interruptUart6.c, 46 :: 		else if(interiorLightState_old == 1){
0x3B94	0x486A    LDR	R0, [PC, #424]
0x3B96	0x8800    LDRH	R0, [R0, #0]
0x3B98	0x2801    CMP	R0, #1
0x3B9A	0xD104    BNE	L_interruptLora16
;interruptUart6.c, 47 :: 		interiorLightState = 0;
0x3B9C	0x2100    MOVS	R1, #0
0x3B9E	0x4869    LDR	R0, [PC, #420]
0x3BA0	0x8001    STRH	R1, [R0, #0]
;interruptUart6.c, 48 :: 		uart4InteriorLightTurnedOff();
0x3BA2	0xF7FFFA07  BL	_uart4InteriorLightTurnedOff+0
;interruptUart6.c, 49 :: 		}
L_interruptLora16:
L_interruptLora15:
;interruptUart6.c, 50 :: 		}
L_interruptLora13:
;interruptUart6.c, 51 :: 		if(uart_receive6[4] & 0x04){
0x3BA6	0x4865    LDR	R0, [PC, #404]
0x3BA8	0x7800    LDRB	R0, [R0, #0]
0x3BAA	0xF0000004  AND	R0, R0, #4
0x3BAE	0xB2C0    UXTB	R0, R0
0x3BB0	0xB188    CBZ	R0, L_interruptLora17
;interruptUart6.c, 54 :: 		if(navigationLightState_old == 0){
0x3BB2	0x4865    LDR	R0, [PC, #404]
0x3BB4	0x8800    LDRH	R0, [R0, #0]
0x3BB6	0xB928    CBNZ	R0, L_interruptLora18
;interruptUart6.c, 55 :: 		navigationLightState = 1;
0x3BB8	0x2101    MOVS	R1, #1
0x3BBA	0x4864    LDR	R0, [PC, #400]
0x3BBC	0x8001    STRH	R1, [R0, #0]
;interruptUart6.c, 56 :: 		uart4NavigationLightTurnedOn();
0x3BBE	0xF7FEFB9B  BL	_uart4NavigationLightTurnedOn+0
;interruptUart6.c, 57 :: 		}
0x3BC2	0xE008    B	L_interruptLora19
L_interruptLora18:
;interruptUart6.c, 58 :: 		else if(navigationLightState_old == 1){
0x3BC4	0x4860    LDR	R0, [PC, #384]
0x3BC6	0x8800    LDRH	R0, [R0, #0]
0x3BC8	0x2801    CMP	R0, #1
0x3BCA	0xD104    BNE	L_interruptLora20
;interruptUart6.c, 59 :: 		navigationLightState = 0;
0x3BCC	0x2100    MOVS	R1, #0
0x3BCE	0x485F    LDR	R0, [PC, #380]
0x3BD0	0x8001    STRH	R1, [R0, #0]
;interruptUart6.c, 60 :: 		uart4NavigationLightTurnedOff();
0x3BD2	0xF7FFFA0F  BL	_uart4NavigationLightTurnedOff+0
;interruptUart6.c, 61 :: 		}
L_interruptLora20:
L_interruptLora19:
;interruptUart6.c, 62 :: 		}
L_interruptLora17:
;interruptUart6.c, 64 :: 		if(!bitBatteryChangeBlockCounter){
0x3BD6	0x495E    LDR	R1, [PC, #376]
0x3BD8	0x6808    LDR	R0, [R1, #0]
0x3BDA	0x2800    CMP	R0, #0
0x3BDC	0xF040807E  BNE	L_interruptLora21
;interruptUart6.c, 65 :: 		if(uart_receive6[4] & 0x08){
0x3BE0	0x4856    LDR	R0, [PC, #344]
0x3BE2	0x7800    LDRB	R0, [R0, #0]
0x3BE4	0xF0000008  AND	R0, R0, #8
0x3BE8	0xB2C0    UXTB	R0, R0
0x3BEA	0x2800    CMP	R0, #0
0x3BEC	0xD037    BEQ	L_interruptLora22
;interruptUart6.c, 66 :: 		if(wannaBeActiveBattery1_old==0){
0x3BEE	0x4859    LDR	R0, [PC, #356]
0x3BF0	0x8800    LDRH	R0, [R0, #0]
0x3BF2	0xB9F0    CBNZ	R0, L_interruptLora23
;interruptUart6.c, 67 :: 		uart4Battery2TurnedOff();
0x3BF4	0xF7FFF9BE  BL	_uart4Battery2TurnedOff+0
;interruptUart6.c, 68 :: 		wannaBeActiveBattery2_old = 0;
0x3BF8	0x2100    MOVS	R1, #0
0x3BFA	0x4857    LDR	R0, [PC, #348]
0x3BFC	0x8001    STRH	R1, [R0, #0]
;interruptUart6.c, 69 :: 		wannaBeActiveBattery2 = 0;
0x3BFE	0x2100    MOVS	R1, #0
0x3C00	0x4856    LDR	R0, [PC, #344]
0x3C02	0x8001    STRH	R1, [R0, #0]
;interruptUart6.c, 71 :: 		uart4Battery1TurnedOn();
0x3C04	0xF7FFF846  BL	_uart4Battery1TurnedOn+0
;interruptUart6.c, 72 :: 		wannaBeActiveBattery1_old = 1;
0x3C08	0x2101    MOVS	R1, #1
0x3C0A	0x4852    LDR	R0, [PC, #328]
0x3C0C	0x8001    STRH	R1, [R0, #0]
;interruptUart6.c, 73 :: 		wannaBeActiveBattery1 = 1;
0x3C0E	0x2101    MOVS	R1, #1
0x3C10	0x4853    LDR	R0, [PC, #332]
0x3C12	0x8001    STRH	R1, [R0, #0]
;interruptUart6.c, 75 :: 		battery_change_continue = 0;
0x3C14	0x2100    MOVS	R1, #0
0x3C16	0xB249    SXTB	R1, R1
0x3C18	0x4852    LDR	R0, [PC, #328]
0x3C1A	0x6001    STR	R1, [R0, #0]
;interruptUart6.c, 76 :: 		battery_change = 0;
0x3C1C	0x4852    LDR	R0, [PC, #328]
0x3C1E	0x6001    STR	R1, [R0, #0]
;interruptUart6.c, 77 :: 		battery_change_count = 0;
0x3C20	0x2100    MOVS	R1, #0
0x3C22	0xB209    SXTH	R1, R1
0x3C24	0x4851    LDR	R0, [PC, #324]
0x3C26	0x8001    STRH	R1, [R0, #0]
;interruptUart6.c, 78 :: 		battery_chosen = 1;
0x3C28	0x2101    MOVS	R1, #1
0x3C2A	0xB209    SXTH	R1, R1
0x3C2C	0x4850    LDR	R0, [PC, #320]
0x3C2E	0x8001    STRH	R1, [R0, #0]
;interruptUart6.c, 80 :: 		}
0x3C30	0xE015    B	L_interruptLora24
L_interruptLora23:
;interruptUart6.c, 82 :: 		uart4Battery1TurnedOff();
0x3C32	0xF7FEFDFF  BL	_uart4Battery1TurnedOff+0
;interruptUart6.c, 83 :: 		wannaBeActiveBattery1_old = 0;
0x3C36	0x2100    MOVS	R1, #0
0x3C38	0x4846    LDR	R0, [PC, #280]
0x3C3A	0x8001    STRH	R1, [R0, #0]
;interruptUart6.c, 84 :: 		wannaBeActiveBattery1 = 0;
0x3C3C	0x2100    MOVS	R1, #0
0x3C3E	0x4848    LDR	R0, [PC, #288]
0x3C40	0x8001    STRH	R1, [R0, #0]
;interruptUart6.c, 86 :: 		battery_change_continue = 0;
0x3C42	0x2100    MOVS	R1, #0
0x3C44	0xB249    SXTB	R1, R1
0x3C46	0x4847    LDR	R0, [PC, #284]
0x3C48	0x6001    STR	R1, [R0, #0]
;interruptUart6.c, 87 :: 		battery_change = 0;
0x3C4A	0x4847    LDR	R0, [PC, #284]
0x3C4C	0x6001    STR	R1, [R0, #0]
;interruptUart6.c, 88 :: 		battery_change_count = 0;
0x3C4E	0x2100    MOVS	R1, #0
0x3C50	0xB209    SXTH	R1, R1
0x3C52	0x4846    LDR	R0, [PC, #280]
0x3C54	0x8001    STRH	R1, [R0, #0]
;interruptUart6.c, 89 :: 		battery_chosen = 0;
0x3C56	0x2100    MOVS	R1, #0
0x3C58	0xB209    SXTH	R1, R1
0x3C5A	0x4845    LDR	R0, [PC, #276]
0x3C5C	0x8001    STRH	R1, [R0, #0]
;interruptUart6.c, 90 :: 		}
L_interruptLora24:
;interruptUart6.c, 92 :: 		}
L_interruptLora22:
;interruptUart6.c, 96 :: 		if(uart_receive6[4] & 0x10){
0x3C5E	0x4837    LDR	R0, [PC, #220]
0x3C60	0x7800    LDRB	R0, [R0, #0]
0x3C62	0xF0000010  AND	R0, R0, #16
0x3C66	0xB2C0    UXTB	R0, R0
0x3C68	0x2800    CMP	R0, #0
0x3C6A	0xD037    BEQ	L_interruptLora25
;interruptUart6.c, 97 :: 		if(wannaBeActiveBattery2_old==0){
0x3C6C	0x483A    LDR	R0, [PC, #232]
0x3C6E	0x8800    LDRH	R0, [R0, #0]
0x3C70	0xB9F0    CBNZ	R0, L_interruptLora26
;interruptUart6.c, 98 :: 		uart4Battery1TurnedOff();
0x3C72	0xF7FEFDDF  BL	_uart4Battery1TurnedOff+0
;interruptUart6.c, 99 :: 		wannaBeActiveBattery1_old = 0;
0x3C76	0x2100    MOVS	R1, #0
0x3C78	0x4836    LDR	R0, [PC, #216]
0x3C7A	0x8001    STRH	R1, [R0, #0]
;interruptUart6.c, 100 :: 		wannaBeActiveBattery1 = 0;
0x3C7C	0x2100    MOVS	R1, #0
0x3C7E	0x4838    LDR	R0, [PC, #224]
0x3C80	0x8001    STRH	R1, [R0, #0]
;interruptUart6.c, 102 :: 		uart4Battery2TurnedOn();
0x3C82	0xF7FFF87B  BL	_uart4Battery2TurnedOn+0
;interruptUart6.c, 103 :: 		wannaBeActiveBattery2_old = 1;
0x3C86	0x2101    MOVS	R1, #1
0x3C88	0x4833    LDR	R0, [PC, #204]
0x3C8A	0x8001    STRH	R1, [R0, #0]
;interruptUart6.c, 104 :: 		wannaBeActiveBattery2 = 1;
0x3C8C	0x2101    MOVS	R1, #1
0x3C8E	0x4833    LDR	R0, [PC, #204]
0x3C90	0x8001    STRH	R1, [R0, #0]
;interruptUart6.c, 106 :: 		battery_change_continue = 0;
0x3C92	0x2100    MOVS	R1, #0
0x3C94	0xB249    SXTB	R1, R1
0x3C96	0x4833    LDR	R0, [PC, #204]
0x3C98	0x6001    STR	R1, [R0, #0]
;interruptUart6.c, 107 :: 		battery_change = 0;
0x3C9A	0x4833    LDR	R0, [PC, #204]
0x3C9C	0x6001    STR	R1, [R0, #0]
;interruptUart6.c, 108 :: 		battery_change_count = 0;
0x3C9E	0x2100    MOVS	R1, #0
0x3CA0	0xB209    SXTH	R1, R1
0x3CA2	0x4832    LDR	R0, [PC, #200]
0x3CA4	0x8001    STRH	R1, [R0, #0]
;interruptUart6.c, 109 :: 		battery_chosen = 2;
0x3CA6	0x2102    MOVS	R1, #2
0x3CA8	0xB209    SXTH	R1, R1
0x3CAA	0x4831    LDR	R0, [PC, #196]
0x3CAC	0x8001    STRH	R1, [R0, #0]
;interruptUart6.c, 111 :: 		}
0x3CAE	0xE015    B	L_interruptLora27
L_interruptLora26:
;interruptUart6.c, 113 :: 		uart4Battery2TurnedOff();
0x3CB0	0xF7FFF960  BL	_uart4Battery2TurnedOff+0
;interruptUart6.c, 114 :: 		wannaBeActiveBattery2_old = 0;
0x3CB4	0x2100    MOVS	R1, #0
0x3CB6	0x4828    LDR	R0, [PC, #160]
0x3CB8	0x8001    STRH	R1, [R0, #0]
;interruptUart6.c, 115 :: 		wannaBeActiveBattery2 = 0;
0x3CBA	0x2100    MOVS	R1, #0
0x3CBC	0x4827    LDR	R0, [PC, #156]
0x3CBE	0x8001    STRH	R1, [R0, #0]
;interruptUart6.c, 117 :: 		battery_change_continue = 0;
0x3CC0	0x2100    MOVS	R1, #0
0x3CC2	0xB249    SXTB	R1, R1
0x3CC4	0x4827    LDR	R0, [PC, #156]
0x3CC6	0x6001    STR	R1, [R0, #0]
;interruptUart6.c, 118 :: 		battery_change = 0;
0x3CC8	0x4827    LDR	R0, [PC, #156]
0x3CCA	0x6001    STR	R1, [R0, #0]
;interruptUart6.c, 119 :: 		battery_change_count = 0;
0x3CCC	0x2100    MOVS	R1, #0
0x3CCE	0xB209    SXTH	R1, R1
0x3CD0	0x4826    LDR	R0, [PC, #152]
0x3CD2	0x8001    STRH	R1, [R0, #0]
;interruptUart6.c, 120 :: 		battery_chosen = 0;
0x3CD4	0x2100    MOVS	R1, #0
0x3CD6	0xB209    SXTH	R1, R1
0x3CD8	0x4825    LDR	R0, [PC, #148]
0x3CDA	0x8001    STRH	R1, [R0, #0]
;interruptUart6.c, 121 :: 		}
L_interruptLora27:
;interruptUart6.c, 123 :: 		}
L_interruptLora25:
;interruptUart6.c, 124 :: 		}
L_interruptLora21:
;interruptUart6.c, 128 :: 		if(uart_receive6[4] & 0x01 == 0x01){
0x3CDC	0x4817    LDR	R0, [PC, #92]
0x3CDE	0x7800    LDRB	R0, [R0, #0]
0x3CE0	0xF0000001  AND	R0, R0, #1
0x3CE4	0xB2C0    UXTB	R0, R0
0x3CE6	0xB188    CBZ	R0, L_interruptLora28
;interruptUart6.c, 129 :: 		control_taken = 1;
0x3CE8	0x2101    MOVS	R1, #1
0x3CEA	0xB249    SXTB	R1, R1
0x3CEC	0x4821    LDR	R0, [PC, #132]
0x3CEE	0x6001    STR	R1, [R0, #0]
;interruptUart6.c, 130 :: 		bitControlTaken = 1;
0x3CF0	0x4821    LDR	R0, [PC, #132]
0x3CF2	0x6001    STR	R1, [R0, #0]
;interruptUart6.c, 131 :: 		controlTakenCount = 0;
0x3CF4	0x2100    MOVS	R1, #0
0x3CF6	0xB209    SXTH	R1, R1
0x3CF8	0x4820    LDR	R0, [PC, #128]
0x3CFA	0x8001    STRH	R1, [R0, #0]
;interruptUart6.c, 132 :: 		countJoystickConnection = 0;
0x3CFC	0x2100    MOVS	R1, #0
0x3CFE	0x4820    LDR	R0, [PC, #128]
0x3D00	0x8001    STRH	R1, [R0, #0]
;interruptUart6.c, 133 :: 		bitCheckJoystick = 0;
0x3D02	0x2100    MOVS	R1, #0
0x3D04	0xB249    SXTB	R1, R1
0x3D06	0x481F    LDR	R0, [PC, #124]
0x3D08	0x6001    STR	R1, [R0, #0]
;interruptUart6.c, 134 :: 		}
0x3D0A	0xE043    B	L_interruptLora29
L_interruptLora28:
;interruptUart6.c, 136 :: 		control_taken = 0;
0x3D0C	0x2100    MOVS	R1, #0
0x3D0E	0xB249    SXTB	R1, R1
0x3D10	0x4818    LDR	R0, [PC, #96]
0x3D12	0x6001    STR	R1, [R0, #0]
;interruptUart6.c, 137 :: 		bitControlTaken = 0;
0x3D14	0xF000B838  B	#112
0x3D18	0x007C2000  	_receive6+0
0x3D1C	0x40942201  	_startReceivingData6+0
0x3D20	0x007E2000  	_uart_count6+0
0x3D24	0x00182000  	_i+0
0x3D28	0x0A492000  	_uart_receive6+0
0x3D2C	0x00802000  	_uartLength6+0
0x3D30	0x0A4A2000  	_uart_receive6+1
0x3D34	0x0A4F2000  	_uart_receive6+6
0x3D38	0x40982201  	_receivedCheckStatus+0
0x3D3C	0x0A4D2000  	_uart_receive6+4
0x3D40	0x003C2000  	_interiorLightState_old+0
0x3D44	0x003E2000  	_interiorLightState+0
0x3D48	0x00382000  	_navigationLightState_old+0
0x3D4C	0x003A2000  	_navigationLightState+0
0x3D50	0x0FA82200  	_bitBatteryChangeBlockCounter+0
0x3D54	0x000C2000  	_wannaBeActiveBattery1_old+0
0x3D58	0x00082000  	_wannaBeActiveBattery2_old+0
0x3D5C	0x00062000  	_wannaBeActiveBattery2+0
0x3D60	0x000A2000  	_wannaBeActiveBattery1+0
0x3D64	0x0FA42200  	_battery_change_continue+0
0x3D68	0x0FA02200  	_battery_change+0
0x3D6C	0x00042000  	_battery_change_count+0
0x3D70	0x00002000  	_battery_chosen+0
0x3D74	0x408C2201  	_control_taken+0
0x3D78	0x40F42201  	_bitControlTaken+0
0x3D7C	0x00702000  	_controlTakenCount+0
0x3D80	0x00722000  	_countJoystickConnection+0
0x3D84	0x40A42201  	_bitCheckJoystick+0
0x3D88	0x4866    LDR	R0, [PC, #408]
0x3D8A	0x6001    STR	R1, [R0, #0]
;interruptUart6.c, 138 :: 		controlTakenCount = 0;
0x3D8C	0x2100    MOVS	R1, #0
0x3D8E	0xB209    SXTH	R1, R1
0x3D90	0x4865    LDR	R0, [PC, #404]
0x3D92	0x8001    STRH	R1, [R0, #0]
;interruptUart6.c, 139 :: 		}
L_interruptLora29:
;interruptUart6.c, 141 :: 		switch(uart_receive6[3] & 0x07){
0x3D94	0x4865    LDR	R0, [PC, #404]
0x3D96	0x7800    LDRB	R0, [R0, #0]
0x3D98	0xF0000207  AND	R2, R0, #7
0x3D9C	0xB2D2    UXTB	R2, R2
0x3D9E	0xE027    B	L_interruptLora30
;interruptUart6.c, 142 :: 		case 1:
L_interruptLora32:
;interruptUart6.c, 147 :: 		if(control_taken){
0x3DA0	0x4963    LDR	R1, [PC, #396]
0x3DA2	0x6808    LDR	R0, [R1, #0]
0x3DA4	0xB110    CBZ	R0, L_interruptLora33
;interruptUart6.c, 148 :: 		gear_status = 1;
0x3DA6	0x2101    MOVS	R1, #1
0x3DA8	0x4862    LDR	R0, [PC, #392]
0x3DAA	0x8001    STRH	R1, [R0, #0]
;interruptUart6.c, 149 :: 		}
L_interruptLora33:
;interruptUart6.c, 151 :: 		break;
0x3DAC	0xE02B    B	L_interruptLora31
;interruptUart6.c, 152 :: 		case 2:
L_interruptLora34:
;interruptUart6.c, 157 :: 		if(control_taken){
0x3DAE	0x4960    LDR	R1, [PC, #384]
0x3DB0	0x6808    LDR	R0, [R1, #0]
0x3DB2	0xB110    CBZ	R0, L_interruptLora35
;interruptUart6.c, 158 :: 		gear_status = 2;
0x3DB4	0x2102    MOVS	R1, #2
0x3DB6	0x485F    LDR	R0, [PC, #380]
0x3DB8	0x8001    STRH	R1, [R0, #0]
;interruptUart6.c, 159 :: 		}
L_interruptLora35:
;interruptUart6.c, 161 :: 		break;
0x3DBA	0xE024    B	L_interruptLora31
;interruptUart6.c, 162 :: 		case 3:
L_interruptLora36:
;interruptUart6.c, 167 :: 		if(control_taken){
0x3DBC	0x495C    LDR	R1, [PC, #368]
0x3DBE	0x6808    LDR	R0, [R1, #0]
0x3DC0	0xB110    CBZ	R0, L_interruptLora37
;interruptUart6.c, 168 :: 		gear_status = 3;
0x3DC2	0x2103    MOVS	R1, #3
0x3DC4	0x485B    LDR	R0, [PC, #364]
0x3DC6	0x8001    STRH	R1, [R0, #0]
;interruptUart6.c, 169 :: 		}
L_interruptLora37:
;interruptUart6.c, 171 :: 		break;
0x3DC8	0xE01D    B	L_interruptLora31
;interruptUart6.c, 172 :: 		case 4:
L_interruptLora38:
;interruptUart6.c, 177 :: 		if(control_taken){
0x3DCA	0x4959    LDR	R1, [PC, #356]
0x3DCC	0x6808    LDR	R0, [R1, #0]
0x3DCE	0xB110    CBZ	R0, L_interruptLora39
;interruptUart6.c, 178 :: 		gear_status = 4;
0x3DD0	0x2104    MOVS	R1, #4
0x3DD2	0x4858    LDR	R0, [PC, #352]
0x3DD4	0x8001    STRH	R1, [R0, #0]
;interruptUart6.c, 179 :: 		}
L_interruptLora39:
;interruptUart6.c, 180 :: 		stopGearBit = 1;
0x3DD6	0x2101    MOVS	R1, #1
0x3DD8	0xB249    SXTB	R1, R1
0x3DDA	0x4857    LDR	R0, [PC, #348]
0x3DDC	0x6001    STR	R1, [R0, #0]
;interruptUart6.c, 182 :: 		break;
0x3DDE	0xE012    B	L_interruptLora31
;interruptUart6.c, 183 :: 		case 5:
L_interruptLora40:
;interruptUart6.c, 188 :: 		if(control_taken){
0x3DE0	0x4953    LDR	R1, [PC, #332]
0x3DE2	0x6808    LDR	R0, [R1, #0]
0x3DE4	0xB110    CBZ	R0, L_interruptLora41
;interruptUart6.c, 189 :: 		gear_status = 5;
0x3DE6	0x2105    MOVS	R1, #5
0x3DE8	0x4852    LDR	R0, [PC, #328]
0x3DEA	0x8001    STRH	R1, [R0, #0]
;interruptUart6.c, 190 :: 		}
L_interruptLora41:
;interruptUart6.c, 192 :: 		break;
0x3DEC	0xE00B    B	L_interruptLora31
;interruptUart6.c, 193 :: 		default:
L_interruptLora42:
;interruptUart6.c, 194 :: 		gear_status = gear_status;
;interruptUart6.c, 195 :: 		break;
0x3DEE	0xE00A    B	L_interruptLora31
;interruptUart6.c, 196 :: 		}
L_interruptLora30:
0x3DF0	0x2A01    CMP	R2, #1
0x3DF2	0xD0D5    BEQ	L_interruptLora32
0x3DF4	0x2A02    CMP	R2, #2
0x3DF6	0xD0DA    BEQ	L_interruptLora34
0x3DF8	0x2A03    CMP	R2, #3
0x3DFA	0xD0DF    BEQ	L_interruptLora36
0x3DFC	0x2A04    CMP	R2, #4
0x3DFE	0xD0E4    BEQ	L_interruptLora38
0x3E00	0x2A05    CMP	R2, #5
0x3E02	0xD0ED    BEQ	L_interruptLora40
0x3E04	0xE7F3    B	L_interruptLora42
L_interruptLora31:
;interruptUart6.c, 198 :: 		switch(uart_receive6[3] & 0x38){
0x3E06	0x4849    LDR	R0, [PC, #292]
0x3E08	0x7800    LDRB	R0, [R0, #0]
0x3E0A	0xF0000038  AND	R0, R0, #56
0x3E0E	0xF88D0004  STRB	R0, [SP, #4]
0x3E12	0xE021    B	L_interruptLora43
;interruptUart6.c, 200 :: 		case 0x08:
L_interruptLora45:
;interruptUart6.c, 201 :: 		velocity_mode_save = VELOCITY_TURTLE;
0x3E14	0x2100    MOVS	R1, #0
0x3E16	0x4849    LDR	R0, [PC, #292]
0x3E18	0x8001    STRH	R1, [R0, #0]
;interruptUart6.c, 202 :: 		velocity_mode = VELOCITY_TURTLE;
0x3E1A	0x2100    MOVS	R1, #0
0x3E1C	0x4848    LDR	R0, [PC, #288]
0x3E1E	0x8001    STRH	R1, [R0, #0]
;interruptUart6.c, 203 :: 		change_velocity_mode(velocity_mode);
0x3E20	0xF2400000  MOVW	R0, #0
0x3E24	0xF7FFF906  BL	_change_velocity_mode+0
;interruptUart6.c, 204 :: 		break;
0x3E28	0xE01F    B	L_interruptLora44
;interruptUart6.c, 206 :: 		case 0x10:
L_interruptLora46:
;interruptUart6.c, 207 :: 		velocity_mode_save = VELOCITY_RABBIT;
0x3E2A	0x2101    MOVS	R1, #1
0x3E2C	0x4843    LDR	R0, [PC, #268]
0x3E2E	0x8001    STRH	R1, [R0, #0]
;interruptUart6.c, 208 :: 		velocity_mode = VELOCITY_RABBIT;
0x3E30	0x2101    MOVS	R1, #1
0x3E32	0x4843    LDR	R0, [PC, #268]
0x3E34	0x8001    STRH	R1, [R0, #0]
;interruptUart6.c, 209 :: 		change_velocity_mode(velocity_mode);
0x3E36	0xF2400001  MOVW	R0, #1
0x3E3A	0xF7FFF8FB  BL	_change_velocity_mode+0
;interruptUart6.c, 210 :: 		break;
0x3E3E	0xE014    B	L_interruptLora44
;interruptUart6.c, 212 :: 		case 0x20:
L_interruptLora47:
;interruptUart6.c, 213 :: 		velocity_mode_save = VELOCITY_LEOPARD;
0x3E40	0x2102    MOVS	R1, #2
0x3E42	0x483E    LDR	R0, [PC, #248]
0x3E44	0x8001    STRH	R1, [R0, #0]
;interruptUart6.c, 214 :: 		velocity_mode = VELOCITY_LEOPARD;
0x3E46	0x2102    MOVS	R1, #2
0x3E48	0x483D    LDR	R0, [PC, #244]
0x3E4A	0x8001    STRH	R1, [R0, #0]
;interruptUart6.c, 215 :: 		change_velocity_mode(velocity_mode);
0x3E4C	0xF2400002  MOVW	R0, #2
0x3E50	0xF7FFF8F0  BL	_change_velocity_mode+0
;interruptUart6.c, 216 :: 		break;
0x3E54	0xE009    B	L_interruptLora44
;interruptUart6.c, 218 :: 		default:
L_interruptLora48:
;interruptUart6.c, 219 :: 		break;
0x3E56	0xE008    B	L_interruptLora44
;interruptUart6.c, 221 :: 		}
L_interruptLora43:
0x3E58	0xF89D0004  LDRB	R0, [SP, #4]
0x3E5C	0x2808    CMP	R0, #8
0x3E5E	0xD0D9    BEQ	L_interruptLora45
0x3E60	0x2810    CMP	R0, #16
0x3E62	0xD0E2    BEQ	L_interruptLora46
0x3E64	0x2820    CMP	R0, #32
0x3E66	0xD0EB    BEQ	L_interruptLora47
0x3E68	0xE7F5    B	L_interruptLora48
L_interruptLora44:
;interruptUart6.c, 223 :: 		boatWheelDir = uart_receive6[2];
0x3E6A	0x4836    LDR	R0, [PC, #216]
0x3E6C	0x7801    LDRB	R1, [R0, #0]
0x3E6E	0x4836    LDR	R0, [PC, #216]
0x3E70	0x7001    STRB	R1, [R0, #0]
;interruptUart6.c, 34 :: 		if((uart_receive6[0]==0x21)&&(uart_receive6[1]==0xC0)&&(uart_receive6[6] = 0x3B)){
L__interruptLora68:
L__interruptLora67:
;interruptUart6.c, 230 :: 		for(i=0; i<12; i++){
0x3E72	0x2100    MOVS	R1, #0
0x3E74	0xB209    SXTH	R1, R1
0x3E76	0x4835    LDR	R0, [PC, #212]
0x3E78	0x8001    STRH	R1, [R0, #0]
L_interruptLora49:
0x3E7A	0x4834    LDR	R0, [PC, #208]
0x3E7C	0xF9B00000  LDRSH	R0, [R0, #0]
0x3E80	0x280C    CMP	R0, #12
0x3E82	0xDA0C    BGE	L_interruptLora50
;interruptUart6.c, 231 :: 		uart_receive6[i] = 0;
0x3E84	0x4A31    LDR	R2, [PC, #196]
0x3E86	0xF9B21000  LDRSH	R1, [R2, #0]
0x3E8A	0x4831    LDR	R0, [PC, #196]
0x3E8C	0x1841    ADDS	R1, R0, R1
0x3E8E	0x2000    MOVS	R0, #0
0x3E90	0x7008    STRB	R0, [R1, #0]
;interruptUart6.c, 230 :: 		for(i=0; i<12; i++){
0x3E92	0x4610    MOV	R0, R2
0x3E94	0xF9B00000  LDRSH	R0, [R0, #0]
0x3E98	0x1C40    ADDS	R0, R0, #1
0x3E9A	0x8010    STRH	R0, [R2, #0]
;interruptUart6.c, 232 :: 		}
0x3E9C	0xE7ED    B	L_interruptLora49
L_interruptLora50:
;interruptUart6.c, 22 :: 		else if((receive6 == 0x3B)&&(startReceivingData6)&&(uart_count6 + 1 == uartLength6)){
L__interruptLora71:
L__interruptLora70:
L__interruptLora69:
;interruptUart6.c, 237 :: 		}
L_interruptLora6:
;interruptUart6.c, 240 :: 		if(startReceivingData6 == 1){
0x3E9E	0x492D    LDR	R1, [PC, #180]
0x3EA0	0x6808    LDR	R0, [R1, #0]
0x3EA2	0x2800    CMP	R0, #0
0x3EA4	0xD03A    BEQ	L_interruptLora52
;interruptUart6.c, 241 :: 		uart_receive6[uart_count6] = receive6;
0x3EA6	0x4A2C    LDR	R2, [PC, #176]
0x3EA8	0x8811    LDRH	R1, [R2, #0]
0x3EAA	0x4829    LDR	R0, [PC, #164]
0x3EAC	0x1841    ADDS	R1, R0, R1
0x3EAE	0x482B    LDR	R0, [PC, #172]
0x3EB0	0x7800    LDRB	R0, [R0, #0]
0x3EB2	0x7008    STRB	R0, [R1, #0]
;interruptUart6.c, 242 :: 		uart_count6++;
0x3EB4	0x4610    MOV	R0, R2
0x3EB6	0x8800    LDRH	R0, [R0, #0]
0x3EB8	0x1C40    ADDS	R0, R0, #1
0x3EBA	0xB280    UXTH	R0, R0
0x3EBC	0x8010    STRH	R0, [R2, #0]
;interruptUart6.c, 244 :: 		if(uart_count6 == 2)
0x3EBE	0x2802    CMP	R0, #2
0x3EC0	0xD108    BNE	L_interruptLora53
;interruptUart6.c, 246 :: 		switch (uart_receive6[1])
0x3EC2	0xE003    B	L_interruptLora54
;interruptUart6.c, 248 :: 		case 0xC0:
L_interruptLora56:
;interruptUart6.c, 249 :: 		uartLength6 = 7;
0x3EC4	0x2107    MOVS	R1, #7
0x3EC6	0x4826    LDR	R0, [PC, #152]
0x3EC8	0x8001    STRH	R1, [R0, #0]
;interruptUart6.c, 250 :: 		break;
0x3ECA	0xE003    B	L_interruptLora55
;interruptUart6.c, 251 :: 		}
L_interruptLora54:
0x3ECC	0x4825    LDR	R0, [PC, #148]
0x3ECE	0x7800    LDRB	R0, [R0, #0]
0x3ED0	0x28C0    CMP	R0, #192
0x3ED2	0xD0F7    BEQ	L_interruptLora56
L_interruptLora55:
;interruptUart6.c, 252 :: 		}
L_interruptLora53:
;interruptUart6.c, 254 :: 		if(uart_count6 > 11){
0x3ED4	0x4820    LDR	R0, [PC, #128]
0x3ED6	0x8800    LDRH	R0, [R0, #0]
0x3ED8	0x280B    CMP	R0, #11
0x3EDA	0xD91F    BLS	L_interruptLora57
;interruptUart6.c, 255 :: 		uart_count6 = 0;
0x3EDC	0x2100    MOVS	R1, #0
0x3EDE	0x481E    LDR	R0, [PC, #120]
0x3EE0	0x8001    STRH	R1, [R0, #0]
;interruptUart6.c, 256 :: 		uartLength6 = 0;
0x3EE2	0x2100    MOVS	R1, #0
0x3EE4	0x481E    LDR	R0, [PC, #120]
0x3EE6	0x8001    STRH	R1, [R0, #0]
;interruptUart6.c, 257 :: 		startReceivingData6 = 0;
0x3EE8	0x2100    MOVS	R1, #0
0x3EEA	0xB249    SXTB	R1, R1
0x3EEC	0x4819    LDR	R0, [PC, #100]
0x3EEE	0x6001    STR	R1, [R0, #0]
;interruptUart6.c, 258 :: 		for(i=0; i<12; i++){
0x3EF0	0x2100    MOVS	R1, #0
0x3EF2	0xB209    SXTH	R1, R1
0x3EF4	0x4815    LDR	R0, [PC, #84]
0x3EF6	0x8001    STRH	R1, [R0, #0]
L_interruptLora58:
0x3EF8	0x4814    LDR	R0, [PC, #80]
0x3EFA	0xF9B00000  LDRSH	R0, [R0, #0]
0x3EFE	0x280C    CMP	R0, #12
0x3F00	0xDA0C    BGE	L_interruptLora59
;interruptUart6.c, 259 :: 		uart_receive6[i] = 0;
0x3F02	0x4A12    LDR	R2, [PC, #72]
0x3F04	0xF9B21000  LDRSH	R1, [R2, #0]
0x3F08	0x4811    LDR	R0, [PC, #68]
0x3F0A	0x1841    ADDS	R1, R0, R1
0x3F0C	0x2000    MOVS	R0, #0
0x3F0E	0x7008    STRB	R0, [R1, #0]
;interruptUart6.c, 258 :: 		for(i=0; i<12; i++){
0x3F10	0x4610    MOV	R0, R2
0x3F12	0xF9B00000  LDRSH	R0, [R0, #0]
0x3F16	0x1C40    ADDS	R0, R0, #1
0x3F18	0x8010    STRH	R0, [R2, #0]
;interruptUart6.c, 260 :: 		}
0x3F1A	0xE7ED    B	L_interruptLora58
L_interruptLora59:
;interruptUart6.c, 261 :: 		}
L_interruptLora57:
;interruptUart6.c, 262 :: 		}
L_interruptLora52:
;interruptUart6.c, 265 :: 		}
L_end_interruptLora:
0x3F1C	0xF8DDE000  LDR	LR, [SP, #0]
0x3F20	0xB002    ADD	SP, SP, #8
0x3F22	0x4770    BX	LR
0x3F24	0x40F42201  	_bitControlTaken+0
0x3F28	0x00702000  	_controlTakenCount+0
0x3F2C	0x0A4C2000  	_uart_receive6+3
0x3F30	0x408C2201  	_control_taken+0
0x3F34	0x00342000  	_gear_status+0
0x3F38	0x40E82201  	_stopGearBit+0
0x3F3C	0x00822000  	_velocity_mode_save+0
0x3F40	0x09FE2000  	_velocity_mode+0
0x3F44	0x0A4B2000  	_uart_receive6+2
0x3F48	0x005C2000  	_boatWheelDir+0
0x3F4C	0x00182000  	_i+0
0x3F50	0x0A492000  	_uart_receive6+0
0x3F54	0x40942201  	_startReceivingData6+0
0x3F58	0x007E2000  	_uart_count6+0
0x3F5C	0x007C2000  	_receive6+0
0x3F60	0x00802000  	_uartLength6+0
0x3F64	0x0A4A2000  	_uart_receive6+1
; end of _interruptLora
_UART6_Read:
;__Lib_UART_123_45_6.c, 130 :: 		
0x216C	0xB081    SUB	SP, SP, #4
0x216E	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45_6.c, 131 :: 		
0x2172	0x4803    LDR	R0, [PC, #12]
0x2174	0xF7FFF9A8  BL	__Lib_UART_123_45_6_UARTx_Read+0
;__Lib_UART_123_45_6.c, 132 :: 		
L_end_UART6_Read:
0x2178	0xF8DDE000  LDR	LR, [SP, #0]
0x217C	0xB001    ADD	SP, SP, #4
0x217E	0x4770    BX	LR
0x2180	0x14004001  	USART6_SR+0
; end of _UART6_Read
_interruptGps:
;interruptUart2.c, 4 :: 		void interruptGps() iv IVT_INT_USART2 ics ICS_AUTO {
0x3324	0xB081    SUB	SP, SP, #4
0x3326	0xF8CDE000  STR	LR, [SP, #0]
;interruptUart2.c, 6 :: 		receiveUart2 = UART2_Read();
0x332A	0xF7FEFF2B  BL	_UART2_Read+0
0x332E	0x4903    LDR	R1, [PC, #12]
0x3330	0x7008    STRB	R0, [R1, #0]
;interruptUart2.c, 7 :: 		}
L_end_interruptGps:
0x3332	0xF8DDE000  LDR	LR, [SP, #0]
0x3336	0xB001    ADD	SP, SP, #4
0x3338	0x4770    BX	LR
0x333A	0xBF00    NOP
0x333C	0x0A552000  	_receiveUart2+0
; end of _interruptGps
_UART2_Read:
;__Lib_UART_123_45_6.c, 114 :: 		
0x2184	0xB081    SUB	SP, SP, #4
0x2186	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45_6.c, 115 :: 		
0x218A	0x4803    LDR	R0, [PC, #12]
0x218C	0xF7FFF99C  BL	__Lib_UART_123_45_6_UARTx_Read+0
;__Lib_UART_123_45_6.c, 116 :: 		
L_end_UART2_Read:
0x2190	0xF8DDE000  LDR	LR, [SP, #0]
0x2194	0xB001    ADD	SP, SP, #4
0x2196	0x4770    BX	LR
0x2198	0x44004000  	USART2_SR+0
; end of _UART2_Read
;nest.c,0 :: ?ICS_battery_chosen [2]
0x4E58	0x0001 ;?ICS_battery_chosen+0
; end of ?ICS_battery_chosen
;nest.c,0 :: ?ICS_battery_chosen_old [2]
0x4E5A	0x0000 ;?ICS_battery_chosen_old+0
; end of ?ICS_battery_chosen_old
;nest.c,0 :: ?ICS_battery_change_count [2]
0x4E5C	0x0000 ;?ICS_battery_change_count+0
; end of ?ICS_battery_change_count
;nest.c,0 :: ?ICS_wannaBeActiveBattery2 [2]
0x4E5E	0x0000 ;?ICS_wannaBeActiveBattery2+0
; end of ?ICS_wannaBeActiveBattery2
;nest.c,0 :: ?ICS_wannaBeActiveBattery2_old [2]
0x4E60	0x0000 ;?ICS_wannaBeActiveBattery2_old+0
; end of ?ICS_wannaBeActiveBattery2_old
;nest.c,0 :: ?ICS_wannaBeActiveBattery1 [2]
0x4E62	0x0000 ;?ICS_wannaBeActiveBattery1+0
; end of ?ICS_wannaBeActiveBattery1
;nest.c,0 :: ?ICS_wannaBeActiveBattery1_old [2]
0x4E64	0x0000 ;?ICS_wannaBeActiveBattery1_old+0
; end of ?ICS_wannaBeActiveBattery1_old
;nest.c,0 :: ?ICS_activeBattery [2]
0x4E66	0x0000 ;?ICS_activeBattery+0
; end of ?ICS_activeBattery
;nest.c,0 :: ?ICS_batteryChangeBlockCounter [2]
0x4E68	0x0000 ;?ICS_batteryChangeBlockCounter+0
; end of ?ICS_batteryChangeBlockCounter
;nest.c,0 :: ?ICS_battry_percentage_check_counter [2]
0x4E6A	0x0000 ;?ICS_battry_percentage_check_counter+0
; end of ?ICS_battry_percentage_check_counter
;nest.c,0 :: ?ICS_buzzerCounter [4]
0x4E6C	0x00000000 ;?ICS_buzzerCounter+0
; end of ?ICS_buzzerCounter
;nest.c,0 :: ?ICS_i [2]
0x4E70	0x0000 ;?ICS_i+0
; end of ?ICS_i
;nest.c,0 :: ?ICS_j [2]
0x4E72	0x0000 ;?ICS_j+0
; end of ?ICS_j
;nest.c,0 :: ?ICS_adc_read2 [4]
0x4E74	0x00000000 ;?ICS_adc_read2+0
; end of ?ICS_adc_read2
;nest.c,0 :: ?ICS_tmp [4]
0x4E78	0x00000000 ;?ICS_tmp+0
; end of ?ICS_tmp
;nest.c,0 :: ?ICS_adcSum2 [4]
0x4E7C	0x00000000 ;?ICS_adcSum2+0
; end of ?ICS_adcSum2
;,0 :: _initBlock_16 [2]
; Containing: ?ICS_boatBatteriesLavel [1]
;             ?ICS_motorSpeed [1]
0x4E80	0x0000 ;_initBlock_16+0 : ?ICS_boatBatteriesLavel at 0x4E80 : ?ICS_motorSpeed at 0x4E81
; end of _initBlock_16
;nest.c,0 :: ?ICS_velocity_mode_send [2]
0x4E82	0x0000 ;?ICS_velocity_mode_send+0
; end of ?ICS_velocity_mode_send
;nest.c,0 :: ?ICS_adc_read3 [4]
0x4E84	0x00000000 ;?ICS_adc_read3+0
; end of ?ICS_adc_read3
;nest.c,0 :: ?ICS_adcSum3 [4]
0x4E88	0x00000000 ;?ICS_adcSum3+0
; end of ?ICS_adcSum3
;nest.c,0 :: ?ICS_gear_status [2]
0x4E8C	0x0004 ;?ICS_gear_status+0
; end of ?ICS_gear_status
;,0 :: _initBlock_21 [2]
; Containing: ?ICS_motorDirection [1]
;             ?ICS_boatControlTaken [1]
0x4E8E	0x0000 ;_initBlock_21+0 : ?ICS_motorDirection at 0x4E8E : ?ICS_boatControlTaken at 0x4E8F
; end of _initBlock_21
;nest.c,0 :: ?ICS_navigationLightState_old [2]
0x4E90	0x0000 ;?ICS_navigationLightState_old+0
; end of ?ICS_navigationLightState_old
;nest.c,0 :: ?ICS_navigationLightState [2]
0x4E92	0x0000 ;?ICS_navigationLightState+0
; end of ?ICS_navigationLightState
;nest.c,0 :: ?ICS_interiorLightState_old [2]
0x4E94	0x0000 ;?ICS_interiorLightState_old+0
; end of ?ICS_interiorLightState_old
;nest.c,0 :: ?ICS_interiorLightState [2]
0x4E96	0x0000 ;?ICS_interiorLightState+0
; end of ?ICS_interiorLightState
;nest.c,0 :: ?ICS_pwm_frequency [4]
0x4E98	0x00000064 ;?ICS_pwm_frequency+0
; end of ?ICS_pwm_frequency
;nest.c,0 :: ?ICS_pwm_percent [4]
0x4E9C	0x40F00000 ;?ICS_pwm_percent+0
; end of ?ICS_pwm_percent
;nest.c,0 :: ?ICS_velocity_mode_new [2]
0x4EA0	0x0003 ;?ICS_velocity_mode_new+0
; end of ?ICS_velocity_mode_new
;,0 :: _initBlock_29 [2]
; Containing: ?ICS_boatInteriorLight [1]
;             ?ICS_boatNavigationLight [1]
0x4EA2	0x0000 ;_initBlock_29+0 : ?ICS_boatInteriorLight at 0x4EA2 : ?ICS_boatNavigationLight at 0x4EA3
; end of _initBlock_29
;,0 :: _initBlock_30 [2]
; Containing: ?ICS_boatBattery1 [1]
;             ?ICS_boatBattery2 [1]
0x4EA4	0x0000 ;_initBlock_30+0 : ?ICS_boatBattery1 at 0x4EA4 : ?ICS_boatBattery2 at 0x4EA5
; end of _initBlock_30
;nest.c,0 :: ?ICS_dutyy [2]
0x4EA6	0x0096 ;?ICS_dutyy+0
; end of ?ICS_dutyy
;nest.c,0 :: ?ICS_duzinaSignala2 [4]
0x4EA8	0x00000096 ;?ICS_duzinaSignala2+0
; end of ?ICS_duzinaSignala2
;nest.c,0 :: ?ICS_wheel_position_angle_double [4]
0x4EAC	0x00000000 ;?ICS_wheel_position_angle_double+0
; end of ?ICS_wheel_position_angle_double
;nest.c,0 :: ?ICS_wheel_position_angle [2]
0x4EB0	0x0000 ;?ICS_wheel_position_angle+0
; end of ?ICS_wheel_position_angle
;nest.c,0 :: ?ICS_wheel_position_direction [2]
0x4EB2	0x0000 ;?ICS_wheel_position_direction+0
; end of ?ICS_wheel_position_direction
;,0 :: _initBlock_36 [18]
; Containing: ?ICS_boatWheelDir [1]
;             ?ICS__Lib_System_4XX_APBAHBPrescTable [16]
;             ?ICS_receive4 [1]
0x4EB4	0x00000096 ;_initBlock_36+0 : ?ICS_boatWheelDir at 0x4EB4 : ?ICS__Lib_System_4XX_APBAHBPrescTable at 0x4EB5
0x4EB8	0x03020100 ;_initBlock_36+4
0x4EBC	0x03020104 ;_initBlock_36+8
0x4EC0	0x08070604 ;_initBlock_36+12
0x4EC4	0x0009 ;_initBlock_36+16 : ?ICS_receive4 at 0x4EC5
; end of _initBlock_36
;nest.c,0 :: ?ICS_delay3secndsCount [2]
0x4EC6	0x0000 ;?ICS_delay3secndsCount+0
; end of ?ICS_delay3secndsCount
;nest.c,0 :: ?ICS_controlTakenCount [2]
0x4EC8	0x0000 ;?ICS_controlTakenCount+0
; end of ?ICS_controlTakenCount
;nest.c,0 :: ?ICS_countJoystickConnection [2]
0x4ECA	0x0000 ;?ICS_countJoystickConnection+0
; end of ?ICS_countJoystickConnection
;nest.c,0 :: ?ICS_couterJoystickDisplay [2]
0x4ECC	0x0000 ;?ICS_couterJoystickDisplay+0
; end of ?ICS_couterJoystickDisplay
;,0 :: _initBlock_41 [2]
; Containing: ?ICS_rcv_count_helper4 [1]
;             ?ICS_receive3 [1]
0x4ECE	0x0000 ;_initBlock_41+0 : ?ICS_rcv_count_helper4 at 0x4ECE : ?ICS_receive3 at 0x4ECF
; end of _initBlock_41
;nest.c,0 :: ?ICS_uart_count4 [2]
0x4ED0	0x0000 ;?ICS_uart_count4+0
; end of ?ICS_uart_count4
;nest.c,0 :: ?ICS_uart_count3 [2]
0x4ED2	0x0000 ;?ICS_uart_count3+0
; end of ?ICS_uart_count3
;nest.c,0 :: ?ICS_receive6 [1]
0x4ED4	0x00 ;?ICS_receive6+0
; end of ?ICS_receive6
;__Lib_GPIO_32F4xx_Defs.c,766 :: __GPIO_MODULE_I2C1_PB67 [108]
0x4ED8	0x00000416 ;__GPIO_MODULE_I2C1_PB67+0
0x4EDC	0x00000417 ;__GPIO_MODULE_I2C1_PB67+4
0x4EE0	0xFFFFFFFF ;__GPIO_MODULE_I2C1_PB67+8
0x4EE4	0x00000000 ;__GPIO_MODULE_I2C1_PB67+12
0x4EE8	0x00000000 ;__GPIO_MODULE_I2C1_PB67+16
0x4EEC	0x00000000 ;__GPIO_MODULE_I2C1_PB67+20
0x4EF0	0x00000000 ;__GPIO_MODULE_I2C1_PB67+24
0x4EF4	0x00000000 ;__GPIO_MODULE_I2C1_PB67+28
0x4EF8	0x00000000 ;__GPIO_MODULE_I2C1_PB67+32
0x4EFC	0x00000000 ;__GPIO_MODULE_I2C1_PB67+36
0x4F00	0x00000000 ;__GPIO_MODULE_I2C1_PB67+40
0x4F04	0x00000000 ;__GPIO_MODULE_I2C1_PB67+44
0x4F08	0x00000000 ;__GPIO_MODULE_I2C1_PB67+48
0x4F0C	0x00000828 ;__GPIO_MODULE_I2C1_PB67+52
0x4F10	0x00000828 ;__GPIO_MODULE_I2C1_PB67+56
0x4F14	0x00000000 ;__GPIO_MODULE_I2C1_PB67+60
0x4F18	0x00000000 ;__GPIO_MODULE_I2C1_PB67+64
0x4F1C	0x00000000 ;__GPIO_MODULE_I2C1_PB67+68
0x4F20	0x00000000 ;__GPIO_MODULE_I2C1_PB67+72
0x4F24	0x00000000 ;__GPIO_MODULE_I2C1_PB67+76
0x4F28	0x00000000 ;__GPIO_MODULE_I2C1_PB67+80
0x4F2C	0x00000000 ;__GPIO_MODULE_I2C1_PB67+84
0x4F30	0x00000000 ;__GPIO_MODULE_I2C1_PB67+88
0x4F34	0x00000000 ;__GPIO_MODULE_I2C1_PB67+92
0x4F38	0x00000000 ;__GPIO_MODULE_I2C1_PB67+96
0x4F3C	0x00000000 ;__GPIO_MODULE_I2C1_PB67+100
0x4F40	0x00000000 ;__GPIO_MODULE_I2C1_PB67+104
; end of __GPIO_MODULE_I2C1_PB67
;__Lib_GPIO_32F4xx_Defs.c,509 :: __GPIO_MODULE_TIM3_CH2_PA7 [108]
0x4F44	0x00000207 ;__GPIO_MODULE_TIM3_CH2_PA7+0
0x4F48	0xFFFFFFFF ;__GPIO_MODULE_TIM3_CH2_PA7+4
0x4F4C	0x00000000 ;__GPIO_MODULE_TIM3_CH2_PA7+8
0x4F50	0x00000000 ;__GPIO_MODULE_TIM3_CH2_PA7+12
0x4F54	0x00000000 ;__GPIO_MODULE_TIM3_CH2_PA7+16
0x4F58	0x00000000 ;__GPIO_MODULE_TIM3_CH2_PA7+20
0x4F5C	0x00000000 ;__GPIO_MODULE_TIM3_CH2_PA7+24
0x4F60	0x00000000 ;__GPIO_MODULE_TIM3_CH2_PA7+28
0x4F64	0x00000000 ;__GPIO_MODULE_TIM3_CH2_PA7+32
0x4F68	0x00000000 ;__GPIO_MODULE_TIM3_CH2_PA7+36
0x4F6C	0x00000000 ;__GPIO_MODULE_TIM3_CH2_PA7+40
0x4F70	0x00000000 ;__GPIO_MODULE_TIM3_CH2_PA7+44
0x4F74	0x00000000 ;__GPIO_MODULE_TIM3_CH2_PA7+48
0x4F78	0x00000818 ;__GPIO_MODULE_TIM3_CH2_PA7+52
0x4F7C	0xFFFFFFFF ;__GPIO_MODULE_TIM3_CH2_PA7+56
0x4F80	0x00000000 ;__GPIO_MODULE_TIM3_CH2_PA7+60
0x4F84	0x00000000 ;__GPIO_MODULE_TIM3_CH2_PA7+64
0x4F88	0x00000000 ;__GPIO_MODULE_TIM3_CH2_PA7+68
0x4F8C	0x00000000 ;__GPIO_MODULE_TIM3_CH2_PA7+72
0x4F90	0x00000000 ;__GPIO_MODULE_TIM3_CH2_PA7+76
0x4F94	0x00000000 ;__GPIO_MODULE_TIM3_CH2_PA7+80
0x4F98	0x00000000 ;__GPIO_MODULE_TIM3_CH2_PA7+84
0x4F9C	0x00000000 ;__GPIO_MODULE_TIM3_CH2_PA7+88
0x4FA0	0x00000000 ;__GPIO_MODULE_TIM3_CH2_PA7+92
0x4FA4	0x00000000 ;__GPIO_MODULE_TIM3_CH2_PA7+96
0x4FA8	0x00000000 ;__GPIO_MODULE_TIM3_CH2_PA7+100
0x4FAC	0x00000000 ;__GPIO_MODULE_TIM3_CH2_PA7+104
; end of __GPIO_MODULE_TIM3_CH2_PA7
;__Lib_GPIO_32F4xx_Defs.c,818 :: __GPIO_MODULE_USART3_PB10_11 [108]
0x4FB0	0x0000071A ;__GPIO_MODULE_USART3_PB10_11+0
0x4FB4	0x0000071B ;__GPIO_MODULE_USART3_PB10_11+4
0x4FB8	0xFFFFFFFF ;__GPIO_MODULE_USART3_PB10_11+8
0x4FBC	0x00000000 ;__GPIO_MODULE_USART3_PB10_11+12
0x4FC0	0x00000000 ;__GPIO_MODULE_USART3_PB10_11+16
0x4FC4	0x00000000 ;__GPIO_MODULE_USART3_PB10_11+20
0x4FC8	0x00000000 ;__GPIO_MODULE_USART3_PB10_11+24
0x4FCC	0x00000000 ;__GPIO_MODULE_USART3_PB10_11+28
0x4FD0	0x00000000 ;__GPIO_MODULE_USART3_PB10_11+32
0x4FD4	0x00000000 ;__GPIO_MODULE_USART3_PB10_11+36
0x4FD8	0x00000000 ;__GPIO_MODULE_USART3_PB10_11+40
0x4FDC	0x00000000 ;__GPIO_MODULE_USART3_PB10_11+44
0x4FE0	0x00000000 ;__GPIO_MODULE_USART3_PB10_11+48
0x4FE4	0x00000818 ;__GPIO_MODULE_USART3_PB10_11+52
0x4FE8	0x00000818 ;__GPIO_MODULE_USART3_PB10_11+56
0x4FEC	0x00000000 ;__GPIO_MODULE_USART3_PB10_11+60
0x4FF0	0x00000000 ;__GPIO_MODULE_USART3_PB10_11+64
0x4FF4	0x00000000 ;__GPIO_MODULE_USART3_PB10_11+68
0x4FF8	0x00000000 ;__GPIO_MODULE_USART3_PB10_11+72
0x4FFC	0x00000000 ;__GPIO_MODULE_USART3_PB10_11+76
0x5000	0x00000000 ;__GPIO_MODULE_USART3_PB10_11+80
0x5004	0x00000000 ;__GPIO_MODULE_USART3_PB10_11+84
0x5008	0x00000000 ;__GPIO_MODULE_USART3_PB10_11+88
0x500C	0x00000000 ;__GPIO_MODULE_USART3_PB10_11+92
0x5010	0x00000000 ;__GPIO_MODULE_USART3_PB10_11+96
0x5014	0x00000000 ;__GPIO_MODULE_USART3_PB10_11+100
0x5018	0x00000000 ;__GPIO_MODULE_USART3_PB10_11+104
; end of __GPIO_MODULE_USART3_PB10_11
;__Lib_GPIO_32F4xx_Defs.c,834 :: __GPIO_MODULE_USART6_PC67 [108]
0x501C	0x00000826 ;__GPIO_MODULE_USART6_PC67+0
0x5020	0x00000827 ;__GPIO_MODULE_USART6_PC67+4
0x5024	0xFFFFFFFF ;__GPIO_MODULE_USART6_PC67+8
0x5028	0x00000000 ;__GPIO_MODULE_USART6_PC67+12
0x502C	0x00000000 ;__GPIO_MODULE_USART6_PC67+16
0x5030	0x00000000 ;__GPIO_MODULE_USART6_PC67+20
0x5034	0x00000000 ;__GPIO_MODULE_USART6_PC67+24
0x5038	0x00000000 ;__GPIO_MODULE_USART6_PC67+28
0x503C	0x00000000 ;__GPIO_MODULE_USART6_PC67+32
0x5040	0x00000000 ;__GPIO_MODULE_USART6_PC67+36
0x5044	0x00000000 ;__GPIO_MODULE_USART6_PC67+40
0x5048	0x00000000 ;__GPIO_MODULE_USART6_PC67+44
0x504C	0x00000000 ;__GPIO_MODULE_USART6_PC67+48
0x5050	0x00000818 ;__GPIO_MODULE_USART6_PC67+52
0x5054	0x00000818 ;__GPIO_MODULE_USART6_PC67+56
0x5058	0x00000000 ;__GPIO_MODULE_USART6_PC67+60
0x505C	0x00000000 ;__GPIO_MODULE_USART6_PC67+64
0x5060	0x00000000 ;__GPIO_MODULE_USART6_PC67+68
0x5064	0x00000000 ;__GPIO_MODULE_USART6_PC67+72
0x5068	0x00000000 ;__GPIO_MODULE_USART6_PC67+76
0x506C	0x00000000 ;__GPIO_MODULE_USART6_PC67+80
0x5070	0x00000000 ;__GPIO_MODULE_USART6_PC67+84
0x5074	0x00000000 ;__GPIO_MODULE_USART6_PC67+88
0x5078	0x00000000 ;__GPIO_MODULE_USART6_PC67+92
0x507C	0x00000000 ;__GPIO_MODULE_USART6_PC67+96
0x5080	0x00000000 ;__GPIO_MODULE_USART6_PC67+100
0x5084	0x00000000 ;__GPIO_MODULE_USART6_PC67+104
; end of __GPIO_MODULE_USART6_PC67
;__Lib_GPIO_32F4xx_Defs.c,830 :: __GPIO_MODULE_UART4_PA01 [108]
0x5088	0x00000800 ;__GPIO_MODULE_UART4_PA01+0
0x508C	0x00000801 ;__GPIO_MODULE_UART4_PA01+4
0x5090	0xFFFFFFFF ;__GPIO_MODULE_UART4_PA01+8
0x5094	0x00000000 ;__GPIO_MODULE_UART4_PA01+12
0x5098	0x00000000 ;__GPIO_MODULE_UART4_PA01+16
0x509C	0x00000000 ;__GPIO_MODULE_UART4_PA01+20
0x50A0	0x00000000 ;__GPIO_MODULE_UART4_PA01+24
0x50A4	0x00000000 ;__GPIO_MODULE_UART4_PA01+28
0x50A8	0x00000000 ;__GPIO_MODULE_UART4_PA01+32
0x50AC	0x00000000 ;__GPIO_MODULE_UART4_PA01+36
0x50B0	0x00000000 ;__GPIO_MODULE_UART4_PA01+40
0x50B4	0x00000000 ;__GPIO_MODULE_UART4_PA01+44
0x50B8	0x00000000 ;__GPIO_MODULE_UART4_PA01+48
0x50BC	0x00000818 ;__GPIO_MODULE_UART4_PA01+52
0x50C0	0x00000818 ;__GPIO_MODULE_UART4_PA01+56
0x50C4	0x00000000 ;__GPIO_MODULE_UART4_PA01+60
0x50C8	0x00000000 ;__GPIO_MODULE_UART4_PA01+64
0x50CC	0x00000000 ;__GPIO_MODULE_UART4_PA01+68
0x50D0	0x00000000 ;__GPIO_MODULE_UART4_PA01+72
0x50D4	0x00000000 ;__GPIO_MODULE_UART4_PA01+76
0x50D8	0x00000000 ;__GPIO_MODULE_UART4_PA01+80
0x50DC	0x00000000 ;__GPIO_MODULE_UART4_PA01+84
0x50E0	0x00000000 ;__GPIO_MODULE_UART4_PA01+88
0x50E4	0x00000000 ;__GPIO_MODULE_UART4_PA01+92
0x50E8	0x00000000 ;__GPIO_MODULE_UART4_PA01+96
0x50EC	0x00000000 ;__GPIO_MODULE_UART4_PA01+100
0x50F0	0x00000000 ;__GPIO_MODULE_UART4_PA01+104
; end of __GPIO_MODULE_UART4_PA01
;__Lib_GPIO_32F4xx_Defs.c,798 :: __GPIO_MODULE_USART1_PA9_10 [108]
0x50F4	0x00000709 ;__GPIO_MODULE_USART1_PA9_10+0
0x50F8	0x0000070A ;__GPIO_MODULE_USART1_PA9_10+4
0x50FC	0xFFFFFFFF ;__GPIO_MODULE_USART1_PA9_10+8
0x5100	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+12
0x5104	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+16
0x5108	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+20
0x510C	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+24
0x5110	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+28
0x5114	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+32
0x5118	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+36
0x511C	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+40
0x5120	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+44
0x5124	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+48
0x5128	0x00000818 ;__GPIO_MODULE_USART1_PA9_10+52
0x512C	0x00000818 ;__GPIO_MODULE_USART1_PA9_10+56
0x5130	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+60
0x5134	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+64
0x5138	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+68
0x513C	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+72
0x5140	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+76
0x5144	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+80
0x5148	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+84
0x514C	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+88
0x5150	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+92
0x5154	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+96
0x5158	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+100
0x515C	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+104
; end of __GPIO_MODULE_USART1_PA9_10
;nest.c,0 :: ?ICS_uart_count6 [2]
0x5160	0x0000 ;?ICS_uart_count6+0
; end of ?ICS_uart_count6
;nest.c,0 :: ?ICS_uartLength6 [2]
0x5162	0x0000 ;?ICS_uartLength6+0
; end of ?ICS_uartLength6
;nest.c,0 :: ?ICS_velocity_mode_save [2]
0x5164	0x0001 ;?ICS_velocity_mode_save+0
; end of ?ICS_velocity_mode_save
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0188     [168]    _GPIO_Clk_Enable
0x0230     [568]    _GPIO_Config
0x0468      [12]    _Get_Fosc_kHz
0x0474     [252]    __Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function
0x0570      [24]    _Delay_1us
0x0588     [196]    _crc8
0x064C      [28]    _UART1_Write
0x0668     [136]    __Lib_ADC_123_32F20x_16ch_ADCx_Get_Sample
0x06F0      [28]    _UART3_Write
0x070C      [30]    __Lib_UART_123_45_6_UARTx_Write
0x072C     [132]    _RCC_GetClocksFrequency
0x07B0      [70]    _GPIO_Alternate_Function_Enable
0x07F8     [206]    _uart4Battery2Level1
0x08C8      [62]    _uart4SpeedModeRabbit
0x0908      [62]    _uart4LeopardTurnedOn
0x0948      [62]    _uart4TurtleTurnedOff
0x0988      [28]    _UART4_Write
0x09A4      [62]    _uart4RabbitTurnedOn
0x09E4      [28]    _UART6_Write
0x0A00      [62]    _uart4RabbitTurnedOff
0x0A40      [62]    _uart4TurtleTurnedOn
0x0A80      [62]    _uart4SpeedModeTurtle
0x0AC0      [62]    _uart4LeopardTurnedOff
0x0B00     [206]    _uart4Battery2Level3
0x0BD0     [206]    _uart4Battery2Level2
0x0CA0     [206]    _uart4Battery1Level1
0x0D70     [206]    _uart4Battery2Level4
0x0E40     [288]    _ADC_Set_Input_Channel
0x0F60      [28]    _ADC2_Get_Sample
0x0F7C     [468]    _I2Cx_Init_Advanced
0x1150     [660]    __Lib_UART_123_45_6_UARTx_Init_Advanced
0x13E4      [84]    _uart3SendJoystick
0x1438     [144]    _uartSendCommandMotor
0x14C8      [22]    __Lib_UART_123_45_6_UARTx_Read
0x14E0     [380]    __Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init
0x165C     [142]    __Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Start
0x16EC     [206]    _uart4Battery1Level2
0x17BC      [62]    _uart4SpeedModeLeopard
0x17FC     [276]    __Lib_ADC_123_32F20x_16ch_ADCx_Init
0x1910     [206]    _uart4Battery1Level4
0x19E0      [70]    __Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Set_Duty
0x1A28     [206]    _uart4Battery1Level3
0x1AF8    [1380]    _batteryLavelMeasure
0x205C      [50]    _uart3ResetSensorTouch
0x2090      [76]    __Lib_System_4XX_SystemClockSetDefault
0x20DC      [56]    _uart4LeopardCheckStatus
0x2114      [64]    _uart3SendJoystickForced
0x2154      [24]    _UART4_Read
0x216C      [24]    _UART6_Read
0x2184      [24]    _UART2_Read
0x219C      [24]    _UART3_Read
0x21B4      [24]    _UART1_Read
0x21CC      [62]    _uart4InteriorLightTurnedOn
0x220C      [56]    _uart4CheckNavigationLightStatus
0x2244     [180]    _uartSendStatusToStation
0x22F8      [62]    _uart4NavigationLightTurnedOn
0x2338      [56]    _uart4CheckInteriorLightStatus
0x2370      [56]    _uart4TurtleCheckStatus
0x23A8      [56]    _uart4RabbitCheckStatus
0x23E0      [56]    _uart4CheckBattery1Status
0x2418      [56]    _uart4CheckBattery2Status
0x2450      [32]    _PWM_TIM3_Set_Duty
0x2470      [28]    _PWM_TIM3_Start
0x248C      [28]    _GPIO_Digital_Output
0x24A8      [28]    _PWM_TIM3_Init
0x24C4     [206]    _uart4Battery1Level0
0x2594     [206]    _uart4Battery2Level0
0x2664      [24]    _GPIO_Analog_Input
0x267C      [52]    _ADC2_Init
0x26B0      [58]    ___FillZeros
0x26EC      [40]    _UART6_Init_Advanced
0x2714     [120]    _NVIC_IntEnable
0x278C      [20]    ___CC2DW
0x27A0      [40]    _UART3_Init_Advanced
0x27C8      [28]    _I2C1_Init_Advanced
0x27E4      [40]    _UART4_Init_Advanced
0x280C      [40]    _UART1_Init_Advanced
0x2834      [62]    _uart4Battery1TurnedOff
0x2874     [192]    _batteryControlSwitches
0x2934      [62]    _uart4LightingTurnedOn
0x2974     [800]    _batteryChangeState
0x2C94      [62]    _uart4Battery1TurnedOn
0x2CD4     [168]    _gearVelocityMotorSpeedControl
0x2D7C      [62]    _uart4Battery2TurnedOn
0x2DBC     [292]    _directionWheelADC
0x2EE0      [84]    _lightControlSwitches
0x2F34      [62]    _uart4LightingTurnedOff
0x2F74      [62]    _uart4Battery2TurnedOff
0x2FB4      [62]    _uart4InteriorLightTurnedOff
0x2FF4      [62]    _uart4NavigationLightTurnedOff
0x3034     [304]    _change_velocity_mode
0x3164      [52]    _setup_IWDG
0x3198      [84]    _InitTimer2
0x31EC      [84]    _InitTimer4
0x3240     [228]    _Timer2_interrupt
0x3324      [28]    _interruptGps
0x3340    [1884]    _main
0x3A9C      [28]    _interruptMotor
0x3AB8    [1200]    _interruptLora
0x3F68       [8]    ___GenExcept
0x3F70      [36]    __Lib_System_4XX_InitialSetUpFosc
0x3F94     [864]    __Lib_System_4XX_InitialSetUpRCCRCC2
0x42F4      [42]    ___EnableFPU
0x4320     [548]    _interruptJoystick
0x4544    [1952]    _interruptDisplay
0x4CE4     [372]    _Timer4_interrupt
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x20000000       [2]    _battery_chosen
0x20000002       [2]    _battery_chosen_old
0x20000004       [2]    _battery_change_count
0x20000006       [2]    _wannaBeActiveBattery2
0x20000008       [2]    _wannaBeActiveBattery2_old
0x2000000A       [2]    _wannaBeActiveBattery1
0x2000000C       [2]    _wannaBeActiveBattery1_old
0x2000000E       [2]    _activeBattery
0x20000010       [2]    _batteryChangeBlockCounter
0x20000012       [2]    _battry_percentage_check_counter
0x20000014       [4]    _buzzerCounter
0x20000018       [2]    _i
0x2000001A       [2]    _j
0x2000001C       [4]    _adc_read2
0x20000020       [4]    _tmp
0x20000024       [4]    _adcSum2
0x20000028       [1]    _boatBatteriesLavel
0x20000029       [1]    _motorSpeed
0x2000002A       [2]    _velocity_mode_send
0x2000002C       [4]    _adc_read3
0x20000030       [4]    _adcSum3
0x20000034       [2]    _gear_status
0x20000036       [1]    _motorDirection
0x20000037       [1]    _boatControlTaken
0x20000038       [2]    _navigationLightState_old
0x2000003A       [2]    _navigationLightState
0x2000003C       [2]    _interiorLightState_old
0x2000003E       [2]    _interiorLightState
0x20000040       [4]    _pwm_frequency
0x20000044       [4]    _pwm_percent
0x20000048       [2]    _velocity_mode_new
0x2000004A       [1]    _boatInteriorLight
0x2000004B       [1]    _boatNavigationLight
0x2000004C       [1]    _boatBattery1
0x2000004D       [1]    _boatBattery2
0x2000004E       [2]    _dutyy
0x20000050       [4]    _duzinaSignala2
0x20000054       [4]    _wheel_position_angle_double
0x20000058       [2]    _wheel_position_angle
0x2000005A       [2]    _wheel_position_direction
0x2000005C       [1]    _boatWheelDir
0x2000005D      [16]    __Lib_System_4XX_APBAHBPrescTable
0x2000006D       [1]    _receive4
0x2000006E       [2]    _delay3secndsCount
0x20000070       [2]    _controlTakenCount
0x20000072       [2]    _countJoystickConnection
0x20000074       [2]    _couterJoystickDisplay
0x20000076       [1]    _rcv_count_helper4
0x20000077       [1]    _receive3
0x20000078       [2]    _uart_count4
0x2000007A       [2]    _uart_count3
0x2000007C       [1]    _receive6
0x2000007D       [0]    _bitStart3SecondsCount
0x2000007D       [0]    _battry_percentage_check
0x2000007D       [0]    _bitDelay3Seconds
0x2000007D       [0]    _countedTimer
0x2000007D       [0]    _bitBatteryChangeBlockCounter
0x2000007D       [0]    _battery_change
0x2000007D       [0]    _battery_change_continue
0x2000007D       [0]    _oldStateInteriorLight
0x2000007E       [2]    _uart_count6
0x20000080       [2]    _uartLength6
0x20000082       [2]    _velocity_mode_save
0x20000084       [4]    _battery_percentage1
0x20000088       [4]    _battery_percentage2
0x2000008C    [1200]    _adc_array2
0x2000053C       [4]    _adc_avg2
0x20000540    [1200]    _adc_array3
0x200009F0       [4]    _adc_avg3
0x200009F4       [2]    _velocity_gear1
0x200009F6       [2]    _velocity_gear2
0x200009F8       [2]    _velocity_gear3
0x200009FA       [2]    _velocity_gearR
0x200009FC       [2]    _velocity_gearS
0x200009FE       [2]    _velocity_mode
0x20000A00       [2]    _pwm_ratio
0x20000A02       [2]    _pwm_duty
0x20000A04       [0]    _oldStateBattery2
0x20000A04       [0]    _bitBattery1Change
0x20000A04       [0]    _status_asked
0x20000A04       [0]    _control_taken
0x20000A04       [0]    _startReceivingData6
0x20000A04       [0]    _oldStateNavigationLight
0x20000A04       [0]    _oldStateBattery1
0x20000A04       [0]    _receivedCheckStatus
0x20000A05       [0]    _resetedTouchSensor
0x20000A05       [0]    _resetTouchSensor
0x20000A05       [0]    _startReceivingData3
0x20000A05       [0]    _startReceivingData4
0x20000A05       [0]    _bitBattery2Change
0x20000A05       [0]    _navLightOff
0x20000A05       [0]    _navLightOn
0x20000A05       [0]    _bitCheckJoystick
0x20000A06       [0]    _bat1On
0x20000A06       [0]    _bat1Off
0x20000A06       [0]    _intLightOn
0x20000A06       [0]    _intLightOff
0x20000A06       [0]    _bat2On
0x20000A06       [0]    _bitCheckStatusDisplay
0x20000A06       [0]    _bitCheckStatusJoystick
0x20000A06       [0]    _bat2Off
0x20000A07       [0]    _controlWasTaken
0x20000A07       [0]    _stopGearBit
0x20000A07       [0]    _bitCheckIsItStoppedGear
0x20000A07       [0]    _countedTimer2
0x20000A07       [0]    _bitControlTaken
0x20000A07       [0]    _beingControlledByMobile
0x20000A08       [4]    _ADC_Get_Sample_Ptr
0x20000A0C       [4]    ___System_CLOCK_IN_KHZ
0x20000A10       [4]    _I2C_Start_Ptr
0x20000A14       [4]    _I2C_Read_Ptr
0x20000A18       [4]    _I2C_Write_Ptr
0x20000A1C       [4]    __VOLTAGE_RANGE
0x20000A20       [4]    _UART_Wr_Ptr
0x20000A24       [4]    _UART_Rd_Ptr
0x20000A28       [4]    _UART_Rdy_Ptr
0x20000A2C       [4]    _UART_Tx_Idle_Ptr
0x20000A30       [2]    _rcv_helper4
0x20000A32      [10]    _uart_receive4
0x20000A3C      [10]    _uart_receive3
0x20000A46       [2]    _uartLength3
0x20000A48       [1]    _receiveUart1
0x20000A49      [12]    _uart_receive6
0x20000A55       [1]    _receiveUart2
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x4E58       [2]    ?ICS_battery_chosen
0x4E5A       [2]    ?ICS_battery_chosen_old
0x4E5C       [2]    ?ICS_battery_change_count
0x4E5E       [2]    ?ICS_wannaBeActiveBattery2
0x4E60       [2]    ?ICS_wannaBeActiveBattery2_old
0x4E62       [2]    ?ICS_wannaBeActiveBattery1
0x4E64       [2]    ?ICS_wannaBeActiveBattery1_old
0x4E66       [2]    ?ICS_activeBattery
0x4E68       [2]    ?ICS_batteryChangeBlockCounter
0x4E6A       [2]    ?ICS_battry_percentage_check_counter
0x4E6C       [4]    ?ICS_buzzerCounter
0x4E70       [2]    ?ICS_i
0x4E72       [2]    ?ICS_j
0x4E74       [4]    ?ICS_adc_read2
0x4E78       [4]    ?ICS_tmp
0x4E7C       [4]    ?ICS_adcSum2
0x4E80       [1]    ?ICS_boatBatteriesLavel
0x4E81       [1]    ?ICS_motorSpeed
0x4E82       [2]    ?ICS_velocity_mode_send
0x4E84       [4]    ?ICS_adc_read3
0x4E88       [4]    ?ICS_adcSum3
0x4E8C       [2]    ?ICS_gear_status
0x4E8E       [1]    ?ICS_motorDirection
0x4E8F       [1]    ?ICS_boatControlTaken
0x4E90       [2]    ?ICS_navigationLightState_old
0x4E92       [2]    ?ICS_navigationLightState
0x4E94       [2]    ?ICS_interiorLightState_old
0x4E96       [2]    ?ICS_interiorLightState
0x4E98       [4]    ?ICS_pwm_frequency
0x4E9C       [4]    ?ICS_pwm_percent
0x4EA0       [2]    ?ICS_velocity_mode_new
0x4EA2       [1]    ?ICS_boatInteriorLight
0x4EA3       [1]    ?ICS_boatNavigationLight
0x4EA4       [1]    ?ICS_boatBattery1
0x4EA5       [1]    ?ICS_boatBattery2
0x4EA6       [2]    ?ICS_dutyy
0x4EA8       [4]    ?ICS_duzinaSignala2
0x4EAC       [4]    ?ICS_wheel_position_angle_double
0x4EB0       [2]    ?ICS_wheel_position_angle
0x4EB2       [2]    ?ICS_wheel_position_direction
0x4EB4       [1]    ?ICS_boatWheelDir
0x4EB5      [16]    ?ICS__Lib_System_4XX_APBAHBPrescTable
0x4EC5       [1]    ?ICS_receive4
0x4EC6       [2]    ?ICS_delay3secndsCount
0x4EC8       [2]    ?ICS_controlTakenCount
0x4ECA       [2]    ?ICS_countJoystickConnection
0x4ECC       [2]    ?ICS_couterJoystickDisplay
0x4ECE       [1]    ?ICS_rcv_count_helper4
0x4ECF       [1]    ?ICS_receive3
0x4ED0       [2]    ?ICS_uart_count4
0x4ED2       [2]    ?ICS_uart_count3
0x4ED4       [1]    ?ICS_receive6
0x4ED8     [108]    __GPIO_MODULE_I2C1_PB67
0x4F44     [108]    __GPIO_MODULE_TIM3_CH2_PA7
0x4FB0     [108]    __GPIO_MODULE_USART3_PB10_11
0x501C     [108]    __GPIO_MODULE_USART6_PC67
0x5088     [108]    __GPIO_MODULE_UART4_PA01
0x50F4     [108]    __GPIO_MODULE_USART1_PA9_10
0x5160       [2]    ?ICS_uart_count6
0x5162       [2]    ?ICS_uartLength6
0x5164       [2]    ?ICS_velocity_mode_save
